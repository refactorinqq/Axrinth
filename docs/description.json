{
	"id": 0,
	"name": "axrinth",
	"variant": "project",
	"kind": 1,
	"flags": {},
	"children": [
		{
			"id": 136,
			"name": "BaseProject",
			"variant": "declaration",
			"kind": 4,
			"flags": {},
			"children": [
				{
					"id": 137,
					"name": "client_side",
					"variant": "declaration",
					"kind": 8,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The client side support of the project"
							}
						]
					},
					"children": [
						{
							"id": 139,
							"name": "OPTIONAL",
							"variant": "declaration",
							"kind": 16,
							"flags": {},
							"sources": [
								{
									"fileName": "src/models/BaseProject.ts",
									"line": 40,
									"character": 8
								}
							],
							"type": {
								"type": "literal",
								"value": "optional"
							}
						},
						{
							"id": 138,
							"name": "REQUIRED",
							"variant": "declaration",
							"kind": 16,
							"flags": {},
							"sources": [
								{
									"fileName": "src/models/BaseProject.ts",
									"line": 39,
									"character": 8
								}
							],
							"type": {
								"type": "literal",
								"value": "required"
							}
						},
						{
							"id": 140,
							"name": "UNSUPPORTED",
							"variant": "declaration",
							"kind": 16,
							"flags": {},
							"sources": [
								{
									"fileName": "src/models/BaseProject.ts",
									"line": 41,
									"character": 8
								}
							],
							"type": {
								"type": "literal",
								"value": "unsupported"
							}
						}
					],
					"groups": [
						{
							"title": "Enumeration Members",
							"children": [
								139,
								138,
								140
							]
						}
					],
					"sources": [
						{
							"fileName": "src/models/BaseProject.ts",
							"line": 38,
							"character": 16
						}
					]
				},
				{
					"id": 141,
					"name": "server_side",
					"variant": "declaration",
					"kind": 8,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The server side support of the project"
							}
						]
					},
					"children": [
						{
							"id": 143,
							"name": "OPTIONAL",
							"variant": "declaration",
							"kind": 16,
							"flags": {},
							"sources": [
								{
									"fileName": "src/models/BaseProject.ts",
									"line": 49,
									"character": 8
								}
							],
							"type": {
								"type": "literal",
								"value": "optional"
							}
						},
						{
							"id": 142,
							"name": "REQUIRED",
							"variant": "declaration",
							"kind": 16,
							"flags": {},
							"sources": [
								{
									"fileName": "src/models/BaseProject.ts",
									"line": 48,
									"character": 8
								}
							],
							"type": {
								"type": "literal",
								"value": "required"
							}
						},
						{
							"id": 144,
							"name": "UNSUPPORTED",
							"variant": "declaration",
							"kind": 16,
							"flags": {},
							"sources": [
								{
									"fileName": "src/models/BaseProject.ts",
									"line": 50,
									"character": 8
								}
							],
							"type": {
								"type": "literal",
								"value": "unsupported"
							}
						}
					],
					"groups": [
						{
							"title": "Enumeration Members",
							"children": [
								143,
								142,
								144
							]
						}
					],
					"sources": [
						{
							"fileName": "src/models/BaseProject.ts",
							"line": 47,
							"character": 16
						}
					]
				}
			],
			"groups": [
				{
					"title": "Enumerations",
					"children": [
						137,
						141
					]
				}
			],
			"sources": [
				{
					"fileName": "src/models/BaseProject.ts",
					"line": 6,
					"character": 12
				},
				{
					"fileName": "src/models/BaseProject.ts",
					"line": 33,
					"character": 17
				}
			]
		},
		{
			"id": 157,
			"name": "BaseVersion",
			"variant": "declaration",
			"kind": 4,
			"flags": {},
			"children": [
				{
					"id": 169,
					"name": "requested_status",
					"variant": "declaration",
					"kind": 8,
					"flags": {},
					"children": [
						{
							"id": 171,
							"name": "ARCHIVED",
							"variant": "declaration",
							"kind": 16,
							"flags": {},
							"sources": [
								{
									"fileName": "src/models/BaseVersion.ts",
									"line": 67,
									"character": 8
								}
							],
							"type": {
								"type": "literal",
								"value": "archived"
							}
						},
						{
							"id": 172,
							"name": "DRAFT",
							"variant": "declaration",
							"kind": 16,
							"flags": {},
							"sources": [
								{
									"fileName": "src/models/BaseVersion.ts",
									"line": 68,
									"character": 8
								}
							],
							"type": {
								"type": "literal",
								"value": "draft"
							}
						},
						{
							"id": 170,
							"name": "LISTED",
							"variant": "declaration",
							"kind": 16,
							"flags": {},
							"sources": [
								{
									"fileName": "src/models/BaseVersion.ts",
									"line": 66,
									"character": 8
								}
							],
							"type": {
								"type": "literal",
								"value": "listed"
							}
						},
						{
							"id": 173,
							"name": "UNLISTED",
							"variant": "declaration",
							"kind": 16,
							"flags": {},
							"sources": [
								{
									"fileName": "src/models/BaseVersion.ts",
									"line": 69,
									"character": 8
								}
							],
							"type": {
								"type": "literal",
								"value": "unlisted"
							}
						}
					],
					"groups": [
						{
							"title": "Enumeration Members",
							"children": [
								171,
								172,
								170,
								173
							]
						}
					],
					"sources": [
						{
							"fileName": "src/models/BaseVersion.ts",
							"line": 65,
							"character": 16
						}
					]
				},
				{
					"id": 162,
					"name": "status",
					"variant": "declaration",
					"kind": 8,
					"flags": {},
					"children": [
						{
							"id": 164,
							"name": "ARCHIVED",
							"variant": "declaration",
							"kind": 16,
							"flags": {},
							"sources": [
								{
									"fileName": "src/models/BaseVersion.ts",
									"line": 58,
									"character": 8
								}
							],
							"type": {
								"type": "literal",
								"value": "archived"
							}
						},
						{
							"id": 165,
							"name": "DRAFT",
							"variant": "declaration",
							"kind": 16,
							"flags": {},
							"sources": [
								{
									"fileName": "src/models/BaseVersion.ts",
									"line": 59,
									"character": 8
								}
							],
							"type": {
								"type": "literal",
								"value": "draft"
							}
						},
						{
							"id": 163,
							"name": "LISTED",
							"variant": "declaration",
							"kind": 16,
							"flags": {},
							"sources": [
								{
									"fileName": "src/models/BaseVersion.ts",
									"line": 57,
									"character": 8
								}
							],
							"type": {
								"type": "literal",
								"value": "listed"
							}
						},
						{
							"id": 167,
							"name": "SCHEDULED",
							"variant": "declaration",
							"kind": 16,
							"flags": {},
							"sources": [
								{
									"fileName": "src/models/BaseVersion.ts",
									"line": 61,
									"character": 8
								}
							],
							"type": {
								"type": "literal",
								"value": "scheduled"
							}
						},
						{
							"id": 168,
							"name": "UNKNOWN",
							"variant": "declaration",
							"kind": 16,
							"flags": {},
							"sources": [
								{
									"fileName": "src/models/BaseVersion.ts",
									"line": 62,
									"character": 8
								}
							],
							"type": {
								"type": "literal",
								"value": "unknown"
							}
						},
						{
							"id": 166,
							"name": "UNLISTED",
							"variant": "declaration",
							"kind": 16,
							"flags": {},
							"sources": [
								{
									"fileName": "src/models/BaseVersion.ts",
									"line": 60,
									"character": 8
								}
							],
							"type": {
								"type": "literal",
								"value": "unlisted"
							}
						}
					],
					"groups": [
						{
							"title": "Enumeration Members",
							"children": [
								164,
								165,
								163,
								167,
								168,
								166
							]
						}
					],
					"sources": [
						{
							"fileName": "src/models/BaseVersion.ts",
							"line": 56,
							"character": 16
						}
					]
				},
				{
					"id": 158,
					"name": "version_type",
					"variant": "declaration",
					"kind": 8,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The release channel for this version"
							}
						]
					},
					"children": [
						{
							"id": 161,
							"name": "ALPHA",
							"variant": "declaration",
							"kind": 16,
							"flags": {},
							"sources": [
								{
									"fileName": "src/models/BaseVersion.ts",
									"line": 53,
									"character": 8
								}
							],
							"type": {
								"type": "literal",
								"value": "alpha"
							}
						},
						{
							"id": 160,
							"name": "BETA",
							"variant": "declaration",
							"kind": 16,
							"flags": {},
							"sources": [
								{
									"fileName": "src/models/BaseVersion.ts",
									"line": 52,
									"character": 8
								}
							],
							"type": {
								"type": "literal",
								"value": "beta"
							}
						},
						{
							"id": 159,
							"name": "RELEASE",
							"variant": "declaration",
							"kind": 16,
							"flags": {},
							"sources": [
								{
									"fileName": "src/models/BaseVersion.ts",
									"line": 51,
									"character": 8
								}
							],
							"type": {
								"type": "literal",
								"value": "release"
							}
						}
					],
					"groups": [
						{
							"title": "Enumeration Members",
							"children": [
								161,
								160,
								159
							]
						}
					],
					"sources": [
						{
							"fileName": "src/models/BaseVersion.ts",
							"line": 50,
							"character": 16
						}
					]
				}
			],
			"groups": [
				{
					"title": "Enumerations",
					"children": [
						169,
						162,
						158
					]
				}
			],
			"sources": [
				{
					"fileName": "src/models/BaseVersion.ts",
					"line": 8,
					"character": 12
				},
				{
					"fileName": "src/models/BaseVersion.ts",
					"line": 45,
					"character": 17
				}
			]
		},
		{
			"id": 186,
			"name": "CreatableProject",
			"variant": "declaration",
			"kind": 4,
			"flags": {},
			"children": [
				{
					"id": 187,
					"name": "project_type",
					"variant": "declaration",
					"kind": 8,
					"flags": {},
					"children": [
						{
							"id": 188,
							"name": "MOD",
							"variant": "declaration",
							"kind": 16,
							"flags": {},
							"sources": [
								{
									"fileName": "src/models/CreatableProject.ts",
									"line": 32,
									"character": 8
								}
							],
							"type": {
								"type": "literal",
								"value": "mod"
							}
						},
						{
							"id": 189,
							"name": "MODPACK",
							"variant": "declaration",
							"kind": 16,
							"flags": {},
							"sources": [
								{
									"fileName": "src/models/CreatableProject.ts",
									"line": 33,
									"character": 8
								}
							],
							"type": {
								"type": "literal",
								"value": "modpack"
							}
						}
					],
					"groups": [
						{
							"title": "Enumeration Members",
							"children": [
								188,
								189
							]
						}
					],
					"sources": [
						{
							"fileName": "src/models/CreatableProject.ts",
							"line": 31,
							"character": 16
						}
					]
				}
			],
			"groups": [
				{
					"title": "Enumerations",
					"children": [
						187
					]
				}
			],
			"sources": [
				{
					"fileName": "src/models/CreatableProject.ts",
					"line": 10,
					"character": 12
				},
				{
					"fileName": "src/models/CreatableProject.ts",
					"line": 29,
					"character": 17
				}
			]
		},
		{
			"id": 203,
			"name": "CreatableReport",
			"variant": "declaration",
			"kind": 4,
			"flags": {},
			"children": [
				{
					"id": 204,
					"name": "item_type",
					"variant": "declaration",
					"kind": 8,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The type of the item being reported"
							}
						]
					},
					"children": [
						{
							"id": 205,
							"name": "PROJECT",
							"variant": "declaration",
							"kind": 16,
							"flags": {},
							"sources": [
								{
									"fileName": "src/models/CreatableReport.ts",
									"line": 31,
									"character": 8
								}
							],
							"type": {
								"type": "literal",
								"value": "project"
							}
						},
						{
							"id": 206,
							"name": "USER",
							"variant": "declaration",
							"kind": 16,
							"flags": {},
							"sources": [
								{
									"fileName": "src/models/CreatableReport.ts",
									"line": 32,
									"character": 8
								}
							],
							"type": {
								"type": "literal",
								"value": "user"
							}
						},
						{
							"id": 207,
							"name": "VERSION",
							"variant": "declaration",
							"kind": 16,
							"flags": {},
							"sources": [
								{
									"fileName": "src/models/CreatableReport.ts",
									"line": 33,
									"character": 8
								}
							],
							"type": {
								"type": "literal",
								"value": "version"
							}
						}
					],
					"groups": [
						{
							"title": "Enumeration Members",
							"children": [
								205,
								206,
								207
							]
						}
					],
					"sources": [
						{
							"fileName": "src/models/CreatableReport.ts",
							"line": 30,
							"character": 16
						}
					]
				}
			],
			"groups": [
				{
					"title": "Enumerations",
					"children": [
						204
					]
				}
			],
			"sources": [
				{
					"fileName": "src/models/CreatableReport.ts",
					"line": 6,
					"character": 12
				},
				{
					"fileName": "src/models/CreatableReport.ts",
					"line": 25,
					"character": 17
				}
			]
		},
		{
			"id": 217,
			"name": "CreateProjectBody",
			"variant": "declaration",
			"kind": 4,
			"flags": {},
			"children": [
				{
					"id": 218,
					"name": "icon",
					"variant": "declaration",
					"kind": 8,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Project icon file"
							}
						]
					},
					"children": [
						{
							"id": 222,
							"name": "_BMP",
							"variant": "declaration",
							"kind": 16,
							"flags": {},
							"sources": [
								{
									"fileName": "src/models/CreateProjectBody.ts",
									"line": 25,
									"character": 8
								}
							],
							"type": {
								"type": "literal",
								"value": "*.bmp"
							}
						},
						{
							"id": 223,
							"name": "_GIF",
							"variant": "declaration",
							"kind": 16,
							"flags": {},
							"sources": [
								{
									"fileName": "src/models/CreateProjectBody.ts",
									"line": 26,
									"character": 8
								}
							],
							"type": {
								"type": "literal",
								"value": "*.gif"
							}
						},
						{
							"id": 221,
							"name": "_JPEG",
							"variant": "declaration",
							"kind": 16,
							"flags": {},
							"sources": [
								{
									"fileName": "src/models/CreateProjectBody.ts",
									"line": 24,
									"character": 8
								}
							],
							"type": {
								"type": "literal",
								"value": "*.jpeg"
							}
						},
						{
							"id": 220,
							"name": "_JPG",
							"variant": "declaration",
							"kind": 16,
							"flags": {},
							"sources": [
								{
									"fileName": "src/models/CreateProjectBody.ts",
									"line": 23,
									"character": 8
								}
							],
							"type": {
								"type": "literal",
								"value": "*.jpg"
							}
						},
						{
							"id": 219,
							"name": "_PNG",
							"variant": "declaration",
							"kind": 16,
							"flags": {},
							"sources": [
								{
									"fileName": "src/models/CreateProjectBody.ts",
									"line": 22,
									"character": 8
								}
							],
							"type": {
								"type": "literal",
								"value": "*.png"
							}
						},
						{
							"id": 227,
							"name": "_RGB",
							"variant": "declaration",
							"kind": 16,
							"flags": {},
							"sources": [
								{
									"fileName": "src/models/CreateProjectBody.ts",
									"line": 30,
									"character": 8
								}
							],
							"type": {
								"type": "literal",
								"value": "*.rgb"
							}
						},
						{
							"id": 225,
							"name": "_SVG",
							"variant": "declaration",
							"kind": 16,
							"flags": {},
							"sources": [
								{
									"fileName": "src/models/CreateProjectBody.ts",
									"line": 28,
									"character": 8
								}
							],
							"type": {
								"type": "literal",
								"value": "*.svg"
							}
						},
						{
							"id": 226,
							"name": "_SVGZ",
							"variant": "declaration",
							"kind": 16,
							"flags": {},
							"sources": [
								{
									"fileName": "src/models/CreateProjectBody.ts",
									"line": 29,
									"character": 8
								}
							],
							"type": {
								"type": "literal",
								"value": "*.svgz"
							}
						},
						{
							"id": 224,
							"name": "_WEBP",
							"variant": "declaration",
							"kind": 16,
							"flags": {},
							"sources": [
								{
									"fileName": "src/models/CreateProjectBody.ts",
									"line": 27,
									"character": 8
								}
							],
							"type": {
								"type": "literal",
								"value": "*.webp"
							}
						}
					],
					"groups": [
						{
							"title": "Enumeration Members",
							"children": [
								222,
								223,
								221,
								220,
								219,
								227,
								225,
								226,
								224
							]
						}
					],
					"sources": [
						{
							"fileName": "src/models/CreateProjectBody.ts",
							"line": 21,
							"character": 16
						}
					]
				}
			],
			"groups": [
				{
					"title": "Enumerations",
					"children": [
						218
					]
				}
			],
			"sources": [
				{
					"fileName": "src/models/CreateProjectBody.ts",
					"line": 8,
					"character": 12
				},
				{
					"fileName": "src/models/CreateProjectBody.ts",
					"line": 16,
					"character": 17
				}
			]
		},
		{
			"id": 240,
			"name": "EditableFileType",
			"variant": "declaration",
			"kind": 4,
			"flags": {},
			"children": [
				{
					"id": 241,
					"name": "file_type",
					"variant": "declaration",
					"kind": 8,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The hash algorithm of the file you're editing"
							}
						]
					},
					"children": [
						{
							"id": 243,
							"name": "OPTIONAL_RESOURCE_PACK",
							"variant": "declaration",
							"kind": 16,
							"flags": {},
							"sources": [
								{
									"fileName": "src/models/EditableFileType.ts",
									"line": 28,
									"character": 8
								}
							],
							"type": {
								"type": "literal",
								"value": "optional-resource-pack"
							}
						},
						{
							"id": 242,
							"name": "REQUIRED_RESOURCE_PACK",
							"variant": "declaration",
							"kind": 16,
							"flags": {},
							"sources": [
								{
									"fileName": "src/models/EditableFileType.ts",
									"line": 27,
									"character": 8
								}
							],
							"type": {
								"type": "literal",
								"value": "required-resource-pack"
							}
						}
					],
					"groups": [
						{
							"title": "Enumeration Members",
							"children": [
								243,
								242
							]
						}
					],
					"sources": [
						{
							"fileName": "src/models/EditableFileType.ts",
							"line": 26,
							"character": 16
						}
					]
				}
			],
			"groups": [
				{
					"title": "Enumerations",
					"children": [
						241
					]
				}
			],
			"sources": [
				{
					"fileName": "src/models/EditableFileType.ts",
					"line": 6,
					"character": 12
				},
				{
					"fileName": "src/models/EditableFileType.ts",
					"line": 21,
					"character": 17
				}
			]
		},
		{
			"id": 282,
			"name": "GameVersionTag",
			"variant": "declaration",
			"kind": 4,
			"flags": {},
			"children": [
				{
					"id": 283,
					"name": "version_type",
					"variant": "declaration",
					"kind": 8,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The type of the game version"
							}
						]
					},
					"children": [
						{
							"id": 286,
							"name": "ALPHA",
							"variant": "declaration",
							"kind": 16,
							"flags": {},
							"sources": [
								{
									"fileName": "src/models/GameVersionTag.ts",
									"line": 33,
									"character": 8
								}
							],
							"type": {
								"type": "literal",
								"value": "alpha"
							}
						},
						{
							"id": 287,
							"name": "BETA",
							"variant": "declaration",
							"kind": 16,
							"flags": {},
							"sources": [
								{
									"fileName": "src/models/GameVersionTag.ts",
									"line": 34,
									"character": 8
								}
							],
							"type": {
								"type": "literal",
								"value": "beta"
							}
						},
						{
							"id": 284,
							"name": "RELEASE",
							"variant": "declaration",
							"kind": 16,
							"flags": {},
							"sources": [
								{
									"fileName": "src/models/GameVersionTag.ts",
									"line": 31,
									"character": 8
								}
							],
							"type": {
								"type": "literal",
								"value": "release"
							}
						},
						{
							"id": 285,
							"name": "SNAPSHOT",
							"variant": "declaration",
							"kind": 16,
							"flags": {},
							"sources": [
								{
									"fileName": "src/models/GameVersionTag.ts",
									"line": 32,
									"character": 8
								}
							],
							"type": {
								"type": "literal",
								"value": "snapshot"
							}
						}
					],
					"groups": [
						{
							"title": "Enumeration Members",
							"children": [
								286,
								287,
								284,
								285
							]
						}
					],
					"sources": [
						{
							"fileName": "src/models/GameVersionTag.ts",
							"line": 30,
							"character": 16
						}
					]
				}
			],
			"groups": [
				{
					"title": "Enumerations",
					"children": [
						283
					]
				}
			],
			"sources": [
				{
					"fileName": "src/models/GameVersionTag.ts",
					"line": 6,
					"character": 12
				},
				{
					"fileName": "src/models/GameVersionTag.ts",
					"line": 25,
					"character": 17
				}
			]
		},
		{
			"id": 300,
			"name": "HashList",
			"variant": "declaration",
			"kind": 4,
			"flags": {},
			"children": [
				{
					"id": 301,
					"name": "algorithm",
					"variant": "declaration",
					"kind": 8,
					"flags": {},
					"children": [
						{
							"id": 302,
							"name": "SHA1",
							"variant": "declaration",
							"kind": 16,
							"flags": {},
							"sources": [
								{
									"fileName": "src/models/HashList.ts",
									"line": 17,
									"character": 8
								}
							],
							"type": {
								"type": "literal",
								"value": "sha1"
							}
						},
						{
							"id": 303,
							"name": "SHA512",
							"variant": "declaration",
							"kind": 16,
							"flags": {},
							"sources": [
								{
									"fileName": "src/models/HashList.ts",
									"line": 18,
									"character": 8
								}
							],
							"type": {
								"type": "literal",
								"value": "sha512"
							}
						}
					],
					"groups": [
						{
							"title": "Enumeration Members",
							"children": [
								302,
								303
							]
						}
					],
					"sources": [
						{
							"fileName": "src/models/HashList.ts",
							"line": 16,
							"character": 16
						}
					]
				}
			],
			"groups": [
				{
					"title": "Enumerations",
					"children": [
						301
					]
				}
			],
			"sources": [
				{
					"fileName": "src/models/HashList.ts",
					"line": 9,
					"character": 12
				},
				{
					"fileName": "src/models/HashList.ts",
					"line": 14,
					"character": 17
				}
			]
		},
		{
			"id": 345,
			"name": "NonSearchProject",
			"variant": "declaration",
			"kind": 4,
			"flags": {},
			"children": [
				{
					"id": 357,
					"name": "requested_status",
					"variant": "declaration",
					"kind": 8,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The requested status when submitting for review or scheduling the project for release"
							}
						]
					},
					"children": [
						{
							"id": 358,
							"name": "APPROVED",
							"variant": "declaration",
							"kind": 16,
							"flags": {},
							"sources": [
								{
									"fileName": "src/models/NonSearchProject.ts",
									"line": 70,
									"character": 8
								}
							],
							"type": {
								"type": "literal",
								"value": "approved"
							}
						},
						{
							"id": 359,
							"name": "ARCHIVED",
							"variant": "declaration",
							"kind": 16,
							"flags": {},
							"sources": [
								{
									"fileName": "src/models/NonSearchProject.ts",
									"line": 71,
									"character": 8
								}
							],
							"type": {
								"type": "literal",
								"value": "archived"
							}
						},
						{
							"id": 362,
							"name": "DRAFT",
							"variant": "declaration",
							"kind": 16,
							"flags": {},
							"sources": [
								{
									"fileName": "src/models/NonSearchProject.ts",
									"line": 74,
									"character": 8
								}
							],
							"type": {
								"type": "literal",
								"value": "draft"
							}
						},
						{
							"id": 361,
							"name": "PRIVATE",
							"variant": "declaration",
							"kind": 16,
							"flags": {},
							"sources": [
								{
									"fileName": "src/models/NonSearchProject.ts",
									"line": 73,
									"character": 8
								}
							],
							"type": {
								"type": "literal",
								"value": "private"
							}
						},
						{
							"id": 360,
							"name": "UNLISTED",
							"variant": "declaration",
							"kind": 16,
							"flags": {},
							"sources": [
								{
									"fileName": "src/models/NonSearchProject.ts",
									"line": 72,
									"character": 8
								}
							],
							"type": {
								"type": "literal",
								"value": "unlisted"
							}
						}
					],
					"groups": [
						{
							"title": "Enumeration Members",
							"children": [
								358,
								359,
								362,
								361,
								360
							]
						}
					],
					"sources": [
						{
							"fileName": "src/models/NonSearchProject.ts",
							"line": 69,
							"character": 16
						}
					]
				},
				{
					"id": 346,
					"name": "status",
					"variant": "declaration",
					"kind": 8,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The status of the project"
							}
						]
					},
					"children": [
						{
							"id": 347,
							"name": "APPROVED",
							"variant": "declaration",
							"kind": 16,
							"flags": {},
							"sources": [
								{
									"fileName": "src/models/NonSearchProject.ts",
									"line": 54,
									"character": 8
								}
							],
							"type": {
								"type": "literal",
								"value": "approved"
							}
						},
						{
							"id": 348,
							"name": "ARCHIVED",
							"variant": "declaration",
							"kind": 16,
							"flags": {},
							"sources": [
								{
									"fileName": "src/models/NonSearchProject.ts",
									"line": 55,
									"character": 8
								}
							],
							"type": {
								"type": "literal",
								"value": "archived"
							}
						},
						{
							"id": 350,
							"name": "DRAFT",
							"variant": "declaration",
							"kind": 16,
							"flags": {},
							"sources": [
								{
									"fileName": "src/models/NonSearchProject.ts",
									"line": 57,
									"character": 8
								}
							],
							"type": {
								"type": "literal",
								"value": "draft"
							}
						},
						{
							"id": 355,
							"name": "PRIVATE",
							"variant": "declaration",
							"kind": 16,
							"flags": {},
							"sources": [
								{
									"fileName": "src/models/NonSearchProject.ts",
									"line": 62,
									"character": 8
								}
							],
							"type": {
								"type": "literal",
								"value": "private"
							}
						},
						{
							"id": 352,
							"name": "PROCESSING",
							"variant": "declaration",
							"kind": 16,
							"flags": {},
							"sources": [
								{
									"fileName": "src/models/NonSearchProject.ts",
									"line": 59,
									"character": 8
								}
							],
							"type": {
								"type": "literal",
								"value": "processing"
							}
						},
						{
							"id": 349,
							"name": "REJECTED",
							"variant": "declaration",
							"kind": 16,
							"flags": {},
							"sources": [
								{
									"fileName": "src/models/NonSearchProject.ts",
									"line": 56,
									"character": 8
								}
							],
							"type": {
								"type": "literal",
								"value": "rejected"
							}
						},
						{
							"id": 354,
							"name": "SCHEDULED",
							"variant": "declaration",
							"kind": 16,
							"flags": {},
							"sources": [
								{
									"fileName": "src/models/NonSearchProject.ts",
									"line": 61,
									"character": 8
								}
							],
							"type": {
								"type": "literal",
								"value": "scheduled"
							}
						},
						{
							"id": 356,
							"name": "UNKNOWN",
							"variant": "declaration",
							"kind": 16,
							"flags": {},
							"sources": [
								{
									"fileName": "src/models/NonSearchProject.ts",
									"line": 63,
									"character": 8
								}
							],
							"type": {
								"type": "literal",
								"value": "unknown"
							}
						},
						{
							"id": 351,
							"name": "UNLISTED",
							"variant": "declaration",
							"kind": 16,
							"flags": {},
							"sources": [
								{
									"fileName": "src/models/NonSearchProject.ts",
									"line": 58,
									"character": 8
								}
							],
							"type": {
								"type": "literal",
								"value": "unlisted"
							}
						},
						{
							"id": 353,
							"name": "WITHHELD",
							"variant": "declaration",
							"kind": 16,
							"flags": {},
							"sources": [
								{
									"fileName": "src/models/NonSearchProject.ts",
									"line": 60,
									"character": 8
								}
							],
							"type": {
								"type": "literal",
								"value": "withheld"
							}
						}
					],
					"groups": [
						{
							"title": "Enumeration Members",
							"children": [
								347,
								348,
								350,
								355,
								352,
								349,
								354,
								356,
								351,
								353
							]
						}
					],
					"sources": [
						{
							"fileName": "src/models/NonSearchProject.ts",
							"line": 53,
							"character": 16
						}
					]
				}
			],
			"groups": [
				{
					"title": "Enumerations",
					"children": [
						357,
						346
					]
				}
			],
			"sources": [
				{
					"fileName": "src/models/NonSearchProject.ts",
					"line": 9,
					"character": 12
				},
				{
					"fileName": "src/models/NonSearchProject.ts",
					"line": 48,
					"character": 17
				}
			]
		},
		{
			"id": 374,
			"name": "Notification",
			"variant": "declaration",
			"kind": 4,
			"flags": {},
			"children": [
				{
					"id": 375,
					"name": "type",
					"variant": "declaration",
					"kind": 8,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The type of notification"
							}
						]
					},
					"children": [
						{
							"id": 379,
							"name": "MODERATOR_MESSAGE",
							"variant": "declaration",
							"kind": 16,
							"flags": {},
							"sources": [
								{
									"fileName": "src/models/Notification.ts",
									"line": 56,
									"character": 8
								}
							],
							"type": {
								"type": "literal",
								"value": "moderator_message"
							}
						},
						{
							"id": 376,
							"name": "PROJECT_UPDATE",
							"variant": "declaration",
							"kind": 16,
							"flags": {},
							"sources": [
								{
									"fileName": "src/models/Notification.ts",
									"line": 53,
									"character": 8
								}
							],
							"type": {
								"type": "literal",
								"value": "project_update"
							}
						},
						{
							"id": 378,
							"name": "STATUS_CHANGE",
							"variant": "declaration",
							"kind": 16,
							"flags": {},
							"sources": [
								{
									"fileName": "src/models/Notification.ts",
									"line": 55,
									"character": 8
								}
							],
							"type": {
								"type": "literal",
								"value": "status_change"
							}
						},
						{
							"id": 377,
							"name": "TEAM_INVITE",
							"variant": "declaration",
							"kind": 16,
							"flags": {},
							"sources": [
								{
									"fileName": "src/models/Notification.ts",
									"line": 54,
									"character": 8
								}
							],
							"type": {
								"type": "literal",
								"value": "team_invite"
							}
						}
					],
					"groups": [
						{
							"title": "Enumeration Members",
							"children": [
								379,
								376,
								378,
								377
							]
						}
					],
					"sources": [
						{
							"fileName": "src/models/Notification.ts",
							"line": 52,
							"character": 16
						}
					]
				}
			],
			"groups": [
				{
					"title": "Enumerations",
					"children": [
						375
					]
				}
			],
			"sources": [
				{
					"fileName": "src/models/Notification.ts",
					"line": 8,
					"character": 12
				},
				{
					"fileName": "src/models/Notification.ts",
					"line": 47,
					"character": 17
				}
			]
		},
		{
			"id": 456,
			"name": "Schedule",
			"variant": "declaration",
			"kind": 4,
			"flags": {},
			"children": [
				{
					"id": 457,
					"name": "requested_status",
					"variant": "declaration",
					"kind": 8,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The requested status when scheduling the project for release"
							}
						]
					},
					"children": [
						{
							"id": 458,
							"name": "APPROVED",
							"variant": "declaration",
							"kind": 16,
							"flags": {},
							"sources": [
								{
									"fileName": "src/models/Schedule.ts",
									"line": 20,
									"character": 8
								}
							],
							"type": {
								"type": "literal",
								"value": "approved"
							}
						},
						{
							"id": 459,
							"name": "ARCHIVED",
							"variant": "declaration",
							"kind": 16,
							"flags": {},
							"sources": [
								{
									"fileName": "src/models/Schedule.ts",
									"line": 21,
									"character": 8
								}
							],
							"type": {
								"type": "literal",
								"value": "archived"
							}
						},
						{
							"id": 462,
							"name": "DRAFT",
							"variant": "declaration",
							"kind": 16,
							"flags": {},
							"sources": [
								{
									"fileName": "src/models/Schedule.ts",
									"line": 24,
									"character": 8
								}
							],
							"type": {
								"type": "literal",
								"value": "draft"
							}
						},
						{
							"id": 461,
							"name": "PRIVATE",
							"variant": "declaration",
							"kind": 16,
							"flags": {},
							"sources": [
								{
									"fileName": "src/models/Schedule.ts",
									"line": 23,
									"character": 8
								}
							],
							"type": {
								"type": "literal",
								"value": "private"
							}
						},
						{
							"id": 460,
							"name": "UNLISTED",
							"variant": "declaration",
							"kind": 16,
							"flags": {},
							"sources": [
								{
									"fileName": "src/models/Schedule.ts",
									"line": 22,
									"character": 8
								}
							],
							"type": {
								"type": "literal",
								"value": "unlisted"
							}
						}
					],
					"groups": [
						{
							"title": "Enumeration Members",
							"children": [
								458,
								459,
								462,
								461,
								460
							]
						}
					],
					"sources": [
						{
							"fileName": "src/models/Schedule.ts",
							"line": 19,
							"character": 16
						}
					]
				}
			],
			"groups": [
				{
					"title": "Enumerations",
					"children": [
						457
					]
				}
			],
			"sources": [
				{
					"fileName": "src/models/Schedule.ts",
					"line": 6,
					"character": 12
				},
				{
					"fileName": "src/models/Schedule.ts",
					"line": 14,
					"character": 17
				}
			]
		},
		{
			"id": 477,
			"name": "ServerRenderedProject",
			"variant": "declaration",
			"kind": 4,
			"flags": {},
			"children": [
				{
					"id": 483,
					"name": "monetization_status",
					"variant": "declaration",
					"kind": 8,
					"flags": {},
					"children": [
						{
							"id": 485,
							"name": "DEMONETIZED",
							"variant": "declaration",
							"kind": 16,
							"flags": {},
							"sources": [
								{
									"fileName": "src/models/ServerRenderedProject.ts",
									"line": 46,
									"character": 8
								}
							],
							"type": {
								"type": "literal",
								"value": "demonetized"
							}
						},
						{
							"id": 486,
							"name": "FORCE_DEMONETIZED",
							"variant": "declaration",
							"kind": 16,
							"flags": {},
							"sources": [
								{
									"fileName": "src/models/ServerRenderedProject.ts",
									"line": 47,
									"character": 8
								}
							],
							"type": {
								"type": "literal",
								"value": "force-demonetized"
							}
						},
						{
							"id": 484,
							"name": "MONETIZED",
							"variant": "declaration",
							"kind": 16,
							"flags": {},
							"sources": [
								{
									"fileName": "src/models/ServerRenderedProject.ts",
									"line": 45,
									"character": 8
								}
							],
							"type": {
								"type": "literal",
								"value": "monetized"
							}
						}
					],
					"groups": [
						{
							"title": "Enumeration Members",
							"children": [
								485,
								486,
								484
							]
						}
					],
					"sources": [
						{
							"fileName": "src/models/ServerRenderedProject.ts",
							"line": 44,
							"character": 16
						}
					]
				},
				{
					"id": 478,
					"name": "project_type",
					"variant": "declaration",
					"kind": 8,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The project type of the project"
							}
						]
					},
					"children": [
						{
							"id": 479,
							"name": "MOD",
							"variant": "declaration",
							"kind": 16,
							"flags": {},
							"sources": [
								{
									"fileName": "src/models/ServerRenderedProject.ts",
									"line": 38,
									"character": 8
								}
							],
							"type": {
								"type": "literal",
								"value": "mod"
							}
						},
						{
							"id": 480,
							"name": "MODPACK",
							"variant": "declaration",
							"kind": 16,
							"flags": {},
							"sources": [
								{
									"fileName": "src/models/ServerRenderedProject.ts",
									"line": 39,
									"character": 8
								}
							],
							"type": {
								"type": "literal",
								"value": "modpack"
							}
						},
						{
							"id": 481,
							"name": "RESOURCEPACK",
							"variant": "declaration",
							"kind": 16,
							"flags": {},
							"sources": [
								{
									"fileName": "src/models/ServerRenderedProject.ts",
									"line": 40,
									"character": 8
								}
							],
							"type": {
								"type": "literal",
								"value": "resourcepack"
							}
						},
						{
							"id": 482,
							"name": "SHADER",
							"variant": "declaration",
							"kind": 16,
							"flags": {},
							"sources": [
								{
									"fileName": "src/models/ServerRenderedProject.ts",
									"line": 41,
									"character": 8
								}
							],
							"type": {
								"type": "literal",
								"value": "shader"
							}
						}
					],
					"groups": [
						{
							"title": "Enumeration Members",
							"children": [
								479,
								480,
								481,
								482
							]
						}
					],
					"sources": [
						{
							"fileName": "src/models/ServerRenderedProject.ts",
							"line": 37,
							"character": 16
						}
					]
				}
			],
			"groups": [
				{
					"title": "Enumerations",
					"children": [
						483,
						478
					]
				}
			],
			"sources": [
				{
					"fileName": "src/models/ServerRenderedProject.ts",
					"line": 8,
					"character": 12
				},
				{
					"fileName": "src/models/ServerRenderedProject.ts",
					"line": 32,
					"character": 17
				}
			]
		},
		{
			"id": 511,
			"name": "Thread",
			"variant": "declaration",
			"kind": 4,
			"flags": {},
			"children": [
				{
					"id": 512,
					"name": "type",
					"variant": "declaration",
					"kind": 8,
					"flags": {},
					"children": [
						{
							"id": 515,
							"name": "DIRECT_MESSAGE",
							"variant": "declaration",
							"kind": 16,
							"flags": {},
							"sources": [
								{
									"fileName": "src/models/Thread.ts",
									"line": 32,
									"character": 8
								}
							],
							"type": {
								"type": "literal",
								"value": "direct_message"
							}
						},
						{
							"id": 513,
							"name": "PROJECT",
							"variant": "declaration",
							"kind": 16,
							"flags": {},
							"sources": [
								{
									"fileName": "src/models/Thread.ts",
									"line": 30,
									"character": 8
								}
							],
							"type": {
								"type": "literal",
								"value": "project"
							}
						},
						{
							"id": 514,
							"name": "REPORT",
							"variant": "declaration",
							"kind": 16,
							"flags": {},
							"sources": [
								{
									"fileName": "src/models/Thread.ts",
									"line": 31,
									"character": 8
								}
							],
							"type": {
								"type": "literal",
								"value": "report"
							}
						}
					],
					"groups": [
						{
							"title": "Enumeration Members",
							"children": [
								515,
								513,
								514
							]
						}
					],
					"sources": [
						{
							"fileName": "src/models/Thread.ts",
							"line": 29,
							"character": 16
						}
					]
				}
			],
			"groups": [
				{
					"title": "Enumerations",
					"children": [
						512
					]
				}
			],
			"sources": [
				{
					"fileName": "src/models/Thread.ts",
					"line": 9,
					"character": 12
				},
				{
					"fileName": "src/models/Thread.ts",
					"line": 27,
					"character": 17
				}
			]
		},
		{
			"id": 531,
			"name": "ThreadMessageBody",
			"variant": "declaration",
			"kind": 4,
			"flags": {},
			"children": [
				{
					"id": 548,
					"name": "new_status",
					"variant": "declaration",
					"kind": 8,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The new status of the project. **Only present for "
							},
							{
								"kind": "code",
								"text": "`status_change`"
							},
							{
								"kind": "text",
								"text": " message type**"
							}
						]
					},
					"children": [
						{
							"id": 549,
							"name": "APPROVED",
							"variant": "declaration",
							"kind": 16,
							"flags": {},
							"sources": [
								{
									"fileName": "src/models/ThreadMessageBody.ts",
									"line": 68,
									"character": 8
								}
							],
							"type": {
								"type": "literal",
								"value": "approved"
							}
						},
						{
							"id": 550,
							"name": "ARCHIVED",
							"variant": "declaration",
							"kind": 16,
							"flags": {},
							"sources": [
								{
									"fileName": "src/models/ThreadMessageBody.ts",
									"line": 69,
									"character": 8
								}
							],
							"type": {
								"type": "literal",
								"value": "archived"
							}
						},
						{
							"id": 552,
							"name": "DRAFT",
							"variant": "declaration",
							"kind": 16,
							"flags": {},
							"sources": [
								{
									"fileName": "src/models/ThreadMessageBody.ts",
									"line": 71,
									"character": 8
								}
							],
							"type": {
								"type": "literal",
								"value": "draft"
							}
						},
						{
							"id": 557,
							"name": "PRIVATE",
							"variant": "declaration",
							"kind": 16,
							"flags": {},
							"sources": [
								{
									"fileName": "src/models/ThreadMessageBody.ts",
									"line": 76,
									"character": 8
								}
							],
							"type": {
								"type": "literal",
								"value": "private"
							}
						},
						{
							"id": 554,
							"name": "PROCESSING",
							"variant": "declaration",
							"kind": 16,
							"flags": {},
							"sources": [
								{
									"fileName": "src/models/ThreadMessageBody.ts",
									"line": 73,
									"character": 8
								}
							],
							"type": {
								"type": "literal",
								"value": "processing"
							}
						},
						{
							"id": 551,
							"name": "REJECTED",
							"variant": "declaration",
							"kind": 16,
							"flags": {},
							"sources": [
								{
									"fileName": "src/models/ThreadMessageBody.ts",
									"line": 70,
									"character": 8
								}
							],
							"type": {
								"type": "literal",
								"value": "rejected"
							}
						},
						{
							"id": 556,
							"name": "SCHEDULED",
							"variant": "declaration",
							"kind": 16,
							"flags": {},
							"sources": [
								{
									"fileName": "src/models/ThreadMessageBody.ts",
									"line": 75,
									"character": 8
								}
							],
							"type": {
								"type": "literal",
								"value": "scheduled"
							}
						},
						{
							"id": 558,
							"name": "UNKNOWN",
							"variant": "declaration",
							"kind": 16,
							"flags": {},
							"sources": [
								{
									"fileName": "src/models/ThreadMessageBody.ts",
									"line": 77,
									"character": 8
								}
							],
							"type": {
								"type": "literal",
								"value": "unknown"
							}
						},
						{
							"id": 553,
							"name": "UNLISTED",
							"variant": "declaration",
							"kind": 16,
							"flags": {},
							"sources": [
								{
									"fileName": "src/models/ThreadMessageBody.ts",
									"line": 72,
									"character": 8
								}
							],
							"type": {
								"type": "literal",
								"value": "unlisted"
							}
						},
						{
							"id": 555,
							"name": "WITHHELD",
							"variant": "declaration",
							"kind": 16,
							"flags": {},
							"sources": [
								{
									"fileName": "src/models/ThreadMessageBody.ts",
									"line": 74,
									"character": 8
								}
							],
							"type": {
								"type": "literal",
								"value": "withheld"
							}
						}
					],
					"groups": [
						{
							"title": "Enumeration Members",
							"children": [
								549,
								550,
								552,
								557,
								554,
								551,
								556,
								558,
								553,
								555
							]
						}
					],
					"sources": [
						{
							"fileName": "src/models/ThreadMessageBody.ts",
							"line": 67,
							"character": 16
						}
					]
				},
				{
					"id": 537,
					"name": "old_status",
					"variant": "declaration",
					"kind": 8,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The old status of the project. **Only present for "
							},
							{
								"kind": "code",
								"text": "`status_change`"
							},
							{
								"kind": "text",
								"text": " message type**"
							}
						]
					},
					"children": [
						{
							"id": 538,
							"name": "APPROVED",
							"variant": "declaration",
							"kind": 16,
							"flags": {},
							"sources": [
								{
									"fileName": "src/models/ThreadMessageBody.ts",
									"line": 52,
									"character": 8
								}
							],
							"type": {
								"type": "literal",
								"value": "approved"
							}
						},
						{
							"id": 539,
							"name": "ARCHIVED",
							"variant": "declaration",
							"kind": 16,
							"flags": {},
							"sources": [
								{
									"fileName": "src/models/ThreadMessageBody.ts",
									"line": 53,
									"character": 8
								}
							],
							"type": {
								"type": "literal",
								"value": "archived"
							}
						},
						{
							"id": 541,
							"name": "DRAFT",
							"variant": "declaration",
							"kind": 16,
							"flags": {},
							"sources": [
								{
									"fileName": "src/models/ThreadMessageBody.ts",
									"line": 55,
									"character": 8
								}
							],
							"type": {
								"type": "literal",
								"value": "draft"
							}
						},
						{
							"id": 546,
							"name": "PRIVATE",
							"variant": "declaration",
							"kind": 16,
							"flags": {},
							"sources": [
								{
									"fileName": "src/models/ThreadMessageBody.ts",
									"line": 60,
									"character": 8
								}
							],
							"type": {
								"type": "literal",
								"value": "private"
							}
						},
						{
							"id": 543,
							"name": "PROCESSING",
							"variant": "declaration",
							"kind": 16,
							"flags": {},
							"sources": [
								{
									"fileName": "src/models/ThreadMessageBody.ts",
									"line": 57,
									"character": 8
								}
							],
							"type": {
								"type": "literal",
								"value": "processing"
							}
						},
						{
							"id": 540,
							"name": "REJECTED",
							"variant": "declaration",
							"kind": 16,
							"flags": {},
							"sources": [
								{
									"fileName": "src/models/ThreadMessageBody.ts",
									"line": 54,
									"character": 8
								}
							],
							"type": {
								"type": "literal",
								"value": "rejected"
							}
						},
						{
							"id": 545,
							"name": "SCHEDULED",
							"variant": "declaration",
							"kind": 16,
							"flags": {},
							"sources": [
								{
									"fileName": "src/models/ThreadMessageBody.ts",
									"line": 59,
									"character": 8
								}
							],
							"type": {
								"type": "literal",
								"value": "scheduled"
							}
						},
						{
							"id": 547,
							"name": "UNKNOWN",
							"variant": "declaration",
							"kind": 16,
							"flags": {},
							"sources": [
								{
									"fileName": "src/models/ThreadMessageBody.ts",
									"line": 61,
									"character": 8
								}
							],
							"type": {
								"type": "literal",
								"value": "unknown"
							}
						},
						{
							"id": 542,
							"name": "UNLISTED",
							"variant": "declaration",
							"kind": 16,
							"flags": {},
							"sources": [
								{
									"fileName": "src/models/ThreadMessageBody.ts",
									"line": 56,
									"character": 8
								}
							],
							"type": {
								"type": "literal",
								"value": "unlisted"
							}
						},
						{
							"id": 544,
							"name": "WITHHELD",
							"variant": "declaration",
							"kind": 16,
							"flags": {},
							"sources": [
								{
									"fileName": "src/models/ThreadMessageBody.ts",
									"line": 58,
									"character": 8
								}
							],
							"type": {
								"type": "literal",
								"value": "withheld"
							}
						}
					],
					"groups": [
						{
							"title": "Enumeration Members",
							"children": [
								538,
								539,
								541,
								546,
								543,
								540,
								545,
								547,
								542,
								544
							]
						}
					],
					"sources": [
						{
							"fileName": "src/models/ThreadMessageBody.ts",
							"line": 51,
							"character": 16
						}
					]
				},
				{
					"id": 532,
					"name": "type",
					"variant": "declaration",
					"kind": 8,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The type of message"
							}
						]
					},
					"children": [
						{
							"id": 536,
							"name": "DELETED",
							"variant": "declaration",
							"kind": 16,
							"flags": {},
							"sources": [
								{
									"fileName": "src/models/ThreadMessageBody.ts",
									"line": 45,
									"character": 8
								}
							],
							"type": {
								"type": "literal",
								"value": "deleted"
							}
						},
						{
							"id": 533,
							"name": "STATUS_CHANGE",
							"variant": "declaration",
							"kind": 16,
							"flags": {},
							"sources": [
								{
									"fileName": "src/models/ThreadMessageBody.ts",
									"line": 42,
									"character": 8
								}
							],
							"type": {
								"type": "literal",
								"value": "status_change"
							}
						},
						{
							"id": 534,
							"name": "TEXT",
							"variant": "declaration",
							"kind": 16,
							"flags": {},
							"sources": [
								{
									"fileName": "src/models/ThreadMessageBody.ts",
									"line": 43,
									"character": 8
								}
							],
							"type": {
								"type": "literal",
								"value": "text"
							}
						},
						{
							"id": 535,
							"name": "THREAD_CLOSURE",
							"variant": "declaration",
							"kind": 16,
							"flags": {},
							"sources": [
								{
									"fileName": "src/models/ThreadMessageBody.ts",
									"line": 44,
									"character": 8
								}
							],
							"type": {
								"type": "literal",
								"value": "thread_closure"
							}
						}
					],
					"groups": [
						{
							"title": "Enumeration Members",
							"children": [
								536,
								533,
								534,
								535
							]
						}
					],
					"sources": [
						{
							"fileName": "src/models/ThreadMessageBody.ts",
							"line": 41,
							"character": 16
						}
					]
				}
			],
			"groups": [
				{
					"title": "Enumerations",
					"children": [
						548,
						537,
						532
					]
				}
			],
			"sources": [
				{
					"fileName": "src/models/ThreadMessageBody.ts",
					"line": 9,
					"character": 12
				},
				{
					"fileName": "src/models/ThreadMessageBody.ts",
					"line": 36,
					"character": 17
				}
			]
		},
		{
			"id": 571,
			"name": "User",
			"variant": "declaration",
			"kind": 4,
			"flags": {},
			"children": [
				{
					"id": 572,
					"name": "role",
					"variant": "declaration",
					"kind": 8,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The user's role"
							}
						]
					},
					"children": [
						{
							"id": 573,
							"name": "ADMIN",
							"variant": "declaration",
							"kind": 16,
							"flags": {},
							"sources": [
								{
									"fileName": "src/models/User.ts",
									"line": 68,
									"character": 8
								}
							],
							"type": {
								"type": "literal",
								"value": "admin"
							}
						},
						{
							"id": 575,
							"name": "DEVELOPER",
							"variant": "declaration",
							"kind": 16,
							"flags": {},
							"sources": [
								{
									"fileName": "src/models/User.ts",
									"line": 70,
									"character": 8
								}
							],
							"type": {
								"type": "literal",
								"value": "developer"
							}
						},
						{
							"id": 574,
							"name": "MODERATOR",
							"variant": "declaration",
							"kind": 16,
							"flags": {},
							"sources": [
								{
									"fileName": "src/models/User.ts",
									"line": 69,
									"character": 8
								}
							],
							"type": {
								"type": "literal",
								"value": "moderator"
							}
						}
					],
					"groups": [
						{
							"title": "Enumeration Members",
							"children": [
								573,
								575,
								574
							]
						}
					],
					"sources": [
						{
							"fileName": "src/models/User.ts",
							"line": 67,
							"character": 16
						}
					]
				}
			],
			"groups": [
				{
					"title": "Enumerations",
					"children": [
						572
					]
				}
			],
			"sources": [
				{
					"fileName": "src/models/User.ts",
					"line": 8,
					"character": 12
				},
				{
					"fileName": "src/models/User.ts",
					"line": 62,
					"character": 17
				}
			]
		},
		{
			"id": 583,
			"name": "UserPayoutData",
			"variant": "declaration",
			"kind": 4,
			"flags": {},
			"children": [
				{
					"id": 584,
					"name": "payout_wallet",
					"variant": "declaration",
					"kind": 8,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The wallet that the user has selected"
							}
						]
					},
					"children": [
						{
							"id": 585,
							"name": "PAYPAL",
							"variant": "declaration",
							"kind": 16,
							"flags": {},
							"sources": [
								{
									"fileName": "src/models/UserPayoutData.ts",
									"line": 34,
									"character": 8
								}
							],
							"type": {
								"type": "literal",
								"value": "paypal"
							}
						},
						{
							"id": 586,
							"name": "VENMO",
							"variant": "declaration",
							"kind": 16,
							"flags": {},
							"sources": [
								{
									"fileName": "src/models/UserPayoutData.ts",
									"line": 35,
									"character": 8
								}
							],
							"type": {
								"type": "literal",
								"value": "venmo"
							}
						}
					],
					"groups": [
						{
							"title": "Enumeration Members",
							"children": [
								585,
								586
							]
						}
					],
					"sources": [
						{
							"fileName": "src/models/UserPayoutData.ts",
							"line": 33,
							"character": 16
						}
					]
				},
				{
					"id": 587,
					"name": "payout_wallet_type",
					"variant": "declaration",
					"kind": 8,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The type of the user's wallet"
							}
						]
					},
					"children": [
						{
							"id": 588,
							"name": "EMAIL",
							"variant": "declaration",
							"kind": 16,
							"flags": {},
							"sources": [
								{
									"fileName": "src/models/UserPayoutData.ts",
									"line": 42,
									"character": 8
								}
							],
							"type": {
								"type": "literal",
								"value": "email"
							}
						},
						{
							"id": 589,
							"name": "PHONE",
							"variant": "declaration",
							"kind": 16,
							"flags": {},
							"sources": [
								{
									"fileName": "src/models/UserPayoutData.ts",
									"line": 43,
									"character": 8
								}
							],
							"type": {
								"type": "literal",
								"value": "phone"
							}
						},
						{
							"id": 590,
							"name": "USER_HANDLE",
							"variant": "declaration",
							"kind": 16,
							"flags": {},
							"sources": [
								{
									"fileName": "src/models/UserPayoutData.ts",
									"line": 44,
									"character": 8
								}
							],
							"type": {
								"type": "literal",
								"value": "user_handle"
							}
						}
					],
					"groups": [
						{
							"title": "Enumeration Members",
							"children": [
								588,
								589,
								590
							]
						}
					],
					"sources": [
						{
							"fileName": "src/models/UserPayoutData.ts",
							"line": 41,
							"character": 16
						}
					]
				}
			],
			"groups": [
				{
					"title": "Enumerations",
					"children": [
						584,
						587
					]
				}
			],
			"sources": [
				{
					"fileName": "src/models/UserPayoutData.ts",
					"line": 9,
					"character": 12
				},
				{
					"fileName": "src/models/UserPayoutData.ts",
					"line": 28,
					"character": 17
				}
			]
		},
		{
			"id": 616,
			"name": "VersionDependency",
			"variant": "declaration",
			"kind": 4,
			"flags": {},
			"children": [
				{
					"id": 617,
					"name": "dependency_type",
					"variant": "declaration",
					"kind": 8,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The type of dependency that this version has"
							}
						]
					},
					"children": [
						{
							"id": 621,
							"name": "EMBEDDED",
							"variant": "declaration",
							"kind": 16,
							"flags": {},
							"sources": [
								{
									"fileName": "src/models/VersionDependency.ts",
									"line": 34,
									"character": 8
								}
							],
							"type": {
								"type": "literal",
								"value": "embedded"
							}
						},
						{
							"id": 620,
							"name": "INCOMPATIBLE",
							"variant": "declaration",
							"kind": 16,
							"flags": {},
							"sources": [
								{
									"fileName": "src/models/VersionDependency.ts",
									"line": 33,
									"character": 8
								}
							],
							"type": {
								"type": "literal",
								"value": "incompatible"
							}
						},
						{
							"id": 619,
							"name": "OPTIONAL",
							"variant": "declaration",
							"kind": 16,
							"flags": {},
							"sources": [
								{
									"fileName": "src/models/VersionDependency.ts",
									"line": 32,
									"character": 8
								}
							],
							"type": {
								"type": "literal",
								"value": "optional"
							}
						},
						{
							"id": 618,
							"name": "REQUIRED",
							"variant": "declaration",
							"kind": 16,
							"flags": {},
							"sources": [
								{
									"fileName": "src/models/VersionDependency.ts",
									"line": 31,
									"character": 8
								}
							],
							"type": {
								"type": "literal",
								"value": "required"
							}
						}
					],
					"groups": [
						{
							"title": "Enumeration Members",
							"children": [
								621,
								620,
								619,
								618
							]
						}
					],
					"sources": [
						{
							"fileName": "src/models/VersionDependency.ts",
							"line": 30,
							"character": 16
						}
					]
				}
			],
			"groups": [
				{
					"title": "Enumerations",
					"children": [
						617
					]
				}
			],
			"sources": [
				{
					"fileName": "src/models/VersionDependency.ts",
					"line": 6,
					"character": 12
				},
				{
					"fileName": "src/models/VersionDependency.ts",
					"line": 25,
					"character": 17
				}
			]
		},
		{
			"id": 630,
			"name": "VersionFile",
			"variant": "declaration",
			"kind": 4,
			"flags": {},
			"children": [
				{
					"id": 631,
					"name": "file_type",
					"variant": "declaration",
					"kind": 8,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The type of the additional file, used mainly for adding resource packs to datapacks"
							}
						]
					},
					"children": [
						{
							"id": 633,
							"name": "OPTIONAL_RESOURCE_PACK",
							"variant": "declaration",
							"kind": 16,
							"flags": {},
							"sources": [
								{
									"fileName": "src/models/VersionFile.ts",
									"line": 39,
									"character": 8
								}
							],
							"type": {
								"type": "literal",
								"value": "optional-resource-pack"
							}
						},
						{
							"id": 632,
							"name": "REQUIRED_RESOURCE_PACK",
							"variant": "declaration",
							"kind": 16,
							"flags": {},
							"sources": [
								{
									"fileName": "src/models/VersionFile.ts",
									"line": 38,
									"character": 8
								}
							],
							"type": {
								"type": "literal",
								"value": "required-resource-pack"
							}
						}
					],
					"groups": [
						{
							"title": "Enumeration Members",
							"children": [
								633,
								632
							]
						}
					],
					"sources": [
						{
							"fileName": "src/models/VersionFile.ts",
							"line": 37,
							"character": 16
						}
					]
				}
			],
			"groups": [
				{
					"title": "Enumerations",
					"children": [
						631
					]
				}
			],
			"sources": [
				{
					"fileName": "src/models/VersionFile.ts",
					"line": 8,
					"character": 12
				},
				{
					"fileName": "src/models/VersionFile.ts",
					"line": 32,
					"character": 17
				}
			]
		},
		{
			"id": 121,
			"name": "AlgorithmIdentifier",
			"variant": "declaration",
			"kind": 8,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The algorithm of the hash"
					}
				]
			},
			"children": [
				{
					"id": 122,
					"name": "SHA1",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "src/models/AlgorithmIdentifier.ts",
							"line": 10,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "sha1"
					}
				},
				{
					"id": 123,
					"name": "SHA512",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "src/models/AlgorithmIdentifier.ts",
							"line": 11,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "sha512"
					}
				}
			],
			"groups": [
				{
					"title": "Enumeration Members",
					"children": [
						122,
						123
					]
				}
			],
			"sources": [
				{
					"fileName": "src/models/AlgorithmIdentifier.ts",
					"line": 9,
					"character": 12
				}
			]
		},
		{
			"id": 1,
			"name": "ApiError",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"children": [
				{
					"id": 12,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"sources": [
						{
							"fileName": "src/core/ApiError.ts",
							"line": 15,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 13,
							"name": "new ApiError",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"sources": [
								{
									"fileName": "src/core/ApiError.ts",
									"line": 15,
									"character": 4
								}
							],
							"parameters": [
								{
									"id": 14,
									"name": "request",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "src/core/ApiRequestOptions.ts",
											"qualifiedName": "ApiRequestOptions"
										},
										"name": "ApiRequestOptions",
										"package": "axrinth"
									}
								},
								{
									"id": 15,
									"name": "response",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "src/core/ApiResult.ts",
											"qualifiedName": "ApiResult"
										},
										"name": "ApiResult",
										"package": "axrinth"
									}
								},
								{
									"id": 16,
									"name": "message",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 1,
								"name": "ApiError",
								"package": "axrinth"
							},
							"overwrites": {
								"type": "reference",
								"target": -1,
								"name": "Error.constructor"
							}
						}
					],
					"overwrites": {
						"type": "reference",
						"target": -1,
						"name": "Error.constructor"
					}
				},
				{
					"id": 20,
					"name": "body",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPublic": true,
						"isReadonly": true
					},
					"sources": [
						{
							"fileName": "src/core/ApiError.ts",
							"line": 12,
							"character": 20
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				{
					"id": 23,
					"name": "message",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/typescript/lib/lib.es5.d.ts",
							"line": 1076,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Error.message"
					}
				},
				{
					"id": 22,
					"name": "name",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/typescript/lib/lib.es5.d.ts",
							"line": 1075,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Error.name"
					}
				},
				{
					"id": 21,
					"name": "request",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPublic": true,
						"isReadonly": true
					},
					"sources": [
						{
							"fileName": "src/core/ApiError.ts",
							"line": 13,
							"character": 20
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "src/core/ApiRequestOptions.ts",
							"qualifiedName": "ApiRequestOptions"
						},
						"name": "ApiRequestOptions",
						"package": "axrinth"
					}
				},
				{
					"id": 24,
					"name": "stack",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/typescript/lib/lib.es5.d.ts",
							"line": 1077,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Error.stack"
					}
				},
				{
					"id": 18,
					"name": "status",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPublic": true,
						"isReadonly": true
					},
					"sources": [
						{
							"fileName": "src/core/ApiError.ts",
							"line": 10,
							"character": 20
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 19,
					"name": "statusText",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPublic": true,
						"isReadonly": true
					},
					"sources": [
						{
							"fileName": "src/core/ApiError.ts",
							"line": 11,
							"character": 20
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 17,
					"name": "url",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPublic": true,
						"isReadonly": true
					},
					"sources": [
						{
							"fileName": "src/core/ApiError.ts",
							"line": 9,
							"character": 20
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 6,
					"name": "prepareStackTrace",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isStatic": true,
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Optional override for formatting stack traces"
							}
						],
						"blockTags": [
							{
								"tag": "@see",
								"content": [
									{
										"kind": "text",
										"text": "https://v8.dev/docs/stack-trace-api#customizing-stack-traces"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/node/globals.d.ts",
							"line": 28,
							"character": 8
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 7,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/globals.d.ts",
									"line": 28,
									"character": 29
								}
							],
							"signatures": [
								{
									"id": 8,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Optional override for formatting stack traces"
											}
										],
										"blockTags": [
											{
												"tag": "@see",
												"content": [
													{
														"kind": "text",
														"text": "https://v8.dev/docs/stack-trace-api#customizing-stack-traces"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "node_modules/@types/node/globals.d.ts",
											"line": 28,
											"character": 29
										}
									],
									"parameters": [
										{
											"id": 9,
											"name": "err",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "Error"
												},
												"name": "Error",
												"package": "typescript"
											}
										},
										{
											"id": 10,
											"name": "stackTraces",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": {
														"sourceFileName": "node_modules/@types/node/globals.d.ts",
														"qualifiedName": "__global.NodeJS.CallSite"
													},
													"name": "CallSite",
													"package": "@types/node",
													"qualifiedName": "__global.NodeJS.CallSite"
												}
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							]
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Error.prepareStackTrace"
					}
				},
				{
					"id": 11,
					"name": "stackTraceLimit",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isStatic": true,
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/node/globals.d.ts",
							"line": 30,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Error.stackTraceLimit"
					}
				},
				{
					"id": 2,
					"name": "captureStackTrace",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isStatic": true,
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/node/globals.d.ts",
							"line": 21,
							"character": 8
						}
					],
					"signatures": [
						{
							"id": 3,
							"name": "captureStackTrace",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Create .stack property on a target object"
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/globals.d.ts",
									"line": 21,
									"character": 8
								}
							],
							"parameters": [
								{
									"id": 4,
									"name": "targetObject",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "intrinsic",
										"name": "object"
									}
								},
								{
									"id": 5,
									"name": "constructorOpt",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Function"
										},
										"name": "Function",
										"package": "typescript"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Error.captureStackTrace"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Error.captureStackTrace"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						12
					]
				},
				{
					"title": "Properties",
					"children": [
						20,
						23,
						22,
						21,
						24,
						18,
						19,
						17,
						6,
						11
					]
				},
				{
					"title": "Methods",
					"children": [
						2
					]
				}
			],
			"sources": [
				{
					"fileName": "src/core/ApiError.ts",
					"line": 8,
					"character": 13
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": {
						"sourceFileName": "node_modules/typescript/lib/lib.es5.d.ts",
						"qualifiedName": "Error"
					},
					"name": "Error",
					"package": "typescript"
				}
			]
		},
		{
			"id": 87,
			"name": "CancelError",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"children": [
				{
					"id": 98,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"sources": [
						{
							"fileName": "src/core/CancelablePromise.ts",
							"line": 7,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 99,
							"name": "new CancelError",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"sources": [
								{
									"fileName": "src/core/CancelablePromise.ts",
									"line": 7,
									"character": 4
								}
							],
							"parameters": [
								{
									"id": 100,
									"name": "message",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 87,
								"name": "CancelError",
								"package": "axrinth"
							},
							"overwrites": {
								"type": "reference",
								"target": -1,
								"name": "Error.constructor"
							}
						}
					],
					"overwrites": {
						"type": "reference",
						"target": -1,
						"name": "Error.constructor"
					}
				},
				{
					"id": 104,
					"name": "message",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/typescript/lib/lib.es5.d.ts",
							"line": 1076,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Error.message"
					}
				},
				{
					"id": 103,
					"name": "name",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/typescript/lib/lib.es5.d.ts",
							"line": 1075,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Error.name"
					}
				},
				{
					"id": 105,
					"name": "stack",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/typescript/lib/lib.es5.d.ts",
							"line": 1077,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Error.stack"
					}
				},
				{
					"id": 92,
					"name": "prepareStackTrace",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isStatic": true,
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Optional override for formatting stack traces"
							}
						],
						"blockTags": [
							{
								"tag": "@see",
								"content": [
									{
										"kind": "text",
										"text": "https://v8.dev/docs/stack-trace-api#customizing-stack-traces"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/node/globals.d.ts",
							"line": 28,
							"character": 8
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 93,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/globals.d.ts",
									"line": 28,
									"character": 29
								}
							],
							"signatures": [
								{
									"id": 94,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Optional override for formatting stack traces"
											}
										],
										"blockTags": [
											{
												"tag": "@see",
												"content": [
													{
														"kind": "text",
														"text": "https://v8.dev/docs/stack-trace-api#customizing-stack-traces"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "node_modules/@types/node/globals.d.ts",
											"line": 28,
											"character": 29
										}
									],
									"parameters": [
										{
											"id": 95,
											"name": "err",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "Error"
												},
												"name": "Error",
												"package": "typescript"
											}
										},
										{
											"id": 96,
											"name": "stackTraces",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": {
														"sourceFileName": "node_modules/@types/node/globals.d.ts",
														"qualifiedName": "__global.NodeJS.CallSite"
													},
													"name": "CallSite",
													"package": "@types/node",
													"qualifiedName": "__global.NodeJS.CallSite"
												}
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							]
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Error.prepareStackTrace"
					}
				},
				{
					"id": 97,
					"name": "stackTraceLimit",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isStatic": true,
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/node/globals.d.ts",
							"line": 30,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Error.stackTraceLimit"
					}
				},
				{
					"id": 101,
					"name": "isCancelled",
					"variant": "declaration",
					"kind": 262144,
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "src/core/CancelablePromise.ts",
							"line": 12,
							"character": 15
						}
					],
					"getSignature": {
						"id": 102,
						"name": "isCancelled",
						"variant": "signature",
						"kind": 524288,
						"flags": {},
						"sources": [
							{
								"fileName": "src/core/CancelablePromise.ts",
								"line": 12,
								"character": 15
							}
						],
						"type": {
							"type": "intrinsic",
							"name": "boolean"
						}
					}
				},
				{
					"id": 88,
					"name": "captureStackTrace",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isStatic": true,
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/node/globals.d.ts",
							"line": 21,
							"character": 8
						}
					],
					"signatures": [
						{
							"id": 89,
							"name": "captureStackTrace",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Create .stack property on a target object"
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/globals.d.ts",
									"line": 21,
									"character": 8
								}
							],
							"parameters": [
								{
									"id": 90,
									"name": "targetObject",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "intrinsic",
										"name": "object"
									}
								},
								{
									"id": 91,
									"name": "constructorOpt",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Function"
										},
										"name": "Function",
										"package": "typescript"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Error.captureStackTrace"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Error.captureStackTrace"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						98
					]
				},
				{
					"title": "Properties",
					"children": [
						104,
						103,
						105,
						92,
						97
					]
				},
				{
					"title": "Accessors",
					"children": [
						101
					]
				},
				{
					"title": "Methods",
					"children": [
						88
					]
				}
			],
			"sources": [
				{
					"fileName": "src/core/CancelablePromise.ts",
					"line": 5,
					"character": 13
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": {
						"sourceFileName": "node_modules/typescript/lib/lib.es5.d.ts",
						"qualifiedName": "Error"
					},
					"name": "Error",
					"package": "typescript"
				}
			]
		},
		{
			"id": 25,
			"name": "CancelablePromise",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"children": [
				{
					"id": 26,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"sources": [
						{
							"fileName": "src/core/CancelablePromise.ts",
							"line": 34,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 27,
							"name": "new CancelablePromise",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"sources": [
								{
									"fileName": "src/core/CancelablePromise.ts",
									"line": 34,
									"character": 4
								}
							],
							"typeParameter": [
								{
									"id": 28,
									"name": "T",
									"variant": "typeParam",
									"kind": 131072,
									"flags": {}
								}
							],
							"parameters": [
								{
									"id": 29,
									"name": "executor",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 30,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"sources": [
												{
													"fileName": "src/core/CancelablePromise.ts",
													"line": 35,
													"character": 18
												}
											],
											"signatures": [
												{
													"id": 31,
													"name": "__type",
													"variant": "signature",
													"kind": 4096,
													"flags": {},
													"sources": [
														{
															"fileName": "src/core/CancelablePromise.ts",
															"line": 35,
															"character": 18
														}
													],
													"parameters": [
														{
															"id": 32,
															"name": "resolve",
															"variant": "param",
															"kind": 32768,
															"flags": {},
															"type": {
																"type": "reflection",
																"declaration": {
																	"id": 33,
																	"name": "__type",
																	"variant": "declaration",
																	"kind": 65536,
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "src/core/CancelablePromise.ts",
																			"line": 36,
																			"character": 21
																		}
																	],
																	"signatures": [
																		{
																			"id": 34,
																			"name": "__type",
																			"variant": "signature",
																			"kind": 4096,
																			"flags": {},
																			"sources": [
																				{
																					"fileName": "src/core/CancelablePromise.ts",
																					"line": 36,
																					"character": 21
																				}
																			],
																			"parameters": [
																				{
																					"id": 35,
																					"name": "value",
																					"variant": "param",
																					"kind": 32768,
																					"flags": {},
																					"type": {
																						"type": "union",
																						"types": [
																							{
																								"type": "reference",
																								"target": 28,
																								"name": "T",
																								"package": "axrinth",
																								"qualifiedName": "CancelablePromise.T",
																								"refersToTypeParameter": true
																							},
																							{
																								"type": "reference",
																								"target": {
																									"sourceFileName": "node_modules/typescript/lib/lib.es5.d.ts",
																									"qualifiedName": "PromiseLike"
																								},
																								"typeArguments": [
																									{
																										"type": "reference",
																										"target": 28,
																										"name": "T",
																										"package": "axrinth",
																										"qualifiedName": "CancelablePromise.T",
																										"refersToTypeParameter": true
																									}
																								],
																								"name": "PromiseLike",
																								"package": "typescript"
																							}
																						]
																					}
																				}
																			],
																			"type": {
																				"type": "intrinsic",
																				"name": "void"
																			}
																		}
																	]
																}
															}
														},
														{
															"id": 36,
															"name": "reject",
															"variant": "param",
															"kind": 32768,
															"flags": {},
															"type": {
																"type": "reflection",
																"declaration": {
																	"id": 37,
																	"name": "__type",
																	"variant": "declaration",
																	"kind": 65536,
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "src/core/CancelablePromise.ts",
																			"line": 37,
																			"character": 20
																		}
																	],
																	"signatures": [
																		{
																			"id": 38,
																			"name": "__type",
																			"variant": "signature",
																			"kind": 4096,
																			"flags": {},
																			"sources": [
																				{
																					"fileName": "src/core/CancelablePromise.ts",
																					"line": 37,
																					"character": 20
																				}
																			],
																			"parameters": [
																				{
																					"id": 39,
																					"name": "reason",
																					"variant": "param",
																					"kind": 32768,
																					"flags": {
																						"isOptional": true
																					},
																					"type": {
																						"type": "intrinsic",
																						"name": "any"
																					}
																				}
																			],
																			"type": {
																				"type": "intrinsic",
																				"name": "void"
																			}
																		}
																	]
																}
															}
														},
														{
															"id": 40,
															"name": "onCancel",
															"variant": "param",
															"kind": 32768,
															"flags": {},
															"type": {
																"type": "reference",
																"target": {
																	"sourceFileName": "src/core/CancelablePromise.ts",
																	"qualifiedName": "OnCancel"
																},
																"name": "OnCancel",
																"package": "axrinth"
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "void"
													}
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 25,
								"typeArguments": [
									{
										"type": "reference",
										"target": 28,
										"name": "T",
										"package": "axrinth",
										"qualifiedName": "CancelablePromise.T",
										"refersToTypeParameter": true
									}
								],
								"name": "CancelablePromise",
								"package": "axrinth"
							}
						}
					]
				},
				{
					"id": 44,
					"name": "#cancelHandlers",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPrivate": true,
						"isReadonly": true
					},
					"sources": [
						{
							"fileName": "src/core/CancelablePromise.ts",
							"line": 29,
							"character": 13
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "reflection",
							"declaration": {
								"id": 45,
								"name": "__type",
								"variant": "declaration",
								"kind": 65536,
								"flags": {},
								"sources": [
									{
										"fileName": "src/core/CancelablePromise.ts",
										"line": 29,
										"character": 31
									}
								],
								"signatures": [
									{
										"id": 46,
										"name": "__type",
										"variant": "signature",
										"kind": 4096,
										"flags": {},
										"sources": [
											{
												"fileName": "src/core/CancelablePromise.ts",
												"line": 29,
												"character": 31
											}
										],
										"type": {
											"type": "intrinsic",
											"name": "void"
										}
									}
								]
							}
						}
					}
				},
				{
					"id": 43,
					"name": "#isCancelled",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPrivate": true
					},
					"sources": [
						{
							"fileName": "src/core/CancelablePromise.ts",
							"line": 28,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 42,
					"name": "#isRejected",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPrivate": true
					},
					"sources": [
						{
							"fileName": "src/core/CancelablePromise.ts",
							"line": 27,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 41,
					"name": "#isResolved",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPrivate": true
					},
					"sources": [
						{
							"fileName": "src/core/CancelablePromise.ts",
							"line": 26,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 47,
					"name": "#promise",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPrivate": true,
						"isReadonly": true
					},
					"sources": [
						{
							"fileName": "src/core/CancelablePromise.ts",
							"line": 30,
							"character": 13
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Promise"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": 28,
								"name": "T",
								"package": "axrinth",
								"qualifiedName": "CancelablePromise.T",
								"refersToTypeParameter": true
							}
						],
						"name": "Promise",
						"package": "typescript"
					}
				},
				{
					"id": 52,
					"name": "#reject",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPrivate": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/core/CancelablePromise.ts",
							"line": 32,
							"character": 4
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 53,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"sources": [
								{
									"fileName": "src/core/CancelablePromise.ts",
									"line": 32,
									"character": 14
								}
							],
							"signatures": [
								{
									"id": 54,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "src/core/CancelablePromise.ts",
											"line": 32,
											"character": 14
										}
									],
									"parameters": [
										{
											"id": 55,
											"name": "reason",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						}
					}
				},
				{
					"id": 48,
					"name": "#resolve",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPrivate": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/core/CancelablePromise.ts",
							"line": 31,
							"character": 4
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 49,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"sources": [
								{
									"fileName": "src/core/CancelablePromise.ts",
									"line": 31,
									"character": 15
								}
							],
							"signatures": [
								{
									"id": 50,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "src/core/CancelablePromise.ts",
											"line": 31,
											"character": 15
										}
									],
									"parameters": [
										{
											"id": 51,
											"name": "value",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reference",
														"target": 28,
														"name": "T",
														"package": "axrinth",
														"qualifiedName": "CancelablePromise.T",
														"refersToTypeParameter": true
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "PromiseLike"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": 28,
																"name": "T",
																"package": "axrinth",
																"qualifiedName": "CancelablePromise.T",
																"refersToTypeParameter": true
															}
														],
														"name": "PromiseLike",
														"package": "typescript"
													}
												]
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						}
					}
				},
				{
					"id": 84,
					"name": "[toStringTag]",
					"variant": "declaration",
					"kind": 262144,
					"flags": {},
					"sources": [
						{
							"fileName": "src/core/CancelablePromise.ts",
							"line": 88,
							"character": 9
						}
					],
					"getSignature": {
						"id": 85,
						"name": "[toStringTag]",
						"variant": "signature",
						"kind": 524288,
						"flags": {},
						"sources": [
							{
								"fileName": "src/core/CancelablePromise.ts",
								"line": 88,
								"character": 9
							}
						],
						"type": {
							"type": "intrinsic",
							"name": "string"
						},
						"implementationOf": {
							"type": "reference",
							"target": -1,
							"name": "Promise.[toStringTag]"
						}
					},
					"implementationOf": {
						"type": "reference",
						"target": -1,
						"name": "Promise.[toStringTag]"
					}
				},
				{
					"id": 82,
					"name": "isCancelled",
					"variant": "declaration",
					"kind": 262144,
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "src/core/CancelablePromise.ts",
							"line": 128,
							"character": 15
						}
					],
					"getSignature": {
						"id": 83,
						"name": "isCancelled",
						"variant": "signature",
						"kind": 524288,
						"flags": {},
						"sources": [
							{
								"fileName": "src/core/CancelablePromise.ts",
								"line": 128,
								"character": 15
							}
						],
						"type": {
							"type": "intrinsic",
							"name": "boolean"
						}
					}
				},
				{
					"id": 80,
					"name": "cancel",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "src/core/CancelablePromise.ts",
							"line": 109,
							"character": 11
						}
					],
					"signatures": [
						{
							"id": 81,
							"name": "cancel",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "src/core/CancelablePromise.ts",
									"line": 109,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 68,
					"name": "catch",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "src/core/CancelablePromise.ts",
							"line": 99,
							"character": 11
						}
					],
					"signatures": [
						{
							"id": 69,
							"name": "catch",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "src/core/CancelablePromise.ts",
									"line": 99,
									"character": 11
								}
							],
							"typeParameter": [
								{
									"id": 70,
									"name": "TResult",
									"variant": "typeParam",
									"kind": 131072,
									"flags": {},
									"default": {
										"type": "intrinsic",
										"name": "never"
									}
								}
							],
							"parameters": [
								{
									"id": 71,
									"name": "onRejected",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "reflection",
												"declaration": {
													"id": 72,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"sources": [
														{
															"fileName": "src/core/CancelablePromise.ts",
															"line": 100,
															"character": 22
														}
													],
													"signatures": [
														{
															"id": 73,
															"name": "__type",
															"variant": "signature",
															"kind": 4096,
															"flags": {},
															"sources": [
																{
																	"fileName": "src/core/CancelablePromise.ts",
																	"line": 100,
																	"character": 22
																}
															],
															"parameters": [
																{
																	"id": 74,
																	"name": "reason",
																	"variant": "param",
																	"kind": 32768,
																	"flags": {},
																	"type": {
																		"type": "intrinsic",
																		"name": "any"
																	}
																}
															],
															"type": {
																"type": "union",
																"types": [
																	{
																		"type": "reference",
																		"target": 70,
																		"name": "TResult",
																		"package": "axrinth",
																		"refersToTypeParameter": true
																	},
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "node_modules/typescript/lib/lib.es5.d.ts",
																			"qualifiedName": "PromiseLike"
																		},
																		"typeArguments": [
																			{
																				"type": "reference",
																				"target": 70,
																				"name": "TResult",
																				"package": "axrinth",
																				"refersToTypeParameter": true
																			}
																		],
																		"name": "PromiseLike",
																		"package": "typescript"
																	}
																]
															}
														}
													]
												}
											}
										]
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "union",
										"types": [
											{
												"type": "reference",
												"target": 28,
												"name": "T",
												"package": "axrinth",
												"qualifiedName": "CancelablePromise.T",
												"refersToTypeParameter": true
											},
											{
												"type": "reference",
												"target": 70,
												"name": "TResult",
												"package": "axrinth",
												"refersToTypeParameter": true
											}
										]
									}
								],
								"name": "Promise",
								"package": "typescript"
							},
							"implementationOf": {
								"type": "reference",
								"target": -1,
								"name": "Promise.catch"
							}
						}
					],
					"implementationOf": {
						"type": "reference",
						"target": -1,
						"name": "Promise.catch"
					}
				},
				{
					"id": 75,
					"name": "finally",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "src/core/CancelablePromise.ts",
							"line": 105,
							"character": 11
						}
					],
					"signatures": [
						{
							"id": 76,
							"name": "finally",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "src/core/CancelablePromise.ts",
									"line": 105,
									"character": 11
								}
							],
							"parameters": [
								{
									"id": 77,
									"name": "onFinally",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "reflection",
												"declaration": {
													"id": 78,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"sources": [
														{
															"fileName": "src/core/CancelablePromise.ts",
															"line": 105,
															"character": 32
														}
													],
													"signatures": [
														{
															"id": 79,
															"name": "__type",
															"variant": "signature",
															"kind": 4096,
															"flags": {},
															"sources": [
																{
																	"fileName": "src/core/CancelablePromise.ts",
																	"line": 105,
																	"character": 32
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "void"
															}
														}
													]
												}
											}
										]
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 28,
										"name": "T",
										"package": "axrinth",
										"qualifiedName": "CancelablePromise.T",
										"refersToTypeParameter": true
									}
								],
								"name": "Promise",
								"package": "typescript"
							},
							"implementationOf": {
								"type": "reference",
								"target": -1,
								"name": "Promise.finally"
							}
						}
					],
					"implementationOf": {
						"type": "reference",
						"target": -1,
						"name": "Promise.finally"
					}
				},
				{
					"id": 56,
					"name": "then",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "src/core/CancelablePromise.ts",
							"line": 92,
							"character": 11
						}
					],
					"signatures": [
						{
							"id": 57,
							"name": "then",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "src/core/CancelablePromise.ts",
									"line": 92,
									"character": 11
								}
							],
							"typeParameter": [
								{
									"id": 58,
									"name": "TResult1",
									"variant": "typeParam",
									"kind": 131072,
									"flags": {},
									"default": {
										"type": "reference",
										"target": 28,
										"name": "T",
										"package": "axrinth",
										"qualifiedName": "CancelablePromise.T",
										"refersToTypeParameter": true
									}
								},
								{
									"id": 59,
									"name": "TResult2",
									"variant": "typeParam",
									"kind": 131072,
									"flags": {},
									"default": {
										"type": "intrinsic",
										"name": "never"
									}
								}
							],
							"parameters": [
								{
									"id": 60,
									"name": "onFulfilled",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "reflection",
												"declaration": {
													"id": 61,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"sources": [
														{
															"fileName": "src/core/CancelablePromise.ts",
															"line": 93,
															"character": 23
														}
													],
													"signatures": [
														{
															"id": 62,
															"name": "__type",
															"variant": "signature",
															"kind": 4096,
															"flags": {},
															"sources": [
																{
																	"fileName": "src/core/CancelablePromise.ts",
																	"line": 93,
																	"character": 23
																}
															],
															"parameters": [
																{
																	"id": 63,
																	"name": "value",
																	"variant": "param",
																	"kind": 32768,
																	"flags": {},
																	"type": {
																		"type": "reference",
																		"target": 28,
																		"name": "T",
																		"package": "axrinth",
																		"qualifiedName": "CancelablePromise.T",
																		"refersToTypeParameter": true
																	}
																}
															],
															"type": {
																"type": "union",
																"types": [
																	{
																		"type": "reference",
																		"target": 58,
																		"name": "TResult1",
																		"package": "axrinth",
																		"refersToTypeParameter": true
																	},
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "node_modules/typescript/lib/lib.es5.d.ts",
																			"qualifiedName": "PromiseLike"
																		},
																		"typeArguments": [
																			{
																				"type": "reference",
																				"target": 58,
																				"name": "TResult1",
																				"package": "axrinth",
																				"refersToTypeParameter": true
																			}
																		],
																		"name": "PromiseLike",
																		"package": "typescript"
																	}
																]
															}
														}
													]
												}
											}
										]
									}
								},
								{
									"id": 64,
									"name": "onRejected",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "reflection",
												"declaration": {
													"id": 65,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"sources": [
														{
															"fileName": "src/core/CancelablePromise.ts",
															"line": 94,
															"character": 22
														}
													],
													"signatures": [
														{
															"id": 66,
															"name": "__type",
															"variant": "signature",
															"kind": 4096,
															"flags": {},
															"sources": [
																{
																	"fileName": "src/core/CancelablePromise.ts",
																	"line": 94,
																	"character": 22
																}
															],
															"parameters": [
																{
																	"id": 67,
																	"name": "reason",
																	"variant": "param",
																	"kind": 32768,
																	"flags": {},
																	"type": {
																		"type": "intrinsic",
																		"name": "any"
																	}
																}
															],
															"type": {
																"type": "union",
																"types": [
																	{
																		"type": "reference",
																		"target": 59,
																		"name": "TResult2",
																		"package": "axrinth",
																		"refersToTypeParameter": true
																	},
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "node_modules/typescript/lib/lib.es5.d.ts",
																			"qualifiedName": "PromiseLike"
																		},
																		"typeArguments": [
																			{
																				"type": "reference",
																				"target": 59,
																				"name": "TResult2",
																				"package": "axrinth",
																				"refersToTypeParameter": true
																			}
																		],
																		"name": "PromiseLike",
																		"package": "typescript"
																	}
																]
															}
														}
													]
												}
											}
										]
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "union",
										"types": [
											{
												"type": "reference",
												"target": 58,
												"name": "TResult1",
												"package": "axrinth",
												"refersToTypeParameter": true
											},
											{
												"type": "reference",
												"target": 59,
												"name": "TResult2",
												"package": "axrinth",
												"refersToTypeParameter": true
											}
										]
									}
								],
								"name": "Promise",
								"package": "typescript"
							},
							"implementationOf": {
								"type": "reference",
								"target": -1,
								"name": "Promise.then"
							}
						}
					],
					"implementationOf": {
						"type": "reference",
						"target": -1,
						"name": "Promise.then"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						26
					]
				},
				{
					"title": "Properties",
					"children": [
						44,
						43,
						42,
						41,
						47,
						52,
						48
					]
				},
				{
					"title": "Accessors",
					"children": [
						84,
						82
					]
				},
				{
					"title": "Methods",
					"children": [
						80,
						68,
						75,
						56
					]
				}
			],
			"sources": [
				{
					"fileName": "src/core/CancelablePromise.ts",
					"line": 25,
					"character": 13
				}
			],
			"typeParameters": [
				{
					"id": 86,
					"name": "T",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				}
			],
			"implementedTypes": [
				{
					"type": "reference",
					"target": {
						"sourceFileName": "node_modules/typescript/lib/lib.es5.d.ts",
						"qualifiedName": "Promise"
					},
					"typeArguments": [
						{
							"type": "reference",
							"target": 28,
							"name": "T",
							"package": "axrinth",
							"qualifiedName": "CancelablePromise.T",
							"refersToTypeParameter": true
						}
					],
					"name": "Promise",
					"package": "typescript"
				}
			]
		},
		{
			"id": 639,
			"name": "MiscService",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"children": [
				{
					"id": 645,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 646,
							"name": "new MiscService",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 639,
								"name": "MiscService",
								"package": "axrinth"
							}
						}
					]
				},
				{
					"id": 640,
					"name": "forgeUpdates",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isPublic": true,
						"isStatic": true
					},
					"sources": [
						{
							"fileName": "src/services/MiscService.ts",
							"line": 39,
							"character": 18
						}
					],
					"signatures": [
						{
							"id": 641,
							"name": "forgeUpdates",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Forge Updates JSON file\nIf you're a Forge mod developer, your Modrinth mods have an automatically generated "
									},
									{
										"kind": "code",
										"text": "`updates.json`"
									},
									{
										"kind": "text",
										"text": " using the\r\n[Forge Update Checker](https://docs.minecraftforge.net/en/latest/misc/updatechecker/).\r\n\r\nThe only setup is to insert the URL into the "
									},
									{
										"kind": "code",
										"text": "`[[mods]]`"
									},
									{
										"kind": "text",
										"text": " section of your "
									},
									{
										"kind": "code",
										"text": "`mods.toml`"
									},
									{
										"kind": "text",
										"text": " file as such:\r\n\r\n"
									},
									{
										"kind": "code",
										"text": "```toml\r\n[[mods]]\r\n# the other stuff here - ID, version, display name, etc.\r\nupdateJSONURL = \"https://api.modrinth.com/updates/{slug|ID}/forge_updates.json\"\r\n```"
									},
									{
										"kind": "text",
										"text": "\r\n\r\nReplace "
									},
									{
										"kind": "code",
										"text": "`{slug|id}`"
									},
									{
										"kind": "text",
										"text": " with the slug or ID of your project.\r\n\r\nModrinth will handle the rest! When you update your mod, Forge will notify your users that their copy of your mod is out of date.\r\n\r\nMake sure that the version format you use for your Modrinth releases is the same as the version format you use in your "
									},
									{
										"kind": "code",
										"text": "`mods.toml`"
									},
									{
										"kind": "text",
										"text": ".\r\nIf you use a format such as "
									},
									{
										"kind": "code",
										"text": "`1.2.3-forge`"
									},
									{
										"kind": "text",
										"text": " or "
									},
									{
										"kind": "code",
										"text": "`1.2.3+1.19`"
									},
									{
										"kind": "text",
										"text": " with your Modrinth releases but your "
									},
									{
										"kind": "code",
										"text": "`mods.toml`"
									},
									{
										"kind": "text",
										"text": " only has "
									},
									{
										"kind": "code",
										"text": "`1.2.3`"
									},
									{
										"kind": "text",
										"text": ",\r\nthe update checker may not function properly."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "ForgeUpdates Expected response to a valid request"
											}
										]
									},
									{
										"tag": "@throws",
										"content": [
											{
												"kind": "text",
												"text": "ApiError"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "src/services/MiscService.ts",
									"line": 39,
									"character": 18
								}
							],
							"parameters": [
								{
									"id": 642,
									"name": "idSlug",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The ID or slug of the project"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 25,
								"typeArguments": [
									{
										"type": "reference",
										"target": 264,
										"name": "ForgeUpdates",
										"package": "axrinth"
									}
								],
								"name": "CancelablePromise",
								"package": "axrinth"
							}
						}
					]
				},
				{
					"id": 643,
					"name": "statistics",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isPublic": true,
						"isStatic": true
					},
					"sources": [
						{
							"fileName": "src/services/MiscService.ts",
							"line": 59,
							"character": 18
						}
					],
					"signatures": [
						{
							"id": 644,
							"name": "statistics",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Various statistics about this Modrinth instance"
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "Statistics Expected response to a valid request"
											}
										]
									},
									{
										"tag": "@throws",
										"content": [
											{
												"kind": "text",
												"text": "ApiError"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "src/services/MiscService.ts",
									"line": 59,
									"character": 18
								}
							],
							"type": {
								"type": "reference",
								"target": 25,
								"typeArguments": [
									{
										"type": "reference",
										"target": 487,
										"name": "Statistics",
										"package": "axrinth"
									}
								],
								"name": "CancelablePromise",
								"package": "axrinth"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						645
					]
				},
				{
					"title": "Methods",
					"children": [
						640,
						643
					]
				}
			],
			"sources": [
				{
					"fileName": "src/services/MiscService.ts",
					"line": 12,
					"character": 13
				}
			]
		},
		{
			"id": 647,
			"name": "NotificationsService",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"children": [
				{
					"id": 669,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 670,
							"name": "new NotificationsService",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 647,
								"name": "NotificationsService",
								"package": "axrinth"
							}
						}
					]
				},
				{
					"id": 657,
					"name": "deleteNotification",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isPublic": true,
						"isStatic": true
					},
					"sources": [
						{
							"fileName": "src/services/NotificationsService.ts",
							"line": 85,
							"character": 18
						}
					],
					"signatures": [
						{
							"id": 658,
							"name": "deleteNotification",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Delete notification"
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "void"
											}
										]
									},
									{
										"tag": "@throws",
										"content": [
											{
												"kind": "text",
												"text": "ApiError"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "src/services/NotificationsService.ts",
									"line": 85,
									"character": 18
								}
							],
							"parameters": [
								{
									"id": 659,
									"name": "id",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The ID of the notification"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 25,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "CancelablePromise",
								"package": "axrinth"
							}
						}
					]
				},
				{
					"id": 666,
					"name": "deleteNotifications",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isPublic": true,
						"isStatic": true
					},
					"sources": [
						{
							"fileName": "src/services/NotificationsService.ts",
							"line": 151,
							"character": 18
						}
					],
					"signatures": [
						{
							"id": 667,
							"name": "deleteNotifications",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Delete multiple notifications"
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "void"
											}
										]
									},
									{
										"tag": "@throws",
										"content": [
											{
												"kind": "text",
												"text": "ApiError"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "src/services/NotificationsService.ts",
									"line": 151,
									"character": 18
								}
							],
							"parameters": [
								{
									"id": 668,
									"name": "ids",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The IDs of the notifications"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 25,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "CancelablePromise",
								"package": "axrinth"
							}
						}
					]
				},
				{
					"id": 651,
					"name": "getNotification",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isPublic": true,
						"isStatic": true
					},
					"sources": [
						{
							"fileName": "src/services/NotificationsService.ts",
							"line": 41,
							"character": 18
						}
					],
					"signatures": [
						{
							"id": 652,
							"name": "getNotification",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Get notification from ID"
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "Notification Expected response to a valid request"
											}
										]
									},
									{
										"tag": "@throws",
										"content": [
											{
												"kind": "text",
												"text": "ApiError"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "src/services/NotificationsService.ts",
									"line": 41,
									"character": 18
								}
							],
							"parameters": [
								{
									"id": 653,
									"name": "id",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The ID of the notification"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 25,
								"typeArguments": [
									{
										"type": "reference",
										"target": 363,
										"name": "Notification",
										"package": "axrinth"
									}
								],
								"name": "CancelablePromise",
								"package": "axrinth"
							}
						}
					]
				},
				{
					"id": 660,
					"name": "getNotifications",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isPublic": true,
						"isStatic": true
					},
					"sources": [
						{
							"fileName": "src/services/NotificationsService.ts",
							"line": 107,
							"character": 18
						}
					],
					"signatures": [
						{
							"id": 661,
							"name": "getNotifications",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Get multiple notifications"
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "Notification Expected response to a valid request"
											}
										]
									},
									{
										"tag": "@throws",
										"content": [
											{
												"kind": "text",
												"text": "ApiError"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "src/services/NotificationsService.ts",
									"line": 107,
									"character": 18
								}
							],
							"parameters": [
								{
									"id": 662,
									"name": "ids",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The IDs of the notifications"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 25,
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 363,
											"name": "Notification",
											"package": "axrinth"
										}
									}
								],
								"name": "CancelablePromise",
								"package": "axrinth"
							}
						}
					]
				},
				{
					"id": 648,
					"name": "getUserNotifications",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isPublic": true,
						"isStatic": true
					},
					"sources": [
						{
							"fileName": "src/services/NotificationsService.ts",
							"line": 19,
							"character": 18
						}
					],
					"signatures": [
						{
							"id": 649,
							"name": "getUserNotifications",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Get user's notifications"
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "Notification Expected response to a valid request"
											}
										]
									},
									{
										"tag": "@throws",
										"content": [
											{
												"kind": "text",
												"text": "ApiError"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "src/services/NotificationsService.ts",
									"line": 19,
									"character": 18
								}
							],
							"parameters": [
								{
									"id": 650,
									"name": "idUsername",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The ID or username of the user"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 25,
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 363,
											"name": "Notification",
											"package": "axrinth"
										}
									}
								],
								"name": "CancelablePromise",
								"package": "axrinth"
							}
						}
					]
				},
				{
					"id": 654,
					"name": "readNotification",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isPublic": true,
						"isStatic": true
					},
					"sources": [
						{
							"fileName": "src/services/NotificationsService.ts",
							"line": 63,
							"character": 18
						}
					],
					"signatures": [
						{
							"id": 655,
							"name": "readNotification",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Mark notification as read"
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "void"
											}
										]
									},
									{
										"tag": "@throws",
										"content": [
											{
												"kind": "text",
												"text": "ApiError"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "src/services/NotificationsService.ts",
									"line": 63,
									"character": 18
								}
							],
							"parameters": [
								{
									"id": 656,
									"name": "id",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The ID of the notification"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 25,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "CancelablePromise",
								"package": "axrinth"
							}
						}
					]
				},
				{
					"id": 663,
					"name": "readNotifications",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isPublic": true,
						"isStatic": true
					},
					"sources": [
						{
							"fileName": "src/services/NotificationsService.ts",
							"line": 129,
							"character": 18
						}
					],
					"signatures": [
						{
							"id": 664,
							"name": "readNotifications",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Mark multiple notifications as read"
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "void"
											}
										]
									},
									{
										"tag": "@throws",
										"content": [
											{
												"kind": "text",
												"text": "ApiError"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "src/services/NotificationsService.ts",
									"line": 129,
									"character": 18
								}
							],
							"parameters": [
								{
									"id": 665,
									"name": "ids",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The IDs of the notifications"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 25,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "CancelablePromise",
								"package": "axrinth"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						669
					]
				},
				{
					"title": "Methods",
					"children": [
						657,
						666,
						651,
						660,
						648,
						654,
						663
					]
				}
			],
			"sources": [
				{
					"fileName": "src/services/NotificationsService.ts",
					"line": 11,
					"character": 13
				}
			]
		},
		{
			"id": 671,
			"name": "ProjectsService",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"children": [
				{
					"id": 747,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 748,
							"name": "new ProjectsService",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 671,
								"name": "ProjectsService",
								"package": "axrinth"
							}
						}
					]
				},
				{
					"id": 713,
					"name": "addGalleryImage",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isPublic": true,
						"isStatic": true
					},
					"sources": [
						{
							"fileName": "src/services/ProjectsService.ts",
							"line": 339,
							"character": 18
						}
					],
					"signatures": [
						{
							"id": 714,
							"name": "addGalleryImage",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Add a gallery image\nModrinth allows you to upload files of up to 5MiB to a project's gallery."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "void"
											}
										]
									},
									{
										"tag": "@throws",
										"content": [
											{
												"kind": "text",
												"text": "ApiError"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "src/services/ProjectsService.ts",
									"line": 339,
									"character": 18
								}
							],
							"parameters": [
								{
									"id": 715,
									"name": "idSlug",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The ID or slug of the project"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 716,
									"name": "ext",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Image extension"
											}
										]
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": "png"
											},
											{
												"type": "literal",
												"value": "jpg"
											},
											{
												"type": "literal",
												"value": "jpeg"
											},
											{
												"type": "literal",
												"value": "bmp"
											},
											{
												"type": "literal",
												"value": "gif"
											},
											{
												"type": "literal",
												"value": "webp"
											},
											{
												"type": "literal",
												"value": "svg"
											},
											{
												"type": "literal",
												"value": "svgz"
											},
											{
												"type": "literal",
												"value": "rgb"
											}
										]
									}
								},
								{
									"id": 717,
									"name": "featured",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Whether an image is featured"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 718,
									"name": "title",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Title of the image"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 719,
									"name": "description",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Description of the image"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 720,
									"name": "ordering",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Ordering of the image"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 721,
									"name": "requestBody",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "Blob"
										},
										"name": "Blob",
										"package": "typescript"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 25,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "CancelablePromise",
								"package": "axrinth"
							}
						}
					]
				},
				{
					"id": 702,
					"name": "changeProjectIcon",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isPublic": true,
						"isStatic": true
					},
					"sources": [
						{
							"fileName": "src/services/ProjectsService.ts",
							"line": 261,
							"character": 18
						}
					],
					"signatures": [
						{
							"id": 703,
							"name": "changeProjectIcon",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Change project's icon\nThe new icon may be up to 256KiB in size."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "void"
											}
										]
									},
									{
										"tag": "@throws",
										"content": [
											{
												"kind": "text",
												"text": "ApiError"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "src/services/ProjectsService.ts",
									"line": 261,
									"character": 18
								}
							],
							"parameters": [
								{
									"id": 704,
									"name": "idSlug",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The ID or slug of the project"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 705,
									"name": "ext",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Image extension"
											}
										]
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": "png"
											},
											{
												"type": "literal",
												"value": "jpg"
											},
											{
												"type": "literal",
												"value": "jpeg"
											},
											{
												"type": "literal",
												"value": "bmp"
											},
											{
												"type": "literal",
												"value": "gif"
											},
											{
												"type": "literal",
												"value": "webp"
											},
											{
												"type": "literal",
												"value": "svg"
											},
											{
												"type": "literal",
												"value": "svgz"
											},
											{
												"type": "literal",
												"value": "rgb"
											}
										]
									}
								},
								{
									"id": 706,
									"name": "requestBody",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "Blob"
										},
										"name": "Blob",
										"package": "typescript"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 25,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "CancelablePromise",
								"package": "axrinth"
							}
						}
					]
				},
				{
					"id": 710,
					"name": "checkProjectValidity",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isPublic": true,
						"isStatic": true
					},
					"sources": [
						{
							"fileName": "src/services/ProjectsService.ts",
							"line": 311,
							"character": 18
						}
					],
					"signatures": [
						{
							"id": 711,
							"name": "checkProjectValidity",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Check project slug/ID validity"
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "ProjectIdentifier Expected response to a valid request"
											}
										]
									},
									{
										"tag": "@throws",
										"content": [
											{
												"kind": "text",
												"text": "ApiError"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "src/services/ProjectsService.ts",
									"line": 311,
									"character": 18
								}
							],
							"parameters": [
								{
									"id": 712,
									"name": "idSlug",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The ID or slug of the project"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 25,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"name": "CancelablePromise",
								"package": "axrinth"
							}
						}
					]
				},
				{
					"id": 699,
					"name": "createProject",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isPublic": true,
						"isStatic": true
					},
					"sources": [
						{
							"fileName": "src/services/ProjectsService.ts",
							"line": 237,
							"character": 18
						}
					],
					"signatures": [
						{
							"id": 700,
							"name": "createProject",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Create a project"
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "Project Expected response to a valid request"
											}
										]
									},
									{
										"tag": "@throws",
										"content": [
											{
												"kind": "text",
												"text": "ApiError"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "src/services/ProjectsService.ts",
									"line": 237,
									"character": 18
								}
							],
							"parameters": [
								{
									"id": 701,
									"name": "formData",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "New project"
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 213,
										"name": "CreateProjectBody",
										"package": "axrinth"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 25,
								"typeArguments": [
									{
										"type": "reference",
										"target": 400,
										"name": "Project",
										"package": "axrinth"
									}
								],
								"name": "CancelablePromise",
								"package": "axrinth"
							}
						}
					]
				},
				{
					"id": 730,
					"name": "deleteGalleryImage",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isPublic": true,
						"isStatic": true
					},
					"sources": [
						{
							"fileName": "src/services/ProjectsService.ts",
							"line": 417,
							"character": 18
						}
					],
					"signatures": [
						{
							"id": 731,
							"name": "deleteGalleryImage",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Delete a gallery image"
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "void"
											}
										]
									},
									{
										"tag": "@throws",
										"content": [
											{
												"kind": "text",
												"text": "ApiError"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "src/services/ProjectsService.ts",
									"line": 417,
									"character": 18
								}
							],
							"parameters": [
								{
									"id": 732,
									"name": "idSlug",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The ID or slug of the project"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 733,
									"name": "url",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "URL link of the image to delete"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 25,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "CancelablePromise",
								"package": "axrinth"
							}
						}
					]
				},
				{
					"id": 686,
					"name": "deleteProject",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isPublic": true,
						"isStatic": true
					},
					"sources": [
						{
							"fileName": "src/services/ProjectsService.ts",
							"line": 150,
							"character": 18
						}
					],
					"signatures": [
						{
							"id": 687,
							"name": "deleteProject",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Delete a project"
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "void"
											}
										]
									},
									{
										"tag": "@throws",
										"content": [
											{
												"kind": "text",
												"text": "ApiError"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "src/services/ProjectsService.ts",
									"line": 150,
									"character": 18
								}
							],
							"parameters": [
								{
									"id": 688,
									"name": "idSlug",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The ID or slug of the project"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 25,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "CancelablePromise",
								"package": "axrinth"
							}
						}
					]
				},
				{
					"id": 707,
					"name": "deleteProjectIcon",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isPublic": true,
						"isStatic": true
					},
					"sources": [
						{
							"fileName": "src/services/ProjectsService.ts",
							"line": 289,
							"character": 18
						}
					],
					"signatures": [
						{
							"id": 708,
							"name": "deleteProjectIcon",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Delete project's icon"
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "void"
											}
										]
									},
									{
										"tag": "@throws",
										"content": [
											{
												"kind": "text",
												"text": "ApiError"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "src/services/ProjectsService.ts",
									"line": 289,
									"character": 18
								}
							],
							"parameters": [
								{
									"id": 709,
									"name": "idSlug",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The ID or slug of the project"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 25,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "CancelablePromise",
								"package": "axrinth"
							}
						}
					]
				},
				{
					"id": 737,
					"name": "followProject",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isPublic": true,
						"isStatic": true
					},
					"sources": [
						{
							"fileName": "src/services/ProjectsService.ts",
							"line": 464,
							"character": 18
						}
					],
					"signatures": [
						{
							"id": 738,
							"name": "followProject",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Follow a project"
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "void"
											}
										]
									},
									{
										"tag": "@throws",
										"content": [
											{
												"kind": "text",
												"text": "ApiError"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "src/services/ProjectsService.ts",
									"line": 464,
									"character": 18
								}
							],
							"parameters": [
								{
									"id": 739,
									"name": "idSlug",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The ID or slug of the project"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 25,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "CancelablePromise",
								"package": "axrinth"
							}
						}
					]
				},
				{
					"id": 734,
					"name": "getDependencies",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isPublic": true,
						"isStatic": true
					},
					"sources": [
						{
							"fileName": "src/services/ProjectsService.ts",
							"line": 443,
							"character": 18
						}
					],
					"signatures": [
						{
							"id": 735,
							"name": "getDependencies",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Get all of a project's dependencies"
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "ProjectDependencyList Expected response to a valid request"
											}
										]
									},
									{
										"tag": "@throws",
										"content": [
											{
												"kind": "text",
												"text": "ApiError"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "src/services/ProjectsService.ts",
									"line": 443,
									"character": 18
								}
							],
							"parameters": [
								{
									"id": 736,
									"name": "idSlug",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The ID or slug of the project"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 25,
								"typeArguments": [
									{
										"type": "reference",
										"target": 416,
										"name": "ProjectDependencyList",
										"package": "axrinth"
									}
								],
								"name": "CancelablePromise",
								"package": "axrinth"
							}
						}
					]
				},
				{
					"id": 679,
					"name": "getProject",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isPublic": true,
						"isStatic": true
					},
					"sources": [
						{
							"fileName": "src/services/ProjectsService.ts",
							"line": 103,
							"character": 18
						}
					],
					"signatures": [
						{
							"id": 680,
							"name": "getProject",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Get a project"
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "Project Expected response to a valid request"
											}
										]
									},
									{
										"tag": "@throws",
										"content": [
											{
												"kind": "text",
												"text": "ApiError"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "src/services/ProjectsService.ts",
									"line": 103,
									"character": 18
								}
							],
							"parameters": [
								{
									"id": 681,
									"name": "idSlug",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The ID or slug of the project"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 25,
								"typeArguments": [
									{
										"type": "reference",
										"target": 400,
										"name": "Project",
										"package": "axrinth"
									}
								],
								"name": "CancelablePromise",
								"package": "axrinth"
							}
						}
					]
				},
				{
					"id": 689,
					"name": "getProjects",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isPublic": true,
						"isStatic": true
					},
					"sources": [
						{
							"fileName": "src/services/ProjectsService.ts",
							"line": 172,
							"character": 18
						}
					],
					"signatures": [
						{
							"id": 690,
							"name": "getProjects",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Get multiple projects"
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "Project Expected response to a valid request"
											}
										]
									},
									{
										"tag": "@throws",
										"content": [
											{
												"kind": "text",
												"text": "ApiError"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "src/services/ProjectsService.ts",
									"line": 172,
									"character": 18
								}
							],
							"parameters": [
								{
									"id": 691,
									"name": "ids",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The IDs and/or slugs of the projects"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 25,
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 400,
											"name": "Project",
											"package": "axrinth"
										}
									}
								],
								"name": "CancelablePromise",
								"package": "axrinth"
							}
						}
					]
				},
				{
					"id": 722,
					"name": "modifyGalleryImage",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isPublic": true,
						"isStatic": true
					},
					"sources": [
						{
							"fileName": "src/services/ProjectsService.ts",
							"line": 382,
							"character": 18
						}
					],
					"signatures": [
						{
							"id": 723,
							"name": "modifyGalleryImage",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Modify a gallery image"
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "void"
											}
										]
									},
									{
										"tag": "@throws",
										"content": [
											{
												"kind": "text",
												"text": "ApiError"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "src/services/ProjectsService.ts",
									"line": 382,
									"character": 18
								}
							],
							"parameters": [
								{
									"id": 724,
									"name": "idSlug",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The ID or slug of the project"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 725,
									"name": "url",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "URL link of the image to modify"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 726,
									"name": "featured",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Whether the image is featured"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 727,
									"name": "title",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "New title of the image"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 728,
									"name": "description",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "New description of the image"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 729,
									"name": "ordering",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "New ordering of the image"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 25,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "CancelablePromise",
								"package": "axrinth"
							}
						}
					]
				},
				{
					"id": 682,
					"name": "modifyProject",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isPublic": true,
						"isStatic": true
					},
					"sources": [
						{
							"fileName": "src/services/ProjectsService.ts",
							"line": 125,
							"character": 18
						}
					],
					"signatures": [
						{
							"id": 683,
							"name": "modifyProject",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Modify a project"
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "void"
											}
										]
									},
									{
										"tag": "@throws",
										"content": [
											{
												"kind": "text",
												"text": "ApiError"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "src/services/ProjectsService.ts",
									"line": 125,
									"character": 18
								}
							],
							"parameters": [
								{
									"id": 684,
									"name": "idSlug",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The ID or slug of the project"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 685,
									"name": "requestBody",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Modified project fields"
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 244,
										"name": "EditableProject",
										"package": "axrinth"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 25,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "CancelablePromise",
								"package": "axrinth"
							}
						}
					]
				},
				{
					"id": 692,
					"name": "patchProjects",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isPublic": true,
						"isStatic": true
					},
					"sources": [
						{
							"fileName": "src/services/ProjectsService.ts",
							"line": 191,
							"character": 18
						}
					],
					"signatures": [
						{
							"id": 693,
							"name": "patchProjects",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Bulk-edit multiple projects"
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "void"
											}
										]
									},
									{
										"tag": "@throws",
										"content": [
											{
												"kind": "text",
												"text": "ApiError"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "src/services/ProjectsService.ts",
									"line": 191,
									"character": 18
								}
							],
							"parameters": [
								{
									"id": 694,
									"name": "ids",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The IDs and/or slugs of the projects"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 695,
									"name": "requestBody",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Fields to edit on all projects specified"
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 385,
										"name": "PatchProjectsBody",
										"package": "axrinth"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 25,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "CancelablePromise",
								"package": "axrinth"
							}
						}
					]
				},
				{
					"id": 696,
					"name": "randomProjects",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isPublic": true,
						"isStatic": true
					},
					"sources": [
						{
							"fileName": "src/services/ProjectsService.ts",
							"line": 216,
							"character": 18
						}
					],
					"signatures": [
						{
							"id": 697,
							"name": "randomProjects",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Get a list of random projects"
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "Project Expected response to a valid request"
											}
										]
									},
									{
										"tag": "@throws",
										"content": [
											{
												"kind": "text",
												"text": "ApiError"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "src/services/ProjectsService.ts",
									"line": 216,
									"character": 18
								}
							],
							"parameters": [
								{
									"id": 698,
									"name": "count",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The number of random projects to return"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 25,
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 400,
											"name": "Project",
											"package": "axrinth"
										}
									}
								],
								"name": "CancelablePromise",
								"package": "axrinth"
							}
						}
					]
				},
				{
					"id": 743,
					"name": "scheduleProject",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isPublic": true,
						"isStatic": true
					},
					"sources": [
						{
							"fileName": "src/services/ProjectsService.ts",
							"line": 509,
							"character": 18
						}
					],
					"signatures": [
						{
							"id": 744,
							"name": "scheduleProject",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Schedule a project"
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "void"
											}
										]
									},
									{
										"tag": "@throws",
										"content": [
											{
												"kind": "text",
												"text": "ApiError"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "src/services/ProjectsService.ts",
									"line": 509,
									"character": 18
								}
							],
							"parameters": [
								{
									"id": 745,
									"name": "idSlug",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The ID or slug of the project"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 746,
									"name": "requestBody",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Information about date and requested status"
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 452,
										"name": "Schedule",
										"package": "axrinth"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 25,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "CancelablePromise",
								"package": "axrinth"
							}
						}
					]
				},
				{
					"id": 672,
					"name": "searchProjects",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isPublic": true,
						"isStatic": true
					},
					"sources": [
						{
							"fileName": "src/services/ProjectsService.ts",
							"line": 74,
							"character": 18
						}
					],
					"signatures": [
						{
							"id": 673,
							"name": "searchProjects",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Search projects"
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "SearchResults Expected response to a valid request"
											}
										]
									},
									{
										"tag": "@throws",
										"content": [
											{
												"kind": "text",
												"text": "ApiError"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "src/services/ProjectsService.ts",
									"line": 74,
									"character": 18
								}
							],
							"parameters": [
								{
									"id": 674,
									"name": "query",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The query to search for"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 675,
									"name": "facets",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Facets are an essential concept for understanding how to filter out results.\n\nThese are the most commonly used facet types:\n- "
											},
											{
												"kind": "code",
												"text": "`project_type`"
											},
											{
												"kind": "text",
												"text": "\n- "
											},
											{
												"kind": "code",
												"text": "`categories`"
											},
											{
												"kind": "text",
												"text": " (loaders are lumped in with categories in search)\n- "
											},
											{
												"kind": "code",
												"text": "`versions`"
											},
											{
												"kind": "text",
												"text": "\n- "
											},
											{
												"kind": "code",
												"text": "`client_side`"
											},
											{
												"kind": "text",
												"text": "\n- "
											},
											{
												"kind": "code",
												"text": "`server_side`"
											},
											{
												"kind": "text",
												"text": "\n- "
											},
											{
												"kind": "code",
												"text": "`open_source`"
											},
											{
												"kind": "text",
												"text": "\n\nSeveral others are also available for use, though these should not be used outside very specific use cases.\n- "
											},
											{
												"kind": "code",
												"text": "`title`"
											},
											{
												"kind": "text",
												"text": "\n- "
											},
											{
												"kind": "code",
												"text": "`author`"
											},
											{
												"kind": "text",
												"text": "\n- "
											},
											{
												"kind": "code",
												"text": "`follows`"
											},
											{
												"kind": "text",
												"text": "\n- "
											},
											{
												"kind": "code",
												"text": "`project_id`"
											},
											{
												"kind": "text",
												"text": "\n- "
											},
											{
												"kind": "code",
												"text": "`license`"
											},
											{
												"kind": "text",
												"text": "\n- "
											},
											{
												"kind": "code",
												"text": "`downloads`"
											},
											{
												"kind": "text",
												"text": "\n- "
											},
											{
												"kind": "code",
												"text": "`color`"
											},
											{
												"kind": "text",
												"text": "\n- "
											},
											{
												"kind": "code",
												"text": "`created_timestamp`"
											},
											{
												"kind": "text",
												"text": "\n- "
											},
											{
												"kind": "code",
												"text": "`modified_timestamp`"
											},
											{
												"kind": "text",
												"text": "\n\nIn order to then use these facets, you need a value to filter by, as well as an operation to perform on this value.\nThe most common operation is "
											},
											{
												"kind": "code",
												"text": "`:`"
											},
											{
												"kind": "text",
												"text": " (same as "
											},
											{
												"kind": "code",
												"text": "`=`"
											},
											{
												"kind": "text",
												"text": "), though you can also use "
											},
											{
												"kind": "code",
												"text": "`!=`"
											},
											{
												"kind": "text",
												"text": ", "
											},
											{
												"kind": "code",
												"text": "`>=`"
											},
											{
												"kind": "text",
												"text": ", "
											},
											{
												"kind": "code",
												"text": "`>`"
											},
											{
												"kind": "text",
												"text": ", "
											},
											{
												"kind": "code",
												"text": "`<=`"
											},
											{
												"kind": "text",
												"text": ", and "
											},
											{
												"kind": "code",
												"text": "`<`"
											},
											{
												"kind": "text",
												"text": ".\nJoin together the type, operation, and value, and you've got your string.\n"
											},
											{
												"kind": "code",
												"text": "```\n{type} {operation} {value}\n```"
											},
											{
												"kind": "text",
												"text": "\n\nExamples:\n"
											},
											{
												"kind": "code",
												"text": "```\ncategories = adventure\nversions != 1.20.1\ndownloads <= 100\n```"
											},
											{
												"kind": "text",
												"text": "\n\nYou then join these strings together in arrays to signal "
											},
											{
												"kind": "code",
												"text": "`AND`"
											},
											{
												"kind": "text",
												"text": " and "
											},
											{
												"kind": "code",
												"text": "`OR`"
											},
											{
												"kind": "text",
												"text": " operators.\n\n##### OR\nAll elements in a single array are considered to be joined by OR statements.\nFor example, the search "
											},
											{
												"kind": "code",
												"text": "`[[\"versions:1.16.5\", \"versions:1.17.1\"]]`"
											},
											{
												"kind": "text",
												"text": " translates to "
											},
											{
												"kind": "code",
												"text": "`Projects that support 1.16.5 OR 1.17.1`"
											},
											{
												"kind": "text",
												"text": ".\n\n##### AND\nSeparate arrays are considered to be joined by AND statements.\nFor example, the search "
											},
											{
												"kind": "code",
												"text": "`[[\"versions:1.16.5\"], [\"project_type:modpack\"]]`"
											},
											{
												"kind": "text",
												"text": " translates to "
											},
											{
												"kind": "code",
												"text": "`Projects that support 1.16.5 AND are modpacks`"
											},
											{
												"kind": "text",
												"text": "."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 676,
									"name": "index",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The sorting method used for sorting search results"
											}
										]
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": "relevance"
											},
											{
												"type": "literal",
												"value": "downloads"
											},
											{
												"type": "literal",
												"value": "follows"
											},
											{
												"type": "literal",
												"value": "newest"
											},
											{
												"type": "literal",
												"value": "updated"
											}
										]
									},
									"defaultValue": "'relevance'"
								},
								{
									"id": 677,
									"name": "offset",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The offset into the search. Skips this number of results"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 678,
									"name": "limit",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The number of results returned by the search"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									},
									"defaultValue": "10"
								}
							],
							"type": {
								"type": "reference",
								"target": 25,
								"typeArguments": [
									{
										"type": "reference",
										"target": 463,
										"name": "SearchResults",
										"package": "axrinth"
									}
								],
								"name": "CancelablePromise",
								"package": "axrinth"
							}
						}
					]
				},
				{
					"id": 740,
					"name": "unfollowProject",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isPublic": true,
						"isStatic": true
					},
					"sources": [
						{
							"fileName": "src/services/ProjectsService.ts",
							"line": 486,
							"character": 18
						}
					],
					"signatures": [
						{
							"id": 741,
							"name": "unfollowProject",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Unfollow a project"
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "void"
											}
										]
									},
									{
										"tag": "@throws",
										"content": [
											{
												"kind": "text",
												"text": "ApiError"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "src/services/ProjectsService.ts",
									"line": 486,
									"character": 18
								}
							],
							"parameters": [
								{
									"id": 742,
									"name": "idSlug",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The ID or slug of the project"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 25,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "CancelablePromise",
								"package": "axrinth"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						747
					]
				},
				{
					"title": "Methods",
					"children": [
						713,
						702,
						710,
						699,
						730,
						686,
						707,
						737,
						734,
						679,
						689,
						722,
						682,
						692,
						696,
						743,
						672,
						740
					]
				}
			],
			"sources": [
				{
					"fileName": "src/services/ProjectsService.ts",
					"line": 18,
					"character": 13
				}
			]
		},
		{
			"id": 749,
			"name": "TagsService",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"children": [
				{
					"id": 769,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 770,
							"name": "new TagsService",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 749,
								"name": "TagsService",
								"package": "axrinth"
							}
						}
					]
				},
				{
					"id": 750,
					"name": "categoryList",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isPublic": true,
						"isStatic": true
					},
					"sources": [
						{
							"fileName": "src/services/TagsService.ts",
							"line": 24,
							"character": 18
						}
					],
					"signatures": [
						{
							"id": 751,
							"name": "categoryList",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Get a list of categories\nGets an array of categories, their icons, and applicable project types"
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "CategoryTag Expected response to a valid request"
											}
										]
									},
									{
										"tag": "@throws",
										"content": [
											{
												"kind": "text",
												"text": "ApiError"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "src/services/TagsService.ts",
									"line": 24,
									"character": 18
								}
							],
							"type": {
								"type": "reference",
								"target": 25,
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 174,
											"name": "CategoryTag",
											"package": "axrinth"
										}
									}
								],
								"name": "CancelablePromise",
								"package": "axrinth"
							}
						}
					]
				},
				{
					"id": 761,
					"name": "donationPlatformList",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isPublic": true,
						"isStatic": true
					},
					"sources": [
						{
							"fileName": "src/services/TagsService.ts",
							"line": 98,
							"character": 18
						}
					],
					"signatures": [
						{
							"id": 762,
							"name": "donationPlatformList",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Get a list of donation platforms\nGets an array of donation platforms and information about them"
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "DonationPlatformTag Expected response to a valid request"
											}
										]
									},
									{
										"tag": "@throws",
										"content": [
											{
												"kind": "text",
												"text": "ApiError"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "src/services/TagsService.ts",
									"line": 98,
									"character": 18
								}
							],
							"type": {
								"type": "reference",
								"target": 25,
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 231,
											"name": "DonationPlatformTag",
											"package": "axrinth"
										}
									}
								],
								"name": "CancelablePromise",
								"package": "axrinth"
							}
						}
					]
				},
				{
					"id": 756,
					"name": "licenseList",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isPublic": true,
						"isStatic": true
					},
					"sources": [
						{
							"fileName": "src/services/TagsService.ts",
							"line": 64,
							"character": 18
						}
					],
					"signatures": [
						{
							"id": 757,
							"name": "licenseList",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [],
								"blockTags": [
									{
										"tag": "@deprecated",
										"content": [
											{
												"kind": "text",
												"text": "Get a list of licenses\nDeprecated - simply use SPDX IDs."
											}
										]
									},
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "LicenseTag Expected response to a valid request"
											}
										]
									},
									{
										"tag": "@throws",
										"content": [
											{
												"kind": "text",
												"text": "ApiError"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "src/services/TagsService.ts",
									"line": 64,
									"character": 18
								}
							],
							"type": {
								"type": "reference",
								"target": 25,
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 313,
											"name": "LicenseTag",
											"package": "axrinth"
										}
									}
								],
								"name": "CancelablePromise",
								"package": "axrinth"
							}
						}
					]
				},
				{
					"id": 758,
					"name": "licenseText",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isPublic": true,
						"isStatic": true
					},
					"sources": [
						{
							"fileName": "src/services/TagsService.ts",
							"line": 77,
							"character": 18
						}
					],
					"signatures": [
						{
							"id": 759,
							"name": "licenseText",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Get the text and title of a license"
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "License Expected response to a valid request"
											}
										]
									},
									{
										"tag": "@throws",
										"content": [
											{
												"kind": "text",
												"text": "ApiError"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "src/services/TagsService.ts",
									"line": 77,
									"character": 18
								}
							],
							"parameters": [
								{
									"id": 760,
									"name": "id",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The license ID to get the text of"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 25,
								"typeArguments": [
									{
										"type": "reference",
										"target": 309,
										"name": "License",
										"package": "axrinth"
									}
								],
								"name": "CancelablePromise",
								"package": "axrinth"
							}
						}
					]
				},
				{
					"id": 752,
					"name": "loaderList",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isPublic": true,
						"isStatic": true
					},
					"sources": [
						{
							"fileName": "src/services/TagsService.ts",
							"line": 37,
							"character": 18
						}
					],
					"signatures": [
						{
							"id": 753,
							"name": "loaderList",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Get a list of loaders\nGets an array of loaders, their icons, and supported project types"
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "LoaderTag Expected response to a valid request"
											}
										]
									},
									{
										"tag": "@throws",
										"content": [
											{
												"kind": "text",
												"text": "ApiError"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "src/services/TagsService.ts",
									"line": 37,
									"character": 18
								}
							],
							"type": {
								"type": "reference",
								"target": 25,
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 317,
											"name": "LoaderTag",
											"package": "axrinth"
										}
									}
								],
								"name": "CancelablePromise",
								"package": "axrinth"
							}
						}
					]
				},
				{
					"id": 765,
					"name": "projectTypeList",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isPublic": true,
						"isStatic": true
					},
					"sources": [
						{
							"fileName": "src/services/TagsService.ts",
							"line": 124,
							"character": 18
						}
					],
					"signatures": [
						{
							"id": 766,
							"name": "projectTypeList",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Get a list of project types\nGets an array of valid project types"
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "string Expected response to a valid request"
											}
										]
									},
									{
										"tag": "@throws",
										"content": [
											{
												"kind": "text",
												"text": "ApiError"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "src/services/TagsService.ts",
									"line": 124,
									"character": 18
								}
							],
							"type": {
								"type": "reference",
								"target": 25,
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								],
								"name": "CancelablePromise",
								"package": "axrinth"
							}
						}
					]
				},
				{
					"id": 763,
					"name": "reportTypeList",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isPublic": true,
						"isStatic": true
					},
					"sources": [
						{
							"fileName": "src/services/TagsService.ts",
							"line": 111,
							"character": 18
						}
					],
					"signatures": [
						{
							"id": 764,
							"name": "reportTypeList",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Get a list of report types\nGets an array of valid report types"
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "string Expected response to a valid request"
											}
										]
									},
									{
										"tag": "@throws",
										"content": [
											{
												"kind": "text",
												"text": "ApiError"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "src/services/TagsService.ts",
									"line": 111,
									"character": 18
								}
							],
							"type": {
								"type": "reference",
								"target": 25,
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								],
								"name": "CancelablePromise",
								"package": "axrinth"
							}
						}
					]
				},
				{
					"id": 767,
					"name": "sideTypeList",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isPublic": true,
						"isStatic": true
					},
					"sources": [
						{
							"fileName": "src/services/TagsService.ts",
							"line": 137,
							"character": 18
						}
					],
					"signatures": [
						{
							"id": 768,
							"name": "sideTypeList",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Get a list of side types\nGets an array of valid side types"
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "string Expected response to a valid request"
											}
										]
									},
									{
										"tag": "@throws",
										"content": [
											{
												"kind": "text",
												"text": "ApiError"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "src/services/TagsService.ts",
									"line": 137,
									"character": 18
								}
							],
							"type": {
								"type": "reference",
								"target": 25,
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								],
								"name": "CancelablePromise",
								"package": "axrinth"
							}
						}
					]
				},
				{
					"id": 754,
					"name": "versionList",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isPublic": true,
						"isStatic": true
					},
					"sources": [
						{
							"fileName": "src/services/TagsService.ts",
							"line": 50,
							"character": 18
						}
					],
					"signatures": [
						{
							"id": 755,
							"name": "versionList",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Get a list of game versions\nGets an array of game versions and information about them"
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "GameVersionTag Expected response to a valid request"
											}
										]
									},
									{
										"tag": "@throws",
										"content": [
											{
												"kind": "text",
												"text": "ApiError"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "src/services/TagsService.ts",
									"line": 50,
									"character": 18
								}
							],
							"type": {
								"type": "reference",
								"target": 25,
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 276,
											"name": "GameVersionTag",
											"package": "axrinth"
										}
									}
								],
								"name": "CancelablePromise",
								"package": "axrinth"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						769
					]
				},
				{
					"title": "Methods",
					"children": [
						750,
						761,
						756,
						758,
						752,
						765,
						763,
						767,
						754
					]
				}
			],
			"sources": [
				{
					"fileName": "src/services/TagsService.ts",
					"line": 16,
					"character": 13
				}
			]
		},
		{
			"id": 771,
			"name": "TeamsService",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"children": [
				{
					"id": 801,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 802,
							"name": "new TeamsService",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 771,
								"name": "TeamsService",
								"package": "axrinth"
							}
						}
					]
				},
				{
					"id": 778,
					"name": "addTeamMember",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isPublic": true,
						"isStatic": true
					},
					"sources": [
						{
							"fileName": "src/services/TeamsService.ts",
							"line": 61,
							"character": 18
						}
					],
					"signatures": [
						{
							"id": 779,
							"name": "addTeamMember",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Add a user to a team"
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "void"
											}
										]
									},
									{
										"tag": "@throws",
										"content": [
											{
												"kind": "text",
												"text": "ApiError"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "src/services/TeamsService.ts",
									"line": 61,
									"character": 18
								}
							],
							"parameters": [
								{
									"id": 780,
									"name": "id",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The ID of the team"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 781,
									"name": "requestBody",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "User to be added (must be the ID, usernames cannot be used here)"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 25,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "CancelablePromise",
								"package": "axrinth"
							}
						}
					]
				},
				{
					"id": 793,
					"name": "deleteTeamMember",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isPublic": true,
						"isStatic": true
					},
					"sources": [
						{
							"fileName": "src/services/TeamsService.ts",
							"line": 156,
							"character": 18
						}
					],
					"signatures": [
						{
							"id": 794,
							"name": "deleteTeamMember",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Remove a member from a team"
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "void"
											}
										]
									},
									{
										"tag": "@throws",
										"content": [
											{
												"kind": "text",
												"text": "ApiError"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "src/services/TeamsService.ts",
									"line": 156,
									"character": 18
								}
							],
							"parameters": [
								{
									"id": 795,
									"name": "id",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The ID of the team"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 796,
									"name": "idUsername",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The ID or username of the user"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 25,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "CancelablePromise",
								"package": "axrinth"
							}
						}
					]
				},
				{
					"id": 772,
					"name": "getProjectTeamMembers",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isPublic": true,
						"isStatic": true
					},
					"sources": [
						{
							"fileName": "src/services/TeamsService.ts",
							"line": 21,
							"character": 18
						}
					],
					"signatures": [
						{
							"id": 773,
							"name": "getProjectTeamMembers",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Get a project's team members"
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "TeamMember Expected response to a valid request"
											}
										]
									},
									{
										"tag": "@throws",
										"content": [
											{
												"kind": "text",
												"text": "ApiError"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "src/services/TeamsService.ts",
									"line": 21,
									"character": 18
								}
							],
							"parameters": [
								{
									"id": 774,
									"name": "idSlug",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The ID or slug of the project"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 25,
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 494,
											"name": "TeamMember",
											"package": "axrinth"
										}
									}
								],
								"name": "CancelablePromise",
								"package": "axrinth"
							}
						}
					]
				},
				{
					"id": 775,
					"name": "getTeamMembers",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isPublic": true,
						"isStatic": true
					},
					"sources": [
						{
							"fileName": "src/services/TeamsService.ts",
							"line": 42,
							"character": 18
						}
					],
					"signatures": [
						{
							"id": 776,
							"name": "getTeamMembers",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Get a team's members"
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "TeamMember Expected response to a valid request"
											}
										]
									},
									{
										"tag": "@throws",
										"content": [
											{
												"kind": "text",
												"text": "ApiError"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "src/services/TeamsService.ts",
									"line": 42,
									"character": 18
								}
							],
							"parameters": [
								{
									"id": 777,
									"name": "id",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The ID of the team"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 25,
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 494,
											"name": "TeamMember",
											"package": "axrinth"
										}
									}
								],
								"name": "CancelablePromise",
								"package": "axrinth"
							}
						}
					]
				},
				{
					"id": 782,
					"name": "getTeams",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isPublic": true,
						"isStatic": true
					},
					"sources": [
						{
							"fileName": "src/services/TeamsService.ts",
							"line": 86,
							"character": 18
						}
					],
					"signatures": [
						{
							"id": 783,
							"name": "getTeams",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Get the members of multiple teams"
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "TeamMember Expected response to a valid request"
											}
										]
									},
									{
										"tag": "@throws",
										"content": [
											{
												"kind": "text",
												"text": "ApiError"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "src/services/TeamsService.ts",
									"line": 86,
									"character": 18
								}
							],
							"parameters": [
								{
									"id": 784,
									"name": "ids",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The IDs of the teams"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 25,
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "array",
											"elementType": {
												"type": "reference",
												"target": 494,
												"name": "TeamMember",
												"package": "axrinth"
											}
										}
									}
								],
								"name": "CancelablePromise",
								"package": "axrinth"
							}
						}
					]
				},
				{
					"id": 785,
					"name": "joinTeam",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isPublic": true,
						"isStatic": true
					},
					"sources": [
						{
							"fileName": "src/services/TeamsService.ts",
							"line": 104,
							"character": 18
						}
					],
					"signatures": [
						{
							"id": 786,
							"name": "joinTeam",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Join a team"
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "void"
											}
										]
									},
									{
										"tag": "@throws",
										"content": [
											{
												"kind": "text",
												"text": "ApiError"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "src/services/TeamsService.ts",
									"line": 104,
									"character": 18
								}
							],
							"parameters": [
								{
									"id": 787,
									"name": "id",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The ID of the team"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 25,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "CancelablePromise",
								"package": "axrinth"
							}
						}
					]
				},
				{
					"id": 788,
					"name": "modifyTeamMember",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isPublic": true,
						"isStatic": true
					},
					"sources": [
						{
							"fileName": "src/services/TeamsService.ts",
							"line": 128,
							"character": 18
						}
					],
					"signatures": [
						{
							"id": 789,
							"name": "modifyTeamMember",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Modify a team member's information"
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "void"
											}
										]
									},
									{
										"tag": "@throws",
										"content": [
											{
												"kind": "text",
												"text": "ApiError"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "src/services/TeamsService.ts",
									"line": 128,
									"character": 18
								}
							],
							"parameters": [
								{
									"id": 790,
									"name": "id",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The ID of the team"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 791,
									"name": "idUsername",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The ID or username of the user"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 792,
									"name": "requestBody",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Contents to be modified"
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 330,
										"name": "ModifyTeamMemberBody",
										"package": "axrinth"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 25,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "CancelablePromise",
								"package": "axrinth"
							}
						}
					]
				},
				{
					"id": 797,
					"name": "transferTeamOwnership",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isPublic": true,
						"isStatic": true
					},
					"sources": [
						{
							"fileName": "src/services/TeamsService.ts",
							"line": 181,
							"character": 18
						}
					],
					"signatures": [
						{
							"id": 798,
							"name": "transferTeamOwnership",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Transfer team's ownership to another user"
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "void"
											}
										]
									},
									{
										"tag": "@throws",
										"content": [
											{
												"kind": "text",
												"text": "ApiError"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "src/services/TeamsService.ts",
									"line": 181,
									"character": 18
								}
							],
							"parameters": [
								{
									"id": 799,
									"name": "id",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The ID of the team"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 800,
									"name": "requestBody",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "New owner's ID"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 25,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "CancelablePromise",
								"package": "axrinth"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						801
					]
				},
				{
					"title": "Methods",
					"children": [
						778,
						793,
						772,
						775,
						782,
						785,
						788,
						797
					]
				}
			],
			"sources": [
				{
					"fileName": "src/services/TeamsService.ts",
					"line": 13,
					"character": 13
				}
			]
		},
		{
			"id": 803,
			"name": "ThreadsService",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"children": [
				{
					"id": 836,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 837,
							"name": "new ThreadsService",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 803,
								"name": "ThreadsService",
								"package": "axrinth"
							}
						}
					]
				},
				{
					"id": 833,
					"name": "deleteThreadMessage",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isPublic": true,
						"isStatic": true
					},
					"sources": [
						{
							"fileName": "src/services/ThreadsService.ts",
							"line": 214,
							"character": 18
						}
					],
					"signatures": [
						{
							"id": 834,
							"name": "deleteThreadMessage",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Delete a thread message"
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "void"
											}
										]
									},
									{
										"tag": "@throws",
										"content": [
											{
												"kind": "text",
												"text": "ApiError"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "src/services/ThreadsService.ts",
									"line": 214,
									"character": 18
								}
							],
							"parameters": [
								{
									"id": 835,
									"name": "id",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The ID of the message"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 25,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "CancelablePromise",
								"package": "axrinth"
							}
						}
					]
				},
				{
					"id": 807,
					"name": "getOpenReports",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isPublic": true,
						"isStatic": true
					},
					"sources": [
						{
							"fileName": "src/services/ThreadsService.ts",
							"line": 44,
							"character": 18
						}
					],
					"signatures": [
						{
							"id": 808,
							"name": "getOpenReports",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Get your open reports"
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "Report Expected response to a valid request"
											}
										]
									},
									{
										"tag": "@throws",
										"content": [
											{
												"kind": "text",
												"text": "ApiError"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "src/services/ThreadsService.ts",
									"line": 44,
									"character": 18
								}
							],
							"parameters": [
								{
									"id": 809,
									"name": "count",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 25,
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 444,
											"name": "Report",
											"package": "axrinth"
										}
									}
								],
								"name": "CancelablePromise",
								"package": "axrinth"
							}
						}
					]
				},
				{
					"id": 810,
					"name": "getReport",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isPublic": true,
						"isStatic": true
					},
					"sources": [
						{
							"fileName": "src/services/ThreadsService.ts",
							"line": 66,
							"character": 18
						}
					],
					"signatures": [
						{
							"id": 811,
							"name": "getReport",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Get report from ID"
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "Report Expected response to a valid request"
											}
										]
									},
									{
										"tag": "@throws",
										"content": [
											{
												"kind": "text",
												"text": "ApiError"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "src/services/ThreadsService.ts",
									"line": 66,
									"character": 18
								}
							],
							"parameters": [
								{
									"id": 812,
									"name": "id",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The ID of the report"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 25,
								"typeArguments": [
									{
										"type": "reference",
										"target": 444,
										"name": "Report",
										"package": "axrinth"
									}
								],
								"name": "CancelablePromise",
								"package": "axrinth"
							}
						}
					]
				},
				{
					"id": 820,
					"name": "getReports",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isPublic": true,
						"isStatic": true
					},
					"sources": [
						{
							"fileName": "src/services/ThreadsService.ts",
							"line": 124,
							"character": 18
						}
					],
					"signatures": [
						{
							"id": 821,
							"name": "getReports",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Get multiple reports"
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "Report Expected response to a valid request"
											}
										]
									},
									{
										"tag": "@throws",
										"content": [
											{
												"kind": "text",
												"text": "ApiError"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "src/services/ThreadsService.ts",
									"line": 124,
									"character": 18
								}
							],
							"parameters": [
								{
									"id": 822,
									"name": "ids",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The IDs of the reports"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 25,
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 444,
											"name": "Report",
											"package": "axrinth"
										}
									}
								],
								"name": "CancelablePromise",
								"package": "axrinth"
							}
						}
					]
				},
				{
					"id": 823,
					"name": "getThread",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isPublic": true,
						"isStatic": true
					},
					"sources": [
						{
							"fileName": "src/services/ThreadsService.ts",
							"line": 146,
							"character": 18
						}
					],
					"signatures": [
						{
							"id": 824,
							"name": "getThread",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Get a thread"
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "Thread Expected response to a valid request"
											}
										]
									},
									{
										"tag": "@throws",
										"content": [
											{
												"kind": "text",
												"text": "ApiError"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "src/services/ThreadsService.ts",
									"line": 146,
									"character": 18
								}
							],
							"parameters": [
								{
									"id": 825,
									"name": "id",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The ID of the thread"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 25,
								"typeArguments": [
									{
										"type": "reference",
										"target": 503,
										"name": "Thread",
										"package": "axrinth"
									}
								],
								"name": "CancelablePromise",
								"package": "axrinth"
							}
						}
					]
				},
				{
					"id": 830,
					"name": "getThreads",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isPublic": true,
						"isStatic": true
					},
					"sources": [
						{
							"fileName": "src/services/ThreadsService.ts",
							"line": 193,
							"character": 18
						}
					],
					"signatures": [
						{
							"id": 831,
							"name": "getThreads",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Get multiple threads"
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "Thread Expected response to a valid request"
											}
										]
									},
									{
										"tag": "@throws",
										"content": [
											{
												"kind": "text",
												"text": "ApiError"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "src/services/ThreadsService.ts",
									"line": 193,
									"character": 18
								}
							],
							"parameters": [
								{
									"id": 832,
									"name": "ids",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The IDs of the threads"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 25,
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 503,
											"name": "Thread",
											"package": "axrinth"
										}
									}
								],
								"name": "CancelablePromise",
								"package": "axrinth"
							}
						}
					]
				},
				{
					"id": 813,
					"name": "modifyReport",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isPublic": true,
						"isStatic": true
					},
					"sources": [
						{
							"fileName": "src/services/ThreadsService.ts",
							"line": 89,
							"character": 18
						}
					],
					"signatures": [
						{
							"id": 814,
							"name": "modifyReport",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Modify a report"
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "void"
											}
										]
									},
									{
										"tag": "@throws",
										"content": [
											{
												"kind": "text",
												"text": "ApiError"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "src/services/ThreadsService.ts",
									"line": 89,
									"character": 18
								}
							],
							"parameters": [
								{
									"id": 815,
									"name": "id",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The ID of the report"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 816,
									"name": "requestBody",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "What to modify about the report"
											}
										]
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 817,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"children": [
												{
													"id": 818,
													"name": "body",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isOptional": true
													},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The contents of the report"
															}
														]
													},
													"sources": [
														{
															"fileName": "src/services/ThreadsService.ts",
															"line": 95,
															"character": 0
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 819,
													"name": "closed",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isOptional": true
													},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "Whether the thread should be closed"
															}
														]
													},
													"sources": [
														{
															"fileName": "src/services/ThreadsService.ts",
															"line": 99,
															"character": 0
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"children": [
														818,
														819
													]
												}
											],
											"sources": [
												{
													"fileName": "src/services/ThreadsService.ts",
													"line": 91,
													"character": 14
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 25,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "CancelablePromise",
								"package": "axrinth"
							}
						}
					]
				},
				{
					"id": 826,
					"name": "sendThreadMessage",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isPublic": true,
						"isStatic": true
					},
					"sources": [
						{
							"fileName": "src/services/ThreadsService.ts",
							"line": 168,
							"character": 18
						}
					],
					"signatures": [
						{
							"id": 827,
							"name": "sendThreadMessage",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Send a text message to a thread"
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "Thread Expected response to a valid request"
											}
										]
									},
									{
										"tag": "@throws",
										"content": [
											{
												"kind": "text",
												"text": "ApiError"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "src/services/ThreadsService.ts",
									"line": 168,
									"character": 18
								}
							],
							"parameters": [
								{
									"id": 828,
									"name": "id",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The ID of the thread"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 829,
									"name": "requestBody",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The message to be sent. Note that you only need the fields applicable for the "
											},
											{
												"kind": "code",
												"text": "`text`"
											},
											{
												"kind": "text",
												"text": " type."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 523,
										"name": "ThreadMessageBody",
										"package": "axrinth"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 25,
								"typeArguments": [
									{
										"type": "reference",
										"target": 503,
										"name": "Thread",
										"package": "axrinth"
									}
								],
								"name": "CancelablePromise",
								"package": "axrinth"
							}
						}
					]
				},
				{
					"id": 804,
					"name": "submitReport",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isPublic": true,
						"isStatic": true
					},
					"sources": [
						{
							"fileName": "src/services/ThreadsService.ts",
							"line": 23,
							"character": 18
						}
					],
					"signatures": [
						{
							"id": 805,
							"name": "submitReport",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Report a project, user, or version\nBring a project, user, or version to the attention of the moderators by reporting it."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "Report Expected response to a valid request"
											}
										]
									},
									{
										"tag": "@throws",
										"content": [
											{
												"kind": "text",
												"text": "ApiError"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "src/services/ThreadsService.ts",
									"line": 23,
									"character": 18
								}
							],
							"parameters": [
								{
									"id": 806,
									"name": "requestBody",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The report to be sent"
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 197,
										"name": "CreatableReport",
										"package": "axrinth"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 25,
								"typeArguments": [
									{
										"type": "reference",
										"target": 444,
										"name": "Report",
										"package": "axrinth"
									}
								],
								"name": "CancelablePromise",
								"package": "axrinth"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						836
					]
				},
				{
					"title": "Methods",
					"children": [
						833,
						807,
						810,
						820,
						823,
						830,
						813,
						826,
						804
					]
				}
			],
			"sources": [
				{
					"fileName": "src/services/ThreadsService.ts",
					"line": 14,
					"character": 13
				}
			]
		},
		{
			"id": 838,
			"name": "UsersService",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"children": [
				{
					"id": 868,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 869,
							"name": "new UsersService",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 838,
								"name": "UsersService",
								"package": "axrinth"
							}
						}
					]
				},
				{
					"id": 851,
					"name": "changeUserIcon",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isPublic": true,
						"isStatic": true
					},
					"sources": [
						{
							"fileName": "src/services/UsersService.ts",
							"line": 104,
							"character": 18
						}
					],
					"signatures": [
						{
							"id": 852,
							"name": "changeUserIcon",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Change user's avatar\nThe new avatar may be up to 2MiB in size."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "void"
											}
										]
									},
									{
										"tag": "@throws",
										"content": [
											{
												"kind": "text",
												"text": "ApiError"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "src/services/UsersService.ts",
									"line": 104,
									"character": 18
								}
							],
							"parameters": [
								{
									"id": 853,
									"name": "idUsername",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The ID or username of the user"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 854,
									"name": "requestBody",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "Blob"
										},
										"name": "Blob",
										"package": "typescript"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 25,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "CancelablePromise",
								"package": "axrinth"
							}
						}
					]
				},
				{
					"id": 858,
					"name": "getFollowedProjects",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isPublic": true,
						"isStatic": true
					},
					"sources": [
						{
							"fileName": "src/services/UsersService.ts",
							"line": 150,
							"character": 18
						}
					],
					"signatures": [
						{
							"id": 859,
							"name": "getFollowedProjects",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Get user's followed projects"
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "Project Expected response to a valid request"
											}
										]
									},
									{
										"tag": "@throws",
										"content": [
											{
												"kind": "text",
												"text": "ApiError"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "src/services/UsersService.ts",
									"line": 150,
									"character": 18
								}
							],
							"parameters": [
								{
									"id": 860,
									"name": "idUsername",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The ID or username of the user"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 25,
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 400,
											"name": "Project",
											"package": "axrinth"
										}
									}
								],
								"name": "CancelablePromise",
								"package": "axrinth"
							}
						}
					]
				},
				{
					"id": 861,
					"name": "getPayoutHistory",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isPublic": true,
						"isStatic": true
					},
					"sources": [
						{
							"fileName": "src/services/UsersService.ts",
							"line": 172,
							"character": 18
						}
					],
					"signatures": [
						{
							"id": 862,
							"name": "getPayoutHistory",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Get user's payout history"
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "UserPayoutHistory Expected response to a valid request"
											}
										]
									},
									{
										"tag": "@throws",
										"content": [
											{
												"kind": "text",
												"text": "ApiError"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "src/services/UsersService.ts",
									"line": 172,
									"character": 18
								}
							],
							"parameters": [
								{
									"id": 863,
									"name": "idUsername",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The ID or username of the user"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 25,
								"typeArguments": [
									{
										"type": "reference",
										"target": 591,
										"name": "UserPayoutHistory",
										"package": "axrinth"
									}
								],
								"name": "CancelablePromise",
								"package": "axrinth"
							}
						}
					]
				},
				{
					"id": 839,
					"name": "getUser",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isPublic": true,
						"isStatic": true
					},
					"sources": [
						{
							"fileName": "src/services/UsersService.ts",
							"line": 22,
							"character": 18
						}
					],
					"signatures": [
						{
							"id": 840,
							"name": "getUser",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Get a user"
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "User Expected response to a valid request"
											}
										]
									},
									{
										"tag": "@throws",
										"content": [
											{
												"kind": "text",
												"text": "ApiError"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "src/services/UsersService.ts",
									"line": 22,
									"character": 18
								}
							],
							"parameters": [
								{
									"id": 841,
									"name": "idUsername",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The ID or username of the user"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 25,
								"typeArguments": [
									{
										"type": "reference",
										"target": 559,
										"name": "User",
										"package": "axrinth"
									}
								],
								"name": "CancelablePromise",
								"package": "axrinth"
							}
						}
					]
				},
				{
					"id": 846,
					"name": "getUserFromAuth",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isPublic": true,
						"isStatic": true
					},
					"sources": [
						{
							"fileName": "src/services/UsersService.ts",
							"line": 68,
							"character": 18
						}
					],
					"signatures": [
						{
							"id": 847,
							"name": "getUserFromAuth",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Get user from authorization header"
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "User Expected response to a valid request"
											}
										]
									},
									{
										"tag": "@throws",
										"content": [
											{
												"kind": "text",
												"text": "ApiError"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "src/services/UsersService.ts",
									"line": 68,
									"character": 18
								}
							],
							"type": {
								"type": "reference",
								"target": 25,
								"typeArguments": [
									{
										"type": "reference",
										"target": 559,
										"name": "User",
										"package": "axrinth"
									}
								],
								"name": "CancelablePromise",
								"package": "axrinth"
							}
						}
					]
				},
				{
					"id": 855,
					"name": "getUserProjects",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isPublic": true,
						"isStatic": true
					},
					"sources": [
						{
							"fileName": "src/services/UsersService.ts",
							"line": 129,
							"character": 18
						}
					],
					"signatures": [
						{
							"id": 856,
							"name": "getUserProjects",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Get user's projects"
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "Project Expected response to a valid request"
											}
										]
									},
									{
										"tag": "@throws",
										"content": [
											{
												"kind": "text",
												"text": "ApiError"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "src/services/UsersService.ts",
									"line": 129,
									"character": 18
								}
							],
							"parameters": [
								{
									"id": 857,
									"name": "idUsername",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The ID or username of the user"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 25,
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 400,
											"name": "Project",
											"package": "axrinth"
										}
									}
								],
								"name": "CancelablePromise",
								"package": "axrinth"
							}
						}
					]
				},
				{
					"id": 848,
					"name": "getUsers",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isPublic": true,
						"isStatic": true
					},
					"sources": [
						{
							"fileName": "src/services/UsersService.ts",
							"line": 84,
							"character": 18
						}
					],
					"signatures": [
						{
							"id": 849,
							"name": "getUsers",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Get multiple users"
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "User Expected response to a valid request"
											}
										]
									},
									{
										"tag": "@throws",
										"content": [
											{
												"kind": "text",
												"text": "ApiError"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "src/services/UsersService.ts",
									"line": 84,
									"character": 18
								}
							],
							"parameters": [
								{
									"id": 850,
									"name": "ids",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The IDs of the users"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 25,
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 559,
											"name": "User",
											"package": "axrinth"
										}
									}
								],
								"name": "CancelablePromise",
								"package": "axrinth"
							}
						}
					]
				},
				{
					"id": 842,
					"name": "modifyUser",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isPublic": true,
						"isStatic": true
					},
					"sources": [
						{
							"fileName": "src/services/UsersService.ts",
							"line": 44,
							"character": 18
						}
					],
					"signatures": [
						{
							"id": 843,
							"name": "modifyUser",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Modify a user"
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "void"
											}
										]
									},
									{
										"tag": "@throws",
										"content": [
											{
												"kind": "text",
												"text": "ApiError"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "src/services/UsersService.ts",
									"line": 44,
									"character": 18
								}
							],
							"parameters": [
								{
									"id": 844,
									"name": "idUsername",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The ID or username of the user"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 845,
									"name": "requestBody",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Modified user fields"
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 248,
										"name": "EditableUser",
										"package": "axrinth"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 25,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "CancelablePromise",
								"package": "axrinth"
							}
						}
					]
				},
				{
					"id": 864,
					"name": "withdrawPayout",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isPublic": true,
						"isStatic": true
					},
					"sources": [
						{
							"fileName": "src/services/UsersService.ts",
							"line": 196,
							"character": 18
						}
					],
					"signatures": [
						{
							"id": 865,
							"name": "withdrawPayout",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Withdraw payout balance to PayPal or Venmo\nWarning: certain amounts get withheld for fees. Please do not call this API endpoint without first acknowledging the warnings on the corresponding frontend page."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "void"
											}
										]
									},
									{
										"tag": "@throws",
										"content": [
											{
												"kind": "text",
												"text": "ApiError"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "src/services/UsersService.ts",
									"line": 196,
									"character": 18
								}
							],
							"parameters": [
								{
									"id": 866,
									"name": "idUsername",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The ID or username of the user"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 867,
									"name": "amount",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Amount to withdraw"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 25,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "CancelablePromise",
								"package": "axrinth"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						868
					]
				},
				{
					"title": "Methods",
					"children": [
						851,
						858,
						861,
						839,
						846,
						855,
						848,
						842,
						864
					]
				}
			],
			"sources": [
				{
					"fileName": "src/services/UsersService.ts",
					"line": 14,
					"character": 13
				}
			]
		},
		{
			"id": 870,
			"name": "VersionFilesService",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"children": [
				{
					"id": 892,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 893,
							"name": "new VersionFilesService",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 870,
								"name": "VersionFilesService",
								"package": "axrinth"
							}
						}
					]
				},
				{
					"id": 876,
					"name": "deleteFileFromHash",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isPublic": true,
						"isStatic": true
					},
					"sources": [
						{
							"fileName": "src/services/VersionFilesService.ts",
							"line": 54,
							"character": 18
						}
					],
					"signatures": [
						{
							"id": 877,
							"name": "deleteFileFromHash",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Delete a file from its hash"
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "void"
											}
										]
									},
									{
										"tag": "@throws",
										"content": [
											{
												"kind": "text",
												"text": "ApiError"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "src/services/VersionFilesService.ts",
									"line": 54,
									"character": 18
								}
							],
							"parameters": [
								{
									"id": 878,
									"name": "hash",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The hash of the file, considering its byte content, and encoded in hexadecimal"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 879,
									"name": "algorithm",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The algorithm of the hash"
											}
										]
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": "sha1"
											},
											{
												"type": "literal",
												"value": "sha512"
											}
										]
									},
									"defaultValue": "'sha1'"
								},
								{
									"id": 880,
									"name": "versionId",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Version ID to delete the version from, if multiple files of the same hash exist"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 25,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "CancelablePromise",
								"package": "axrinth"
							}
						}
					]
				},
				{
					"id": 881,
					"name": "getLatestVersionFromHash",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isPublic": true,
						"isStatic": true
					},
					"sources": [
						{
							"fileName": "src/services/VersionFilesService.ts",
							"line": 84,
							"character": 18
						}
					],
					"signatures": [
						{
							"id": 882,
							"name": "getLatestVersionFromHash",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Latest version of a project from a hash, loader(s), and game version(s)"
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "Version Expected response to a valid request"
											}
										]
									},
									{
										"tag": "@throws",
										"content": [
											{
												"kind": "text",
												"text": "ApiError"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "src/services/VersionFilesService.ts",
									"line": 84,
									"character": 18
								}
							],
							"parameters": [
								{
									"id": 883,
									"name": "hash",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The hash of the file, considering its byte content, and encoded in hexadecimal"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 884,
									"name": "algorithm",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The algorithm of the hash"
											}
										]
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": "sha1"
											},
											{
												"type": "literal",
												"value": "sha512"
											}
										]
									},
									"defaultValue": "'sha1'"
								},
								{
									"id": 885,
									"name": "requestBody",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Parameters of the updated version requested"
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 288,
										"name": "GetLatestVersionFromHashBody",
										"package": "axrinth"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 25,
								"typeArguments": [
									{
										"type": "reference",
										"target": 601,
										"name": "Version",
										"package": "axrinth"
									}
								],
								"name": "CancelablePromise",
								"package": "axrinth"
							}
						}
					]
				},
				{
					"id": 889,
					"name": "getLatestVersionsFromHashes",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isPublic": true,
						"isStatic": true
					},
					"sources": [
						{
							"fileName": "src/services/VersionFilesService.ts",
							"line": 135,
							"character": 18
						}
					],
					"signatures": [
						{
							"id": 890,
							"name": "getLatestVersionsFromHashes",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Latest versions of multiple project from hashes, loader(s), and game version(s)\nThis is the same as ["
									},
									{
										"kind": "code",
										"text": "`/version_file/{hash}/update`"
									},
									{
										"kind": "text",
										"text": "](#operation/getLatestVersionFromHash) except it accepts multiple hashes."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "HashVersionMap Expected response to a valid request"
											}
										]
									},
									{
										"tag": "@throws",
										"content": [
											{
												"kind": "text",
												"text": "ApiError"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "src/services/VersionFilesService.ts",
									"line": 135,
									"character": 18
								}
							],
							"parameters": [
								{
									"id": 891,
									"name": "requestBody",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Parameters of the updated version requested"
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 292,
										"name": "GetLatestVersionsFromHashesBody",
										"package": "axrinth"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 25,
								"typeArguments": [
									{
										"type": "reference",
										"target": 304,
										"name": "HashVersionMap",
										"package": "axrinth"
									}
								],
								"name": "CancelablePromise",
								"package": "axrinth"
							}
						}
					]
				},
				{
					"id": 871,
					"name": "versionFromHash",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isPublic": true,
						"isStatic": true
					},
					"sources": [
						{
							"fileName": "src/services/VersionFilesService.ts",
							"line": 25,
							"character": 18
						}
					],
					"signatures": [
						{
							"id": 872,
							"name": "versionFromHash",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Get version from hash"
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "Version Expected response to a valid request"
											}
										]
									},
									{
										"tag": "@throws",
										"content": [
											{
												"kind": "text",
												"text": "ApiError"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "src/services/VersionFilesService.ts",
									"line": 25,
									"character": 18
								}
							],
							"parameters": [
								{
									"id": 873,
									"name": "hash",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The hash of the file, considering its byte content, and encoded in hexadecimal"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 874,
									"name": "algorithm",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The algorithm of the hash"
											}
										]
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": "sha1"
											},
											{
												"type": "literal",
												"value": "sha512"
											}
										]
									},
									"defaultValue": "'sha1'"
								},
								{
									"id": 875,
									"name": "multiple",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Whether to return multiple results when looking for this hash"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"defaultValue": "false"
								}
							],
							"type": {
								"type": "reference",
								"target": 25,
								"typeArguments": [
									{
										"type": "reference",
										"target": 601,
										"name": "Version",
										"package": "axrinth"
									}
								],
								"name": "CancelablePromise",
								"package": "axrinth"
							}
						}
					]
				},
				{
					"id": 886,
					"name": "versionsFromHashes",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isPublic": true,
						"isStatic": true
					},
					"sources": [
						{
							"fileName": "src/services/VersionFilesService.ts",
							"line": 114,
							"character": 18
						}
					],
					"signatures": [
						{
							"id": 887,
							"name": "versionsFromHashes",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Get versions from hashes\nThis is the same as ["
									},
									{
										"kind": "code",
										"text": "`/version_file/{hash}`"
									},
									{
										"kind": "text",
										"text": "](#operation/versionFromHash) except it accepts multiple hashes."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "HashVersionMap Expected response to a valid request"
											}
										]
									},
									{
										"tag": "@throws",
										"content": [
											{
												"kind": "text",
												"text": "ApiError"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "src/services/VersionFilesService.ts",
									"line": 114,
									"character": 18
								}
							],
							"parameters": [
								{
									"id": 888,
									"name": "requestBody",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Hashes and algorithm of the versions requested"
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 296,
										"name": "HashList",
										"package": "axrinth"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 25,
								"typeArguments": [
									{
										"type": "reference",
										"target": 304,
										"name": "HashVersionMap",
										"package": "axrinth"
									}
								],
								"name": "CancelablePromise",
								"package": "axrinth"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						892
					]
				},
				{
					"title": "Methods",
					"children": [
						876,
						881,
						889,
						871,
						886
					]
				}
			],
			"sources": [
				{
					"fileName": "src/services/VersionFilesService.ts",
					"line": 15,
					"character": 13
				}
			]
		},
		{
			"id": 894,
			"name": "VersionsService",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"children": [
				{
					"id": 931,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 932,
							"name": "new VersionsService",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 894,
								"name": "VersionsService",
								"package": "axrinth"
							}
						}
					]
				},
				{
					"id": 925,
					"name": "addFilesToVersion",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isPublic": true,
						"isStatic": true
					},
					"sources": [
						{
							"fileName": "src/services/VersionsService.ts",
							"line": 221,
							"character": 18
						}
					],
					"signatures": [
						{
							"id": 926,
							"name": "addFilesToVersion",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Add files to version\nProject files are attached. "
									},
									{
										"kind": "code",
										"text": "`.mrpack`"
									},
									{
										"kind": "text",
										"text": " and "
									},
									{
										"kind": "code",
										"text": "`.jar`"
									},
									{
										"kind": "text",
										"text": " files are accepted."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "void"
											}
										]
									},
									{
										"tag": "@throws",
										"content": [
											{
												"kind": "text",
												"text": "ApiError"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "src/services/VersionsService.ts",
									"line": 221,
									"character": 18
								}
							],
							"parameters": [
								{
									"id": 927,
									"name": "id",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The ID of the version"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 928,
									"name": "formData",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "New version files"
											}
										]
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 929,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"children": [
												{
													"id": 930,
													"name": "data",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isOptional": true
													},
													"sources": [
														{
															"fileName": "src/services/VersionsService.ts",
															"line": 224,
															"character": 0
														}
													],
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Record"
														},
														"typeArguments": [
															{
																"type": "intrinsic",
																"name": "string"
															},
															{
																"type": "intrinsic",
																"name": "any"
															}
														],
														"name": "Record",
														"package": "typescript"
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"children": [
														930
													]
												}
											],
											"sources": [
												{
													"fileName": "src/services/VersionsService.ts",
													"line": 223,
													"character": 11
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 25,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "CancelablePromise",
								"package": "axrinth"
							}
						}
					]
				},
				{
					"id": 915,
					"name": "createVersion",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isPublic": true,
						"isStatic": true
					},
					"sources": [
						{
							"fileName": "src/services/VersionsService.ts",
							"line": 154,
							"character": 18
						}
					],
					"signatures": [
						{
							"id": 916,
							"name": "createVersion",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Create a version\nThis route creates a version on an existing project. There must be at least one file attached to each new version, unless the new version's status is "
									},
									{
										"kind": "code",
										"text": "`draft`"
									},
									{
										"kind": "text",
										"text": ". "
									},
									{
										"kind": "code",
										"text": "`.mrpack`"
									},
									{
										"kind": "text",
										"text": ", "
									},
									{
										"kind": "code",
										"text": "`.jar`"
									},
									{
										"kind": "text",
										"text": ", "
									},
									{
										"kind": "code",
										"text": "`.zip`"
									},
									{
										"kind": "text",
										"text": ", and "
									},
									{
										"kind": "code",
										"text": "`.litemod`"
									},
									{
										"kind": "text",
										"text": " files are accepted.\r\n\r\nThe request is a [multipart request](https://www.ietf.org/rfc/rfc2388.txt) with at least two form fields: one is "
									},
									{
										"kind": "code",
										"text": "`data`"
									},
									{
										"kind": "text",
										"text": ", which includes a JSON body with the version metadata as shown below, and at least one field containing an upload file.\r\n\r\nYou can name the file parts anything you would like, but you must list each of the parts' names in "
									},
									{
										"kind": "code",
										"text": "`file_parts`"
									},
									{
										"kind": "text",
										"text": ", and optionally, provide one to use as the primary file in "
									},
									{
										"kind": "code",
										"text": "`primary_file`"
									},
									{
										"kind": "text",
										"text": "."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "Version Expected response to a valid request"
											}
										]
									},
									{
										"tag": "@throws",
										"content": [
											{
												"kind": "text",
												"text": "ApiError"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "src/services/VersionsService.ts",
									"line": 154,
									"character": 18
								}
							],
							"parameters": [
								{
									"id": 917,
									"name": "formData",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "New version"
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 228,
										"name": "CreateVersionBody",
										"package": "axrinth"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 25,
								"typeArguments": [
									{
										"type": "reference",
										"target": 601,
										"name": "Version",
										"package": "axrinth"
									}
								],
								"name": "CancelablePromise",
								"package": "axrinth"
							}
						}
					]
				},
				{
					"id": 908,
					"name": "deleteVersion",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isPublic": true,
						"isStatic": true
					},
					"sources": [
						{
							"fileName": "src/services/VersionsService.ts",
							"line": 101,
							"character": 18
						}
					],
					"signatures": [
						{
							"id": 909,
							"name": "deleteVersion",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Delete a version"
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "void"
											}
										]
									},
									{
										"tag": "@throws",
										"content": [
											{
												"kind": "text",
												"text": "ApiError"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "src/services/VersionsService.ts",
									"line": 101,
									"character": 18
								}
							],
							"parameters": [
								{
									"id": 910,
									"name": "id",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The ID of the version"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 25,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "CancelablePromise",
								"package": "axrinth"
							}
						}
					]
				},
				{
					"id": 895,
					"name": "getProjectVersions",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isPublic": true,
						"isStatic": true
					},
					"sources": [
						{
							"fileName": "src/services/VersionsService.ts",
							"line": 25,
							"character": 18
						}
					],
					"signatures": [
						{
							"id": 896,
							"name": "getProjectVersions",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "List project's versions"
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "Version Expected response to a valid request"
											}
										]
									},
									{
										"tag": "@throws",
										"content": [
											{
												"kind": "text",
												"text": "ApiError"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "src/services/VersionsService.ts",
									"line": 25,
									"character": 18
								}
							],
							"parameters": [
								{
									"id": 897,
									"name": "idSlug",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The ID or slug of the project"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 898,
									"name": "loaders",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The types of loaders to filter for"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 899,
									"name": "gameVersions",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The game versions to filter for"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 900,
									"name": "featured",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Allows to filter for featured or non-featured versions only"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 25,
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 601,
											"name": "Version",
											"package": "axrinth"
										}
									}
								],
								"name": "CancelablePromise",
								"package": "axrinth"
							}
						}
					]
				},
				{
					"id": 901,
					"name": "getVersion",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isPublic": true,
						"isStatic": true
					},
					"sources": [
						{
							"fileName": "src/services/VersionsService.ts",
							"line": 54,
							"character": 18
						}
					],
					"signatures": [
						{
							"id": 902,
							"name": "getVersion",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Get a version"
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "Version Expected response to a valid request"
											}
										]
									},
									{
										"tag": "@throws",
										"content": [
											{
												"kind": "text",
												"text": "ApiError"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "src/services/VersionsService.ts",
									"line": 54,
									"character": 18
								}
							],
							"parameters": [
								{
									"id": 903,
									"name": "id",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The ID of the version"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 25,
								"typeArguments": [
									{
										"type": "reference",
										"target": 601,
										"name": "Version",
										"package": "axrinth"
									}
								],
								"name": "CancelablePromise",
								"package": "axrinth"
							}
						}
					]
				},
				{
					"id": 911,
					"name": "getVersionFromIdOrNumber",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isPublic": true,
						"isStatic": true
					},
					"sources": [
						{
							"fileName": "src/services/VersionsService.ts",
							"line": 125,
							"character": 18
						}
					],
					"signatures": [
						{
							"id": 912,
							"name": "getVersionFromIdOrNumber",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Get a version given a version number or ID\nPlease note that, if the version number provided matches multiple versions, only the **oldest matching version** will be returned."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "Version Expected response to a valid request"
											}
										]
									},
									{
										"tag": "@throws",
										"content": [
											{
												"kind": "text",
												"text": "ApiError"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "src/services/VersionsService.ts",
									"line": 125,
									"character": 18
								}
							],
							"parameters": [
								{
									"id": 913,
									"name": "idSlug",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The ID or slug of the project"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 914,
									"name": "idNumber",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The version ID or version number"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 25,
								"typeArguments": [
									{
										"type": "reference",
										"target": 601,
										"name": "Version",
										"package": "axrinth"
									}
								],
								"name": "CancelablePromise",
								"package": "axrinth"
							}
						}
					]
				},
				{
					"id": 922,
					"name": "getVersions",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isPublic": true,
						"isStatic": true
					},
					"sources": [
						{
							"fileName": "src/services/VersionsService.ts",
							"line": 201,
							"character": 18
						}
					],
					"signatures": [
						{
							"id": 923,
							"name": "getVersions",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Get multiple versions"
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "Version Expected response to a valid request"
											}
										]
									},
									{
										"tag": "@throws",
										"content": [
											{
												"kind": "text",
												"text": "ApiError"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "src/services/VersionsService.ts",
									"line": 201,
									"character": 18
								}
							],
							"parameters": [
								{
									"id": 924,
									"name": "ids",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The IDs of the versions"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 25,
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 601,
											"name": "Version",
											"package": "axrinth"
										}
									}
								],
								"name": "CancelablePromise",
								"package": "axrinth"
							}
						}
					]
				},
				{
					"id": 904,
					"name": "modifyVersion",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isPublic": true,
						"isStatic": true
					},
					"sources": [
						{
							"fileName": "src/services/VersionsService.ts",
							"line": 76,
							"character": 18
						}
					],
					"signatures": [
						{
							"id": 905,
							"name": "modifyVersion",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Modify a version"
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "void"
											}
										]
									},
									{
										"tag": "@throws",
										"content": [
											{
												"kind": "text",
												"text": "ApiError"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "src/services/VersionsService.ts",
									"line": 76,
									"character": 18
								}
							],
							"parameters": [
								{
									"id": 906,
									"name": "id",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The ID of the version"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 907,
									"name": "requestBody",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Modified version fields"
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 255,
										"name": "EditableVersion",
										"package": "axrinth"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 25,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "CancelablePromise",
								"package": "axrinth"
							}
						}
					]
				},
				{
					"id": 918,
					"name": "scheduleVersion",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isPublic": true,
						"isStatic": true
					},
					"sources": [
						{
							"fileName": "src/services/VersionsService.ts",
							"line": 176,
							"character": 18
						}
					],
					"signatures": [
						{
							"id": 919,
							"name": "scheduleVersion",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Schedule a version"
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "void"
											}
										]
									},
									{
										"tag": "@throws",
										"content": [
											{
												"kind": "text",
												"text": "ApiError"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "src/services/VersionsService.ts",
									"line": 176,
									"character": 18
								}
							],
							"parameters": [
								{
									"id": 920,
									"name": "id",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The ID of the version"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 921,
									"name": "requestBody",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Information about date and requested status"
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 452,
										"name": "Schedule",
										"package": "axrinth"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 25,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "CancelablePromise",
								"package": "axrinth"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						931
					]
				},
				{
					"title": "Methods",
					"children": [
						925,
						915,
						908,
						895,
						901,
						911,
						922,
						904,
						918
					]
				}
			],
			"sources": [
				{
					"fileName": "src/services/VersionsService.ts",
					"line": 14,
					"character": 13
				}
			]
		},
		{
			"id": 124,
			"name": "AuthError",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "src/models/AuthError.ts",
					"line": 6,
					"character": 12
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 125,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 127,
							"name": "description",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The contents of the error"
									}
								]
							},
							"sources": [
								{
									"fileName": "src/models/AuthError.ts",
									"line": 14,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 126,
							"name": "error",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The name of the error"
									}
								]
							},
							"sources": [
								{
									"fileName": "src/models/AuthError.ts",
									"line": 10,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								127,
								126
							]
						}
					],
					"sources": [
						{
							"fileName": "src/models/AuthError.ts",
							"line": 6,
							"character": 24
						}
					]
				}
			}
		},
		{
			"id": 128,
			"name": "BaseProject",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "src/models/BaseProject.ts",
					"line": 6,
					"character": 12
				},
				{
					"fileName": "src/models/BaseProject.ts",
					"line": 33,
					"character": 17
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 129,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 133,
							"name": "categories",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "A list of the categories that the project has"
									}
								]
							},
							"sources": [
								{
									"fileName": "src/models/BaseProject.ts",
									"line": 22,
									"character": 4
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						},
						{
							"id": 134,
							"name": "client_side",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The client side support of the project"
									}
								]
							},
							"sources": [
								{
									"fileName": "src/models/BaseProject.ts",
									"line": 26,
									"character": 4
								}
							],
							"type": {
								"type": "reference",
								"target": 137,
								"name": "BaseProject.client_side",
								"package": "axrinth"
							}
						},
						{
							"id": 132,
							"name": "description",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "A short description of the project"
									}
								]
							},
							"sources": [
								{
									"fileName": "src/models/BaseProject.ts",
									"line": 18,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 135,
							"name": "server_side",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The server side support of the project"
									}
								]
							},
							"sources": [
								{
									"fileName": "src/models/BaseProject.ts",
									"line": 30,
									"character": 4
								}
							],
							"type": {
								"type": "reference",
								"target": 141,
								"name": "BaseProject.server_side",
								"package": "axrinth"
							}
						},
						{
							"id": 130,
							"name": "slug",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The slug of a project, used for vanity URLs. Regex: "
									},
									{
										"kind": "code",
										"text": "```^[\\w!@$()`.+,\"\\-']{3,64}$```"
									}
								]
							},
							"sources": [
								{
									"fileName": "src/models/BaseProject.ts",
									"line": 10,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 131,
							"name": "title",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The title or name of the project"
									}
								]
							},
							"sources": [
								{
									"fileName": "src/models/BaseProject.ts",
									"line": 14,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								133,
								134,
								132,
								135,
								130,
								131
							]
						}
					],
					"sources": [
						{
							"fileName": "src/models/BaseProject.ts",
							"line": 6,
							"character": 26
						}
					]
				}
			}
		},
		{
			"id": 145,
			"name": "BaseVersion",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "src/models/BaseVersion.ts",
					"line": 8,
					"character": 12
				},
				{
					"fileName": "src/models/BaseVersion.ts",
					"line": 45,
					"character": 17
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 146,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 149,
							"name": "changelog",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The changelog for this version"
									}
								]
							},
							"sources": [
								{
									"fileName": "src/models/BaseVersion.ts",
									"line": 20,
									"character": 4
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "literal",
										"value": null
									}
								]
							}
						},
						{
							"id": 150,
							"name": "dependencies",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "A list of specific versions of projects that this version depends on"
									}
								]
							},
							"sources": [
								{
									"fileName": "src/models/BaseVersion.ts",
									"line": 24,
									"character": 4
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": 610,
									"name": "VersionDependency",
									"package": "axrinth"
								}
							}
						},
						{
							"id": 154,
							"name": "featured",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Whether the version is featured or not"
									}
								]
							},
							"sources": [
								{
									"fileName": "src/models/BaseVersion.ts",
									"line": 40,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 151,
							"name": "game_versions",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "A list of versions of Minecraft that this version supports"
									}
								]
							},
							"sources": [
								{
									"fileName": "src/models/BaseVersion.ts",
									"line": 28,
									"character": 4
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						},
						{
							"id": 153,
							"name": "loaders",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The mod loaders that this version supports"
									}
								]
							},
							"sources": [
								{
									"fileName": "src/models/BaseVersion.ts",
									"line": 36,
									"character": 4
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						},
						{
							"id": 147,
							"name": "name",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The name of this version"
									}
								]
							},
							"sources": [
								{
									"fileName": "src/models/BaseVersion.ts",
									"line": 12,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 156,
							"name": "requested_status",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "src/models/BaseVersion.ts",
									"line": 42,
									"character": 4
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"target": 169,
										"name": "BaseVersion.requested_status",
										"package": "axrinth"
									},
									{
										"type": "literal",
										"value": null
									}
								]
							}
						},
						{
							"id": 155,
							"name": "status",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "src/models/BaseVersion.ts",
									"line": 41,
									"character": 4
								}
							],
							"type": {
								"type": "reference",
								"target": 162,
								"name": "BaseVersion.status",
								"package": "axrinth"
							}
						},
						{
							"id": 148,
							"name": "version_number",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The version number. Ideally will follow semantic versioning"
									}
								]
							},
							"sources": [
								{
									"fileName": "src/models/BaseVersion.ts",
									"line": 16,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 152,
							"name": "version_type",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The release channel for this version"
									}
								]
							},
							"sources": [
								{
									"fileName": "src/models/BaseVersion.ts",
									"line": 32,
									"character": 4
								}
							],
							"type": {
								"type": "reference",
								"target": 158,
								"name": "BaseVersion.version_type",
								"package": "axrinth"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								149,
								150,
								154,
								151,
								153,
								147,
								156,
								155,
								148,
								152
							]
						}
					],
					"sources": [
						{
							"fileName": "src/models/BaseVersion.ts",
							"line": 8,
							"character": 26
						}
					]
				}
			}
		},
		{
			"id": 174,
			"name": "CategoryTag",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "src/models/CategoryTag.ts",
					"line": 6,
					"character": 12
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 175,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 179,
							"name": "header",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The header under which the category should go"
									}
								]
							},
							"sources": [
								{
									"fileName": "src/models/CategoryTag.ts",
									"line": 22,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 176,
							"name": "icon",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The SVG icon of a category"
									}
								]
							},
							"sources": [
								{
									"fileName": "src/models/CategoryTag.ts",
									"line": 10,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 177,
							"name": "name",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The name of the category"
									}
								]
							},
							"sources": [
								{
									"fileName": "src/models/CategoryTag.ts",
									"line": 14,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 178,
							"name": "project_type",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The project type this category is applicable to"
									}
								]
							},
							"sources": [
								{
									"fileName": "src/models/CategoryTag.ts",
									"line": 18,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								179,
								176,
								177,
								178
							]
						}
					],
					"sources": [
						{
							"fileName": "src/models/CategoryTag.ts",
							"line": 6,
							"character": 26
						}
					]
				}
			}
		},
		{
			"id": 180,
			"name": "CreatableProject",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "src/models/CreatableProject.ts",
					"line": 10,
					"character": 12
				},
				{
					"fileName": "src/models/CreatableProject.ts",
					"line": 29,
					"character": 17
				}
			],
			"type": {
				"type": "intersection",
				"types": [
					{
						"type": "reference",
						"target": 326,
						"name": "ModifiableProject",
						"package": "axrinth"
					},
					{
						"type": "reflection",
						"declaration": {
							"id": 181,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 185,
									"name": "gallery_items",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Gallery images to be uploaded with the created project. Deprecated - please upload gallery images after initial upload."
											}
										],
										"blockTags": [
											{
												"tag": "@deprecated",
												"content": []
											}
										]
									},
									"sources": [
										{
											"fileName": "src/models/CreatableProject.ts",
											"line": 26,
											"character": 0
										}
									],
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 190,
											"name": "CreatableProjectGalleryItem",
											"package": "axrinth"
										}
									}
								},
								{
									"id": 183,
									"name": "initial_versions",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A list of initial versions to upload with the created project. Deprecated - please upload version files after initial upload."
											}
										],
										"blockTags": [
											{
												"tag": "@deprecated",
												"content": []
											}
										]
									},
									"sources": [
										{
											"fileName": "src/models/CreatableProject.ts",
											"line": 16,
											"character": 0
										}
									],
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 255,
											"name": "EditableVersion",
											"package": "axrinth"
										}
									}
								},
								{
									"id": 184,
									"name": "is_draft",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Whether the project should be saved as a draft instead of being sent to moderation for review. Deprecated - please always mark this as true."
											}
										],
										"blockTags": [
											{
												"tag": "@deprecated",
												"content": []
											}
										]
									},
									"sources": [
										{
											"fileName": "src/models/CreatableProject.ts",
											"line": 21,
											"character": 0
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 182,
									"name": "project_type",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"sources": [
										{
											"fileName": "src/models/CreatableProject.ts",
											"line": 11,
											"character": 0
										}
									],
									"type": {
										"type": "reference",
										"target": 187,
										"name": "CreatableProject.project_type",
										"package": "axrinth"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										185,
										183,
										184,
										182
									]
								}
							],
							"sources": [
								{
									"fileName": "src/models/CreatableProject.ts",
									"line": 10,
									"character": 52
								}
							]
						}
					}
				]
			}
		},
		{
			"id": 190,
			"name": "CreatableProjectGalleryItem",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "src/models/CreatableProjectGalleryItem.ts",
					"line": 6,
					"character": 12
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 191,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 195,
							"name": "description",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The description of the gallery image"
									}
								]
							},
							"sources": [
								{
									"fileName": "src/models/CreatableProjectGalleryItem.ts",
									"line": 22,
									"character": 4
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "literal",
										"value": null
									}
								]
							}
						},
						{
							"id": 193,
							"name": "featured",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Whether the image is featured in the gallery"
									}
								]
							},
							"sources": [
								{
									"fileName": "src/models/CreatableProjectGalleryItem.ts",
									"line": 14,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 192,
							"name": "item",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The name of the multipart item where the gallery media is located"
									}
								]
							},
							"sources": [
								{
									"fileName": "src/models/CreatableProjectGalleryItem.ts",
									"line": 10,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 196,
							"name": "ordering",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The order of the gallery image. Gallery images are sorted by this field and then alphabetically by title."
									}
								]
							},
							"sources": [
								{
									"fileName": "src/models/CreatableProjectGalleryItem.ts",
									"line": 26,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 194,
							"name": "title",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The title of the gallery image"
									}
								]
							},
							"sources": [
								{
									"fileName": "src/models/CreatableProjectGalleryItem.ts",
									"line": 18,
									"character": 4
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "literal",
										"value": null
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								195,
								193,
								192,
								196,
								194
							]
						}
					],
					"sources": [
						{
							"fileName": "src/models/CreatableProjectGalleryItem.ts",
							"line": 6,
							"character": 42
						}
					]
				}
			}
		},
		{
			"id": 197,
			"name": "CreatableReport",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "src/models/CreatableReport.ts",
					"line": 6,
					"character": 12
				},
				{
					"fileName": "src/models/CreatableReport.ts",
					"line": 25,
					"character": 17
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 198,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 202,
							"name": "body",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The extended explanation of the report"
									}
								]
							},
							"sources": [
								{
									"fileName": "src/models/CreatableReport.ts",
									"line": 22,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 200,
							"name": "item_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The ID of the item (project, version, or user) being reported"
									}
								]
							},
							"sources": [
								{
									"fileName": "src/models/CreatableReport.ts",
									"line": 14,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 201,
							"name": "item_type",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The type of the item being reported"
									}
								]
							},
							"sources": [
								{
									"fileName": "src/models/CreatableReport.ts",
									"line": 18,
									"character": 4
								}
							],
							"type": {
								"type": "reference",
								"target": 204,
								"name": "CreatableReport.item_type",
								"package": "axrinth"
							}
						},
						{
							"id": 199,
							"name": "report_type",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The type of the report being sent"
									}
								]
							},
							"sources": [
								{
									"fileName": "src/models/CreatableReport.ts",
									"line": 10,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								202,
								200,
								201,
								199
							]
						}
					],
					"sources": [
						{
							"fileName": "src/models/CreatableReport.ts",
							"line": 6,
							"character": 30
						}
					]
				}
			}
		},
		{
			"id": 208,
			"name": "CreatableVersion",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "src/models/CreatableVersion.ts",
					"line": 8,
					"character": 12
				}
			],
			"type": {
				"type": "intersection",
				"types": [
					{
						"type": "reference",
						"target": 145,
						"name": "BaseVersion",
						"package": "axrinth"
					},
					{
						"type": "reflection",
						"declaration": {
							"id": 209,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 211,
									"name": "file_parts",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "An array of the multipart field names of each file that goes with this version"
											}
										]
									},
									"sources": [
										{
											"fileName": "src/models/CreatableVersion.ts",
											"line": 16,
											"character": 0
										}
									],
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								},
								{
									"id": 212,
									"name": "primary_file",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The multipart field name of the primary file"
											}
										]
									},
									"sources": [
										{
											"fileName": "src/models/CreatableVersion.ts",
											"line": 20,
											"character": 0
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 210,
									"name": "project_id",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The ID of the project this version is for"
											}
										]
									},
									"sources": [
										{
											"fileName": "src/models/CreatableVersion.ts",
											"line": 12,
											"character": 0
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										211,
										212,
										210
									]
								}
							],
							"sources": [
								{
									"fileName": "src/models/CreatableVersion.ts",
									"line": 8,
									"character": 46
								}
							]
						}
					}
				]
			}
		},
		{
			"id": 213,
			"name": "CreateProjectBody",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "src/models/CreateProjectBody.ts",
					"line": 8,
					"character": 12
				},
				{
					"fileName": "src/models/CreateProjectBody.ts",
					"line": 16,
					"character": 17
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 214,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 215,
							"name": "data",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "src/models/CreateProjectBody.ts",
									"line": 9,
									"character": 4
								}
							],
							"type": {
								"type": "reference",
								"target": 180,
								"name": "CreatableProject",
								"package": "axrinth"
							}
						},
						{
							"id": 216,
							"name": "icon",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Project icon file"
									}
								]
							},
							"sources": [
								{
									"fileName": "src/models/CreateProjectBody.ts",
									"line": 13,
									"character": 4
								}
							],
							"type": {
								"type": "reference",
								"target": 218,
								"name": "CreateProjectBody.icon",
								"package": "axrinth"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								215,
								216
							]
						}
					],
					"sources": [
						{
							"fileName": "src/models/CreateProjectBody.ts",
							"line": 8,
							"character": 32
						}
					]
				}
			}
		},
		{
			"id": 228,
			"name": "CreateVersionBody",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "src/models/CreateVersionBody.ts",
					"line": 8,
					"character": 12
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 229,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 230,
							"name": "data",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "src/models/CreateVersionBody.ts",
									"line": 9,
									"character": 4
								}
							],
							"type": {
								"type": "reference",
								"target": 208,
								"name": "CreatableVersion",
								"package": "axrinth"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								230
							]
						}
					],
					"sources": [
						{
							"fileName": "src/models/CreateVersionBody.ts",
							"line": 8,
							"character": 32
						}
					]
				}
			}
		},
		{
			"id": 231,
			"name": "DonationPlatformTag",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "src/models/DonationPlatformTag.ts",
					"line": 6,
					"character": 12
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 232,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 234,
							"name": "name",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The full name of the donation platform"
									}
								]
							},
							"sources": [
								{
									"fileName": "src/models/DonationPlatformTag.ts",
									"line": 14,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 233,
							"name": "short",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The short identifier of the donation platform"
									}
								]
							},
							"sources": [
								{
									"fileName": "src/models/DonationPlatformTag.ts",
									"line": 10,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								234,
								233
							]
						}
					],
					"sources": [
						{
							"fileName": "src/models/DonationPlatformTag.ts",
							"line": 6,
							"character": 34
						}
					]
				}
			}
		},
		{
			"id": 235,
			"name": "EditableFileType",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "src/models/EditableFileType.ts",
					"line": 6,
					"character": 12
				},
				{
					"fileName": "src/models/EditableFileType.ts",
					"line": 21,
					"character": 17
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 236,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 237,
							"name": "algorithm",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The hash algorithm of the hash specified in the hash field"
									}
								]
							},
							"sources": [
								{
									"fileName": "src/models/EditableFileType.ts",
									"line": 10,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 239,
							"name": "file_type",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The hash algorithm of the file you're editing"
									}
								]
							},
							"sources": [
								{
									"fileName": "src/models/EditableFileType.ts",
									"line": 18,
									"character": 4
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"target": 241,
										"name": "EditableFileType.file_type",
										"package": "axrinth"
									},
									{
										"type": "literal",
										"value": null
									}
								]
							}
						},
						{
							"id": 238,
							"name": "hash",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The hash of the file you're editing"
									}
								]
							},
							"sources": [
								{
									"fileName": "src/models/EditableFileType.ts",
									"line": 14,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								237,
								239,
								238
							]
						}
					],
					"sources": [
						{
							"fileName": "src/models/EditableFileType.ts",
							"line": 6,
							"character": 31
						}
					]
				}
			}
		},
		{
			"id": 244,
			"name": "EditableProject",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "src/models/EditableProject.ts",
					"line": 8,
					"character": 12
				}
			],
			"type": {
				"type": "intersection",
				"types": [
					{
						"type": "reference",
						"target": 326,
						"name": "ModifiableProject",
						"package": "axrinth"
					},
					{
						"type": "reflection",
						"declaration": {
							"id": 245,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 246,
									"name": "moderation_message",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The title of the moderators' message for the project"
											}
										]
									},
									"sources": [
										{
											"fileName": "src/models/EditableProject.ts",
											"line": 12,
											"character": 0
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "literal",
												"value": null
											}
										]
									}
								},
								{
									"id": 247,
									"name": "moderation_message_body",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The body of the moderators' message for the project"
											}
										]
									},
									"sources": [
										{
											"fileName": "src/models/EditableProject.ts",
											"line": 16,
											"character": 0
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "literal",
												"value": null
											}
										]
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										246,
										247
									]
								}
							],
							"sources": [
								{
									"fileName": "src/models/EditableProject.ts",
									"line": 8,
									"character": 51
								}
							]
						}
					}
				]
			}
		},
		{
			"id": 248,
			"name": "EditableUser",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "src/models/EditableUser.ts",
					"line": 8,
					"character": 12
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 249,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 253,
							"name": "bio",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "A description of the user"
									}
								]
							},
							"sources": [
								{
									"fileName": "src/models/EditableUser.ts",
									"line": 24,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 252,
							"name": "email",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The user's email (only displayed if requesting your own account). Requires "
									},
									{
										"kind": "code",
										"text": "`USER_READ_EMAIL`"
									},
									{
										"kind": "text",
										"text": " PAT scope."
									}
								]
							},
							"sources": [
								{
									"fileName": "src/models/EditableUser.ts",
									"line": 20,
									"character": 4
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "literal",
										"value": null
									}
								]
							}
						},
						{
							"id": 251,
							"name": "name",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The user's display name"
									}
								]
							},
							"sources": [
								{
									"fileName": "src/models/EditableUser.ts",
									"line": 16,
									"character": 4
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "literal",
										"value": null
									}
								]
							}
						},
						{
							"id": 254,
							"name": "payout_data",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "src/models/EditableUser.ts",
									"line": 25,
									"character": 4
								}
							],
							"type": {
								"type": "reference",
								"target": 577,
								"name": "UserPayoutData",
								"package": "axrinth"
							}
						},
						{
							"id": 250,
							"name": "username",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The user's username"
									}
								]
							},
							"sources": [
								{
									"fileName": "src/models/EditableUser.ts",
									"line": 12,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								253,
								252,
								251,
								254,
								250
							]
						}
					],
					"sources": [
						{
							"fileName": "src/models/EditableUser.ts",
							"line": 8,
							"character": 27
						}
					]
				}
			}
		},
		{
			"id": 255,
			"name": "EditableVersion",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "src/models/EditableVersion.ts",
					"line": 9,
					"character": 12
				}
			],
			"type": {
				"type": "intersection",
				"types": [
					{
						"type": "reference",
						"target": 145,
						"name": "BaseVersion",
						"package": "axrinth"
					},
					{
						"type": "reflection",
						"declaration": {
							"id": 256,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 258,
									"name": "file_types",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A list of file_types to edit"
											}
										]
									},
									"sources": [
										{
											"fileName": "src/models/EditableVersion.ts",
											"line": 17,
											"character": 0
										}
									],
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 235,
											"name": "EditableFileType",
											"package": "axrinth"
										}
									}
								},
								{
									"id": 257,
									"name": "primary_file",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The hash format and the hash of the new primary file"
											}
										]
									},
									"sources": [
										{
											"fileName": "src/models/EditableVersion.ts",
											"line": 13,
											"character": 0
										}
									],
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										258,
										257
									]
								}
							],
							"sources": [
								{
									"fileName": "src/models/EditableVersion.ts",
									"line": 9,
									"character": 45
								}
							]
						}
					}
				]
			}
		},
		{
			"id": 259,
			"name": "FileHashIdentifier",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The hash of the file, considering its byte content, and encoded in hexadecimal"
					}
				]
			},
			"sources": [
				{
					"fileName": "src/models/FileHashIdentifier.ts",
					"line": 9,
					"character": 12
				}
			],
			"type": {
				"type": "intrinsic",
				"name": "string"
			}
		},
		{
			"id": 260,
			"name": "ForgeUpdateCheckerPromos",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "A list of the recommended and latest versions for each Minecraft release"
					}
				]
			},
			"sources": [
				{
					"fileName": "src/models/ForgeUpdateCheckerPromos.ts",
					"line": 9,
					"character": 12
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 261,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 263,
							"name": "{version}-latest",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The latest mod version for "
									},
									{
										"kind": "code",
										"text": "`{version}`"
									},
									{
										"kind": "text",
										"text": ". Shows versions with the "
									},
									{
										"kind": "code",
										"text": "`alpha`"
									},
									{
										"kind": "text",
										"text": " and "
									},
									{
										"kind": "code",
										"text": "`beta`"
									},
									{
										"kind": "text",
										"text": " version types."
									}
								]
							},
							"sources": [
								{
									"fileName": "src/models/ForgeUpdateCheckerPromos.ts",
									"line": 17,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 262,
							"name": "{version}-recommended",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The mod version that is recommended for "
									},
									{
										"kind": "code",
										"text": "`{version}`"
									},
									{
										"kind": "text",
										"text": ". Excludes versions with the "
									},
									{
										"kind": "code",
										"text": "`alpha`"
									},
									{
										"kind": "text",
										"text": " and "
									},
									{
										"kind": "code",
										"text": "`beta`"
									},
									{
										"kind": "text",
										"text": " version types."
									}
								]
							},
							"sources": [
								{
									"fileName": "src/models/ForgeUpdateCheckerPromos.ts",
									"line": 13,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								263,
								262
							]
						}
					],
					"sources": [
						{
							"fileName": "src/models/ForgeUpdateCheckerPromos.ts",
							"line": 9,
							"character": 39
						}
					]
				}
			}
		},
		{
			"id": 264,
			"name": "ForgeUpdates",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Mod version information that can be consumed by Forge's update checker"
					}
				]
			},
			"sources": [
				{
					"fileName": "src/models/ForgeUpdates.ts",
					"line": 11,
					"character": 12
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 265,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 266,
							"name": "homepage",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "A link to the mod page"
									}
								]
							},
							"sources": [
								{
									"fileName": "src/models/ForgeUpdates.ts",
									"line": 15,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 267,
							"name": "promos",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "src/models/ForgeUpdates.ts",
									"line": 16,
									"character": 4
								}
							],
							"type": {
								"type": "reference",
								"target": 260,
								"name": "ForgeUpdateCheckerPromos",
								"package": "axrinth"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								266,
								267
							]
						}
					],
					"sources": [
						{
							"fileName": "src/models/ForgeUpdates.ts",
							"line": 11,
							"character": 27
						}
					]
				}
			}
		},
		{
			"id": 268,
			"name": "GalleryImage",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "src/models/GalleryImage.ts",
					"line": 6,
					"character": 12
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 269,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 274,
							"name": "created",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The date and time the gallery image was created"
									}
								]
							},
							"sources": [
								{
									"fileName": "src/models/GalleryImage.ts",
									"line": 26,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 273,
							"name": "description",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The description of the gallery image"
									}
								]
							},
							"sources": [
								{
									"fileName": "src/models/GalleryImage.ts",
									"line": 22,
									"character": 4
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "literal",
										"value": null
									}
								]
							}
						},
						{
							"id": 271,
							"name": "featured",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Whether the image is featured in the gallery"
									}
								]
							},
							"sources": [
								{
									"fileName": "src/models/GalleryImage.ts",
									"line": 14,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 275,
							"name": "ordering",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The order of the gallery image. Gallery images are sorted by this field and then alphabetically by title."
									}
								]
							},
							"sources": [
								{
									"fileName": "src/models/GalleryImage.ts",
									"line": 30,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 272,
							"name": "title",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The title of the gallery image"
									}
								]
							},
							"sources": [
								{
									"fileName": "src/models/GalleryImage.ts",
									"line": 18,
									"character": 4
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "literal",
										"value": null
									}
								]
							}
						},
						{
							"id": 270,
							"name": "url",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The URL of the gallery image"
									}
								]
							},
							"sources": [
								{
									"fileName": "src/models/GalleryImage.ts",
									"line": 10,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								274,
								273,
								271,
								275,
								272,
								270
							]
						}
					],
					"sources": [
						{
							"fileName": "src/models/GalleryImage.ts",
							"line": 6,
							"character": 27
						}
					]
				}
			}
		},
		{
			"id": 276,
			"name": "GameVersionTag",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "src/models/GameVersionTag.ts",
					"line": 6,
					"character": 12
				},
				{
					"fileName": "src/models/GameVersionTag.ts",
					"line": 25,
					"character": 17
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 277,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 280,
							"name": "date",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The date of the game version release"
									}
								]
							},
							"sources": [
								{
									"fileName": "src/models/GameVersionTag.ts",
									"line": 18,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 281,
							"name": "major",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Whether or not this is a major version, used for Featured Versions"
									}
								]
							},
							"sources": [
								{
									"fileName": "src/models/GameVersionTag.ts",
									"line": 22,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 278,
							"name": "version",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The name/number of the game version"
									}
								]
							},
							"sources": [
								{
									"fileName": "src/models/GameVersionTag.ts",
									"line": 10,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 279,
							"name": "version_type",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The type of the game version"
									}
								]
							},
							"sources": [
								{
									"fileName": "src/models/GameVersionTag.ts",
									"line": 14,
									"character": 4
								}
							],
							"type": {
								"type": "reference",
								"target": 283,
								"name": "GameVersionTag.version_type",
								"package": "axrinth"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								280,
								281,
								278,
								279
							]
						}
					],
					"sources": [
						{
							"fileName": "src/models/GameVersionTag.ts",
							"line": 6,
							"character": 29
						}
					]
				}
			}
		},
		{
			"id": 288,
			"name": "GetLatestVersionFromHashBody",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "src/models/GetLatestVersionFromHashBody.ts",
					"line": 6,
					"character": 12
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 289,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 291,
							"name": "game_versions",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "src/models/GetLatestVersionFromHashBody.ts",
									"line": 8,
									"character": 4
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						},
						{
							"id": 290,
							"name": "loaders",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "src/models/GetLatestVersionFromHashBody.ts",
									"line": 7,
									"character": 4
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								291,
								290
							]
						}
					],
					"sources": [
						{
							"fileName": "src/models/GetLatestVersionFromHashBody.ts",
							"line": 6,
							"character": 43
						}
					]
				}
			}
		},
		{
			"id": 292,
			"name": "GetLatestVersionsFromHashesBody",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "src/models/GetLatestVersionsFromHashesBody.ts",
					"line": 8,
					"character": 12
				}
			],
			"type": {
				"type": "intersection",
				"types": [
					{
						"type": "reference",
						"target": 296,
						"name": "HashList",
						"package": "axrinth"
					},
					{
						"type": "reflection",
						"declaration": {
							"id": 293,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 295,
									"name": "game_versions",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"sources": [
										{
											"fileName": "src/models/GetLatestVersionsFromHashesBody.ts",
											"line": 10,
											"character": 0
										}
									],
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								},
								{
									"id": 294,
									"name": "loaders",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"sources": [
										{
											"fileName": "src/models/GetLatestVersionsFromHashesBody.ts",
											"line": 9,
											"character": 0
										}
									],
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										295,
										294
									]
								}
							],
							"sources": [
								{
									"fileName": "src/models/GetLatestVersionsFromHashesBody.ts",
									"line": 8,
									"character": 58
								}
							]
						}
					}
				]
			}
		},
		{
			"id": 296,
			"name": "HashList",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "A list of hashes and the algorithm used to create them"
					}
				]
			},
			"sources": [
				{
					"fileName": "src/models/HashList.ts",
					"line": 9,
					"character": 12
				},
				{
					"fileName": "src/models/HashList.ts",
					"line": 14,
					"character": 17
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 297,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 299,
							"name": "algorithm",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "src/models/HashList.ts",
									"line": 11,
									"character": 4
								}
							],
							"type": {
								"type": "reference",
								"target": 301,
								"name": "HashList.algorithm",
								"package": "axrinth"
							}
						},
						{
							"id": 298,
							"name": "hashes",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "src/models/HashList.ts",
									"line": 10,
									"character": 4
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								299,
								298
							]
						}
					],
					"sources": [
						{
							"fileName": "src/models/HashList.ts",
							"line": 9,
							"character": 23
						}
					]
				}
			}
		},
		{
			"id": 304,
			"name": "HashVersionMap",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "A map from hashes to versions"
					}
				]
			},
			"sources": [
				{
					"fileName": "src/models/HashVersionMap.ts",
					"line": 11,
					"character": 12
				}
			],
			"type": {
				"type": "reference",
				"target": {
					"sourceFileName": "node_modules/typescript/lib/lib.es5.d.ts",
					"qualifiedName": "Record"
				},
				"typeArguments": [
					{
						"type": "intrinsic",
						"name": "string"
					},
					{
						"type": "reference",
						"target": 601,
						"name": "Version",
						"package": "axrinth"
					}
				],
				"name": "Record",
				"package": "typescript"
			}
		},
		{
			"id": 305,
			"name": "InvalidInputError",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "src/models/InvalidInputError.ts",
					"line": 6,
					"character": 12
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 306,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 308,
							"name": "description",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The contents of the error"
									}
								]
							},
							"sources": [
								{
									"fileName": "src/models/InvalidInputError.ts",
									"line": 14,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 307,
							"name": "error",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The name of the error"
									}
								]
							},
							"sources": [
								{
									"fileName": "src/models/InvalidInputError.ts",
									"line": 10,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								308,
								307
							]
						}
					],
					"sources": [
						{
							"fileName": "src/models/InvalidInputError.ts",
							"line": 6,
							"character": 32
						}
					]
				}
			}
		},
		{
			"id": 309,
			"name": "License",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "A full license"
					}
				]
			},
			"sources": [
				{
					"fileName": "src/models/License.ts",
					"line": 9,
					"character": 12
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 310,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 312,
							"name": "body",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "src/models/License.ts",
									"line": 11,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 311,
							"name": "title",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "src/models/License.ts",
									"line": 10,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								312,
								311
							]
						}
					],
					"sources": [
						{
							"fileName": "src/models/License.ts",
							"line": 9,
							"character": 22
						}
					]
				}
			}
		},
		{
			"id": 313,
			"name": "LicenseTag",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "A short overview of a license"
					}
				]
			},
			"sources": [
				{
					"fileName": "src/models/LicenseTag.ts",
					"line": 9,
					"character": 12
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 314,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 316,
							"name": "name",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The full name of the license"
									}
								]
							},
							"sources": [
								{
									"fileName": "src/models/LicenseTag.ts",
									"line": 17,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 315,
							"name": "short",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The short identifier of the license"
									}
								]
							},
							"sources": [
								{
									"fileName": "src/models/LicenseTag.ts",
									"line": 13,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								316,
								315
							]
						}
					],
					"sources": [
						{
							"fileName": "src/models/LicenseTag.ts",
							"line": 9,
							"character": 25
						}
					]
				}
			}
		},
		{
			"id": 317,
			"name": "LoaderTag",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "src/models/LoaderTag.ts",
					"line": 6,
					"character": 12
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 318,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 319,
							"name": "icon",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The SVG icon of a loader"
									}
								]
							},
							"sources": [
								{
									"fileName": "src/models/LoaderTag.ts",
									"line": 10,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 320,
							"name": "name",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The name of the loader"
									}
								]
							},
							"sources": [
								{
									"fileName": "src/models/LoaderTag.ts",
									"line": 14,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 321,
							"name": "supported_project_types",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The project types that this loader is applicable to"
									}
								]
							},
							"sources": [
								{
									"fileName": "src/models/LoaderTag.ts",
									"line": 18,
									"character": 4
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								319,
								320,
								321
							]
						}
					],
					"sources": [
						{
							"fileName": "src/models/LoaderTag.ts",
							"line": 6,
							"character": 24
						}
					]
				}
			}
		},
		{
			"id": 322,
			"name": "ModeratorMessage",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "A message that a moderator sent regarding the project"
					}
				],
				"blockTags": [
					{
						"tag": "@deprecated",
						"content": []
					}
				]
			},
			"sources": [
				{
					"fileName": "src/models/ModeratorMessage.ts",
					"line": 10,
					"character": 12
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 323,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 325,
							"name": "body",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The longer body of the message that a moderator has left for the project"
									}
								]
							},
							"sources": [
								{
									"fileName": "src/models/ModeratorMessage.ts",
									"line": 18,
									"character": 4
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "literal",
										"value": null
									}
								]
							}
						},
						{
							"id": 324,
							"name": "message",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The message that a moderator has left for the project"
									}
								]
							},
							"sources": [
								{
									"fileName": "src/models/ModeratorMessage.ts",
									"line": 14,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								325,
								324
							]
						}
					],
					"sources": [
						{
							"fileName": "src/models/ModeratorMessage.ts",
							"line": 10,
							"character": 31
						}
					]
				}
			}
		},
		{
			"id": 326,
			"name": "ModifiableProject",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "src/models/ModifiableProject.ts",
					"line": 8,
					"character": 12
				}
			],
			"type": {
				"type": "intersection",
				"types": [
					{
						"type": "reference",
						"target": 334,
						"name": "NonSearchProject",
						"package": "axrinth"
					},
					{
						"type": "reflection",
						"declaration": {
							"id": 327,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 328,
									"name": "license_id",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The SPDX license ID of a project"
											}
										]
									},
									"sources": [
										{
											"fileName": "src/models/ModifiableProject.ts",
											"line": 12,
											"character": 0
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 329,
									"name": "license_url",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The URL to this license"
											}
										]
									},
									"sources": [
										{
											"fileName": "src/models/ModifiableProject.ts",
											"line": 16,
											"character": 0
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "literal",
												"value": null
											}
										]
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										328,
										329
									]
								}
							],
							"sources": [
								{
									"fileName": "src/models/ModifiableProject.ts",
									"line": 8,
									"character": 52
								}
							]
						}
					}
				]
			}
		},
		{
			"id": 330,
			"name": "ModifyTeamMemberBody",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "src/models/ModifyTeamMemberBody.ts",
					"line": 6,
					"character": 12
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 331,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"sources": [
						{
							"fileName": "src/models/ModifyTeamMemberBody.ts",
							"line": 6,
							"character": 35
						}
					]
				}
			}
		},
		{
			"id": 332,
			"name": "MultipleHashQueryIdentifier",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Whether to return multiple results when looking for this hash"
					}
				]
			},
			"sources": [
				{
					"fileName": "src/models/MultipleHashQueryIdentifier.ts",
					"line": 9,
					"character": 12
				}
			],
			"type": {
				"type": "intrinsic",
				"name": "boolean"
			}
		},
		{
			"id": 333,
			"name": "MultipleProjectIdentifier",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The IDs and/or slugs of the projects"
					}
				]
			},
			"sources": [
				{
					"fileName": "src/models/MultipleProjectIdentifier.ts",
					"line": 9,
					"character": 12
				}
			],
			"type": {
				"type": "intrinsic",
				"name": "string"
			}
		},
		{
			"id": 334,
			"name": "NonSearchProject",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "src/models/NonSearchProject.ts",
					"line": 9,
					"character": 12
				},
				{
					"fileName": "src/models/NonSearchProject.ts",
					"line": 48,
					"character": 17
				}
			],
			"type": {
				"type": "intersection",
				"types": [
					{
						"type": "reference",
						"target": 128,
						"name": "BaseProject",
						"package": "axrinth"
					},
					{
						"type": "reflection",
						"declaration": {
							"id": 335,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 339,
									"name": "additional_categories",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A list of categories which are searchable but non-primary"
											}
										]
									},
									"sources": [
										{
											"fileName": "src/models/NonSearchProject.ts",
											"line": 25,
											"character": 0
										}
									],
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								},
								{
									"id": 336,
									"name": "body",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A long form description of the project"
											}
										]
									},
									"sources": [
										{
											"fileName": "src/models/NonSearchProject.ts",
											"line": 13,
											"character": 0
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 343,
									"name": "discord_url",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "An optional invite link to the project's discord"
											}
										]
									},
									"sources": [
										{
											"fileName": "src/models/NonSearchProject.ts",
											"line": 41,
											"character": 0
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "literal",
												"value": null
											}
										]
									}
								},
								{
									"id": 344,
									"name": "donation_urls",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A list of donation links for the project"
											}
										]
									},
									"sources": [
										{
											"fileName": "src/models/NonSearchProject.ts",
											"line": 45,
											"character": 0
										}
									],
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 420,
											"name": "ProjectDonationURL",
											"package": "axrinth"
										}
									}
								},
								{
									"id": 340,
									"name": "issues_url",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "An optional link to where to submit bugs or issues with the project"
											}
										]
									},
									"sources": [
										{
											"fileName": "src/models/NonSearchProject.ts",
											"line": 29,
											"character": 0
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "literal",
												"value": null
											}
										]
									}
								},
								{
									"id": 338,
									"name": "requested_status",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The requested status when submitting for review or scheduling the project for release"
											}
										]
									},
									"sources": [
										{
											"fileName": "src/models/NonSearchProject.ts",
											"line": 21,
											"character": 0
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"target": 357,
												"name": "NonSearchProject.requested_status",
												"package": "axrinth"
											},
											{
												"type": "literal",
												"value": null
											}
										]
									}
								},
								{
									"id": 341,
									"name": "source_url",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "An optional link to the source code of the project"
											}
										]
									},
									"sources": [
										{
											"fileName": "src/models/NonSearchProject.ts",
											"line": 33,
											"character": 0
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "literal",
												"value": null
											}
										]
									}
								},
								{
									"id": 337,
									"name": "status",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The status of the project"
											}
										]
									},
									"sources": [
										{
											"fileName": "src/models/NonSearchProject.ts",
											"line": 17,
											"character": 0
										}
									],
									"type": {
										"type": "reference",
										"target": 346,
										"name": "NonSearchProject.status",
										"package": "axrinth"
									}
								},
								{
									"id": 342,
									"name": "wiki_url",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "An optional link to the project's wiki page or other relevant information"
											}
										]
									},
									"sources": [
										{
											"fileName": "src/models/NonSearchProject.ts",
											"line": 37,
											"character": 0
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "literal",
												"value": null
											}
										]
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										339,
										336,
										343,
										344,
										340,
										338,
										341,
										337,
										342
									]
								}
							],
							"sources": [
								{
									"fileName": "src/models/NonSearchProject.ts",
									"line": 9,
									"character": 46
								}
							]
						}
					}
				]
			}
		},
		{
			"id": 363,
			"name": "Notification",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "src/models/Notification.ts",
					"line": 8,
					"character": 12
				},
				{
					"fileName": "src/models/Notification.ts",
					"line": 47,
					"character": 17
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 364,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 373,
							"name": "actions",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "A list of actions that can be performed"
									}
								]
							},
							"sources": [
								{
									"fileName": "src/models/Notification.ts",
									"line": 44,
									"character": 4
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": 380,
									"name": "NotificationAction",
									"package": "axrinth"
								}
							}
						},
						{
							"id": 372,
							"name": "created",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The time at which the notification was created"
									}
								]
							},
							"sources": [
								{
									"fileName": "src/models/Notification.ts",
									"line": 40,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 365,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The id of the notification"
									}
								]
							},
							"sources": [
								{
									"fileName": "src/models/Notification.ts",
									"line": 12,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 370,
							"name": "link",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "A link to the related project or version"
									}
								]
							},
							"sources": [
								{
									"fileName": "src/models/Notification.ts",
									"line": 32,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 371,
							"name": "read",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Whether the notification has been read or not"
									}
								]
							},
							"sources": [
								{
									"fileName": "src/models/Notification.ts",
									"line": 36,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 369,
							"name": "text",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The body text of the notification"
									}
								]
							},
							"sources": [
								{
									"fileName": "src/models/Notification.ts",
									"line": 28,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 368,
							"name": "title",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The title of the notification"
									}
								]
							},
							"sources": [
								{
									"fileName": "src/models/Notification.ts",
									"line": 24,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 367,
							"name": "type",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The type of notification"
									}
								]
							},
							"sources": [
								{
									"fileName": "src/models/Notification.ts",
									"line": 20,
									"character": 4
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"target": 375,
										"name": "Notification.type",
										"package": "axrinth"
									},
									{
										"type": "literal",
										"value": null
									}
								]
							}
						},
						{
							"id": 366,
							"name": "user_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The id of the user who received the notification"
									}
								]
							},
							"sources": [
								{
									"fileName": "src/models/Notification.ts",
									"line": 16,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								373,
								372,
								365,
								370,
								371,
								369,
								368,
								367,
								366
							]
						}
					],
					"sources": [
						{
							"fileName": "src/models/Notification.ts",
							"line": 8,
							"character": 27
						}
					]
				}
			}
		},
		{
			"id": 380,
			"name": "NotificationAction",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "An action that can be performed on a notification"
					}
				]
			},
			"sources": [
				{
					"fileName": "src/models/NotificationAction.ts",
					"line": 9,
					"character": 12
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 381,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 383,
							"name": "action_route",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The HTTP code and path to request in order to perform this action."
									}
								]
							},
							"sources": [
								{
									"fileName": "src/models/NotificationAction.ts",
									"line": 17,
									"character": 4
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						},
						{
							"id": 382,
							"name": "title",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The friendly name for this action"
									}
								]
							},
							"sources": [
								{
									"fileName": "src/models/NotificationAction.ts",
									"line": 13,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								383,
								382
							]
						}
					],
					"sources": [
						{
							"fileName": "src/models/NotificationAction.ts",
							"line": 9,
							"character": 33
						}
					]
				}
			}
		},
		{
			"id": 384,
			"name": "NotificationIdentifier",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The ID of the notification"
					}
				]
			},
			"sources": [
				{
					"fileName": "src/models/NotificationIdentifier.ts",
					"line": 9,
					"character": 12
				}
			],
			"type": {
				"type": "intrinsic",
				"name": "string"
			}
		},
		{
			"id": 107,
			"name": "OpenAPIConfig",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "src/core/OpenAPI.ts",
					"line": 10,
					"character": 12
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 108,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 109,
							"name": "BASE",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "src/core/OpenAPI.ts",
									"line": 11,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 112,
							"name": "CREDENTIALS",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "src/core/OpenAPI.ts",
									"line": 14,
									"character": 4
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": "include"
									},
									{
										"type": "literal",
										"value": "omit"
									},
									{
										"type": "literal",
										"value": "same-origin"
									}
								]
							}
						},
						{
							"id": 117,
							"name": "ENCODE_PATH",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "src/core/OpenAPI.ts",
									"line": 19,
									"character": 4
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 118,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"sources": [
										{
											"fileName": "src/core/OpenAPI.ts",
											"line": 19,
											"character": 19
										}
									],
									"signatures": [
										{
											"id": 119,
											"name": "__type",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"parameters": [
												{
													"id": 120,
													"name": "path",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									]
								}
							}
						},
						{
							"id": 116,
							"name": "HEADERS",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "src/core/OpenAPI.ts",
									"line": 18,
									"character": 4
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "src/core/OpenAPI.ts",
											"qualifiedName": "Headers"
										},
										"name": "Headers",
										"package": "axrinth"
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "src/core/OpenAPI.ts",
											"qualifiedName": "Resolver"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "src/core/OpenAPI.ts",
													"qualifiedName": "Headers"
												},
												"name": "Headers",
												"package": "axrinth"
											}
										],
										"name": "Resolver",
										"package": "axrinth"
									}
								]
							}
						},
						{
							"id": 115,
							"name": "PASSWORD",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "src/core/OpenAPI.ts",
									"line": 17,
									"character": 4
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "src/core/OpenAPI.ts",
											"qualifiedName": "Resolver"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											}
										],
										"name": "Resolver",
										"package": "axrinth"
									}
								]
							}
						},
						{
							"id": 113,
							"name": "TOKEN",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "src/core/OpenAPI.ts",
									"line": 15,
									"character": 4
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "src/core/OpenAPI.ts",
											"qualifiedName": "Resolver"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											}
										],
										"name": "Resolver",
										"package": "axrinth"
									}
								]
							}
						},
						{
							"id": 114,
							"name": "USERNAME",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "src/core/OpenAPI.ts",
									"line": 16,
									"character": 4
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "src/core/OpenAPI.ts",
											"qualifiedName": "Resolver"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											}
										],
										"name": "Resolver",
										"package": "axrinth"
									}
								]
							}
						},
						{
							"id": 110,
							"name": "VERSION",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "src/core/OpenAPI.ts",
									"line": 12,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 111,
							"name": "WITH_CREDENTIALS",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "src/core/OpenAPI.ts",
									"line": 13,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								109,
								112,
								117,
								116,
								115,
								113,
								114,
								110,
								111
							]
						}
					],
					"sources": [
						{
							"fileName": "src/core/OpenAPI.ts",
							"line": 10,
							"character": 28
						}
					]
				}
			}
		},
		{
			"id": 385,
			"name": "PatchProjectsBody",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "src/models/PatchProjectsBody.ts",
					"line": 8,
					"character": 12
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 386,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 391,
							"name": "add_additional_categories",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Add all of the additional categories specified here"
									}
								]
							},
							"sources": [
								{
									"fileName": "src/models/PatchProjectsBody.ts",
									"line": 28,
									"character": 4
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						},
						{
							"id": 388,
							"name": "add_categories",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Add all of the categories specified here"
									}
								]
							},
							"sources": [
								{
									"fileName": "src/models/PatchProjectsBody.ts",
									"line": 16,
									"character": 4
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						},
						{
							"id": 394,
							"name": "add_donation_urls",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Add all of the donation links specified here"
									}
								]
							},
							"sources": [
								{
									"fileName": "src/models/PatchProjectsBody.ts",
									"line": 40,
									"character": 4
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": 420,
									"name": "ProjectDonationURL",
									"package": "axrinth"
								}
							}
						},
						{
							"id": 390,
							"name": "additional_categories",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Set all of the additional categories to the categories specified here"
									}
								]
							},
							"sources": [
								{
									"fileName": "src/models/PatchProjectsBody.ts",
									"line": 24,
									"character": 4
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						},
						{
							"id": 387,
							"name": "categories",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Set all of the categories to the categories specified here"
									}
								]
							},
							"sources": [
								{
									"fileName": "src/models/PatchProjectsBody.ts",
									"line": 12,
									"character": 4
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						},
						{
							"id": 399,
							"name": "discord_url",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "An optional invite link to the projects' discord"
									}
								]
							},
							"sources": [
								{
									"fileName": "src/models/PatchProjectsBody.ts",
									"line": 60,
									"character": 4
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "literal",
										"value": null
									}
								]
							}
						},
						{
							"id": 393,
							"name": "donation_urls",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Set all of the donation links to the donation links specified here"
									}
								]
							},
							"sources": [
								{
									"fileName": "src/models/PatchProjectsBody.ts",
									"line": 36,
									"character": 4
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": 420,
									"name": "ProjectDonationURL",
									"package": "axrinth"
								}
							}
						},
						{
							"id": 396,
							"name": "issues_url",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "An optional link to where to submit bugs or issues with the projects"
									}
								]
							},
							"sources": [
								{
									"fileName": "src/models/PatchProjectsBody.ts",
									"line": 48,
									"character": 4
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "literal",
										"value": null
									}
								]
							}
						},
						{
							"id": 392,
							"name": "remove_additional_categories",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Remove all of the additional categories specified here"
									}
								]
							},
							"sources": [
								{
									"fileName": "src/models/PatchProjectsBody.ts",
									"line": 32,
									"character": 4
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						},
						{
							"id": 389,
							"name": "remove_categories",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Remove all of the categories specified here"
									}
								]
							},
							"sources": [
								{
									"fileName": "src/models/PatchProjectsBody.ts",
									"line": 20,
									"character": 4
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						},
						{
							"id": 395,
							"name": "remove_donation_urls",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Remove all of the donation links specified here"
									}
								]
							},
							"sources": [
								{
									"fileName": "src/models/PatchProjectsBody.ts",
									"line": 44,
									"character": 4
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": 420,
									"name": "ProjectDonationURL",
									"package": "axrinth"
								}
							}
						},
						{
							"id": 397,
							"name": "source_url",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "An optional link to the source code of the projects"
									}
								]
							},
							"sources": [
								{
									"fileName": "src/models/PatchProjectsBody.ts",
									"line": 52,
									"character": 4
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "literal",
										"value": null
									}
								]
							}
						},
						{
							"id": 398,
							"name": "wiki_url",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "An optional link to the projects' wiki page or other relevant information"
									}
								]
							},
							"sources": [
								{
									"fileName": "src/models/PatchProjectsBody.ts",
									"line": 56,
									"character": 4
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "literal",
										"value": null
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								391,
								388,
								394,
								390,
								387,
								399,
								393,
								396,
								392,
								389,
								395,
								397,
								398
							]
						}
					],
					"sources": [
						{
							"fileName": "src/models/PatchProjectsBody.ts",
							"line": 8,
							"character": 32
						}
					]
				}
			}
		},
		{
			"id": 400,
			"name": "Project",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "src/models/Project.ts",
					"line": 12,
					"character": 12
				}
			],
			"type": {
				"type": "intersection",
				"types": [
					{
						"type": "reference",
						"target": 334,
						"name": "NonSearchProject",
						"package": "axrinth"
					},
					{
						"type": "reference",
						"target": 469,
						"name": "ServerRenderedProject",
						"package": "axrinth"
					},
					{
						"type": "reflection",
						"declaration": {
							"id": 401,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 408,
									"name": "approved",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The date the project's status was set to an approved status"
											}
										]
									},
									"sources": [
										{
											"fileName": "src/models/Project.ts",
											"line": 38,
											"character": 0
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "literal",
												"value": null
											}
										]
									}
								},
								{
									"id": 404,
									"name": "body_url",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The link to the long description of the project. Always null, only kept for legacy compatibility."
											}
										],
										"blockTags": [
											{
												"tag": "@deprecated",
												"content": []
											}
										]
									},
									"sources": [
										{
											"fileName": "src/models/Project.ts",
											"line": 25,
											"character": 0
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "literal",
												"value": null
											}
										]
									}
								},
								{
									"id": 410,
									"name": "followers",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The total number of users following the project"
											}
										]
									},
									"sources": [
										{
											"fileName": "src/models/Project.ts",
											"line": 46,
											"character": 0
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 415,
									"name": "gallery",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A list of images that have been uploaded to the project's gallery"
											}
										]
									},
									"sources": [
										{
											"fileName": "src/models/Project.ts",
											"line": 63,
											"character": 0
										}
									],
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 268,
											"name": "GalleryImage",
											"package": "axrinth"
										}
									}
								},
								{
									"id": 413,
									"name": "game_versions",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A list of all of the game versions supported by the project"
											}
										]
									},
									"sources": [
										{
											"fileName": "src/models/Project.ts",
											"line": 55,
											"character": 0
										}
									],
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								},
								{
									"id": 402,
									"name": "id",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The ID of the project, encoded as a base62 string"
											}
										]
									},
									"sources": [
										{
											"fileName": "src/models/Project.ts",
											"line": 16,
											"character": 0
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 411,
									"name": "license",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "src/models/Project.ts",
											"line": 47,
											"character": 0
										}
									],
									"type": {
										"type": "reference",
										"target": 426,
										"name": "ProjectLicense",
										"package": "axrinth"
									}
								},
								{
									"id": 414,
									"name": "loaders",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A list of all of the loaders supported by the project"
											}
										]
									},
									"sources": [
										{
											"fileName": "src/models/Project.ts",
											"line": 59,
											"character": 0
										}
									],
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								},
								{
									"id": 405,
									"name": "moderator_message",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "src/models/Project.ts",
											"line": 26,
											"character": 0
										}
									],
									"type": {
										"type": "reference",
										"target": 322,
										"name": "ModeratorMessage",
										"package": "axrinth"
									}
								},
								{
									"id": 406,
									"name": "published",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The date the project was published"
											}
										]
									},
									"sources": [
										{
											"fileName": "src/models/Project.ts",
											"line": 30,
											"character": 0
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 409,
									"name": "queued",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The date the project's status was submitted to moderators for review"
											}
										]
									},
									"sources": [
										{
											"fileName": "src/models/Project.ts",
											"line": 42,
											"character": 0
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "literal",
												"value": null
											}
										]
									}
								},
								{
									"id": 403,
									"name": "team",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The ID of the team that has ownership of this project"
											}
										]
									},
									"sources": [
										{
											"fileName": "src/models/Project.ts",
											"line": 20,
											"character": 0
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 407,
									"name": "updated",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The date the project was last updated"
											}
										]
									},
									"sources": [
										{
											"fileName": "src/models/Project.ts",
											"line": 34,
											"character": 0
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 412,
									"name": "versions",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A list of the version IDs of the project (will never be empty unless "
											},
											{
												"kind": "code",
												"text": "`draft`"
											},
											{
												"kind": "text",
												"text": " status)"
											}
										]
									},
									"sources": [
										{
											"fileName": "src/models/Project.ts",
											"line": 51,
											"character": 0
										}
									],
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										408,
										404,
										410,
										415,
										413,
										402,
										411,
										414,
										405,
										406,
										409,
										403,
										407,
										412
									]
								}
							],
							"sources": [
								{
									"fileName": "src/models/Project.ts",
									"line": 12,
									"character": 66
								}
							]
						}
					}
				]
			}
		},
		{
			"id": 416,
			"name": "ProjectDependencyList",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "src/models/ProjectDependencyList.ts",
					"line": 9,
					"character": 12
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 417,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 418,
							"name": "projects",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Projects that the project depends upon"
									}
								]
							},
							"sources": [
								{
									"fileName": "src/models/ProjectDependencyList.ts",
									"line": 13,
									"character": 4
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": 400,
									"name": "Project",
									"package": "axrinth"
								}
							}
						},
						{
							"id": 419,
							"name": "versions",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Versions that the project depends upon"
									}
								]
							},
							"sources": [
								{
									"fileName": "src/models/ProjectDependencyList.ts",
									"line": 17,
									"character": 4
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": 601,
									"name": "Version",
									"package": "axrinth"
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								418,
								419
							]
						}
					],
					"sources": [
						{
							"fileName": "src/models/ProjectDependencyList.ts",
							"line": 9,
							"character": 36
						}
					]
				}
			}
		},
		{
			"id": 420,
			"name": "ProjectDonationURL",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "src/models/ProjectDonationURL.ts",
					"line": 6,
					"character": 12
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 421,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 422,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The ID of the donation platform"
									}
								]
							},
							"sources": [
								{
									"fileName": "src/models/ProjectDonationURL.ts",
									"line": 10,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 423,
							"name": "platform",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The donation platform this link is to"
									}
								]
							},
							"sources": [
								{
									"fileName": "src/models/ProjectDonationURL.ts",
									"line": 14,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 424,
							"name": "url",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The URL of the donation platform and user"
									}
								]
							},
							"sources": [
								{
									"fileName": "src/models/ProjectDonationURL.ts",
									"line": 18,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								422,
								423,
								424
							]
						}
					],
					"sources": [
						{
							"fileName": "src/models/ProjectDonationURL.ts",
							"line": 6,
							"character": 33
						}
					]
				}
			}
		},
		{
			"id": 425,
			"name": "ProjectIdentifier",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The ID or slug of the project"
					}
				]
			},
			"sources": [
				{
					"fileName": "src/models/ProjectIdentifier.ts",
					"line": 9,
					"character": 12
				}
			],
			"type": {
				"type": "intrinsic",
				"name": "string"
			}
		},
		{
			"id": 426,
			"name": "ProjectLicense",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The license of the project"
					}
				]
			},
			"sources": [
				{
					"fileName": "src/models/ProjectLicense.ts",
					"line": 9,
					"character": 12
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 427,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 428,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The SPDX license ID of a project"
									}
								]
							},
							"sources": [
								{
									"fileName": "src/models/ProjectLicense.ts",
									"line": 13,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 429,
							"name": "name",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The long name of a license"
									}
								]
							},
							"sources": [
								{
									"fileName": "src/models/ProjectLicense.ts",
									"line": 17,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 430,
							"name": "url",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The URL to this license"
									}
								]
							},
							"sources": [
								{
									"fileName": "src/models/ProjectLicense.ts",
									"line": 21,
									"character": 4
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "literal",
										"value": null
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								428,
								429,
								430
							]
						}
					],
					"sources": [
						{
							"fileName": "src/models/ProjectLicense.ts",
							"line": 9,
							"character": 29
						}
					]
				}
			}
		},
		{
			"id": 431,
			"name": "ProjectResult",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "src/models/ProjectResult.ts",
					"line": 8,
					"character": 12
				}
			],
			"type": {
				"type": "intersection",
				"types": [
					{
						"type": "reference",
						"target": 469,
						"name": "ServerRenderedProject",
						"package": "axrinth"
					},
					{
						"type": "reflection",
						"declaration": {
							"id": 432,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 434,
									"name": "author",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The username of the project's author"
											}
										]
									},
									"sources": [
										{
											"fileName": "src/models/ProjectResult.ts",
											"line": 16,
											"character": 0
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 438,
									"name": "date_created",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The date the project was added to search"
											}
										]
									},
									"sources": [
										{
											"fileName": "src/models/ProjectResult.ts",
											"line": 32,
											"character": 0
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 439,
									"name": "date_modified",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The date the project was last modified"
											}
										]
									},
									"sources": [
										{
											"fileName": "src/models/ProjectResult.ts",
											"line": 36,
											"character": 0
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 435,
									"name": "display_categories",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A list of the categories that the project has which are not secondary"
											}
										]
									},
									"sources": [
										{
											"fileName": "src/models/ProjectResult.ts",
											"line": 20,
											"character": 0
										}
									],
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								},
								{
									"id": 443,
									"name": "featured_gallery",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The featured gallery image of the project"
											}
										]
									},
									"sources": [
										{
											"fileName": "src/models/ProjectResult.ts",
											"line": 52,
											"character": 0
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "literal",
												"value": null
											}
										]
									}
								},
								{
									"id": 437,
									"name": "follows",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The total number of users following the project"
											}
										]
									},
									"sources": [
										{
											"fileName": "src/models/ProjectResult.ts",
											"line": 28,
											"character": 0
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 442,
									"name": "gallery",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "All gallery images attached to the project"
											}
										]
									},
									"sources": [
										{
											"fileName": "src/models/ProjectResult.ts",
											"line": 48,
											"character": 0
										}
									],
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								},
								{
									"id": 440,
									"name": "latest_version",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The latest version of minecraft that this project supports"
											}
										]
									},
									"sources": [
										{
											"fileName": "src/models/ProjectResult.ts",
											"line": 40,
											"character": 0
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 441,
									"name": "license",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The SPDX license ID of a project"
											}
										]
									},
									"sources": [
										{
											"fileName": "src/models/ProjectResult.ts",
											"line": 44,
											"character": 0
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 433,
									"name": "project_id",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The ID of the project"
											}
										]
									},
									"sources": [
										{
											"fileName": "src/models/ProjectResult.ts",
											"line": 12,
											"character": 0
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 436,
									"name": "versions",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A list of the minecraft versions supported by the project"
											}
										]
									},
									"sources": [
										{
											"fileName": "src/models/ProjectResult.ts",
											"line": 24,
											"character": 0
										}
									],
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										434,
										438,
										439,
										435,
										443,
										437,
										442,
										440,
										441,
										433,
										436
									]
								}
							],
							"sources": [
								{
									"fileName": "src/models/ProjectResult.ts",
									"line": 8,
									"character": 53
								}
							]
						}
					}
				]
			}
		},
		{
			"id": 444,
			"name": "Report",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "src/models/Report.ts",
					"line": 8,
					"character": 12
				}
			],
			"type": {
				"type": "intersection",
				"types": [
					{
						"type": "reference",
						"target": 197,
						"name": "CreatableReport",
						"package": "axrinth"
					},
					{
						"type": "reflection",
						"declaration": {
							"id": 445,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 449,
									"name": "closed",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Whether the report is resolved"
											}
										]
									},
									"sources": [
										{
											"fileName": "src/models/Report.ts",
											"line": 24,
											"character": 0
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 448,
									"name": "created",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The time at which the report was created"
											}
										]
									},
									"sources": [
										{
											"fileName": "src/models/Report.ts",
											"line": 20,
											"character": 0
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 446,
									"name": "id",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The ID of the report"
											}
										]
									},
									"sources": [
										{
											"fileName": "src/models/Report.ts",
											"line": 12,
											"character": 0
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 447,
									"name": "reporter",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The ID of the user who reported the item"
											}
										]
									},
									"sources": [
										{
											"fileName": "src/models/Report.ts",
											"line": 16,
											"character": 0
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 450,
									"name": "thread_id",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The ID of the moderation thread associated with this report"
											}
										]
									},
									"sources": [
										{
											"fileName": "src/models/Report.ts",
											"line": 28,
											"character": 0
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										449,
										448,
										446,
										447,
										450
									]
								}
							],
							"sources": [
								{
									"fileName": "src/models/Report.ts",
									"line": 8,
									"character": 40
								}
							]
						}
					}
				]
			}
		},
		{
			"id": 451,
			"name": "ReportIdentifier",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The ID of the report"
					}
				]
			},
			"sources": [
				{
					"fileName": "src/models/ReportIdentifier.ts",
					"line": 9,
					"character": 12
				}
			],
			"type": {
				"type": "intrinsic",
				"name": "string"
			}
		},
		{
			"id": 452,
			"name": "Schedule",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "src/models/Schedule.ts",
					"line": 6,
					"character": 12
				},
				{
					"fileName": "src/models/Schedule.ts",
					"line": 14,
					"character": 17
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 453,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 455,
							"name": "requested_status",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The requested status when scheduling the project for release"
									}
								]
							},
							"sources": [
								{
									"fileName": "src/models/Schedule.ts",
									"line": 11,
									"character": 4
								}
							],
							"type": {
								"type": "reference",
								"target": 457,
								"name": "Schedule.requested_status",
								"package": "axrinth"
							}
						},
						{
							"id": 454,
							"name": "time",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "src/models/Schedule.ts",
									"line": 7,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								455,
								454
							]
						}
					],
					"sources": [
						{
							"fileName": "src/models/Schedule.ts",
							"line": 6,
							"character": 23
						}
					]
				}
			}
		},
		{
			"id": 463,
			"name": "SearchResults",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "src/models/SearchResults.ts",
					"line": 8,
					"character": 12
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 464,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 465,
							"name": "hits",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The list of results"
									}
								]
							},
							"sources": [
								{
									"fileName": "src/models/SearchResults.ts",
									"line": 12,
									"character": 4
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": 431,
									"name": "ProjectResult",
									"package": "axrinth"
								}
							}
						},
						{
							"id": 467,
							"name": "limit",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The number of results that were returned by the query"
									}
								]
							},
							"sources": [
								{
									"fileName": "src/models/SearchResults.ts",
									"line": 20,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 466,
							"name": "offset",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The number of results that were skipped by the query"
									}
								]
							},
							"sources": [
								{
									"fileName": "src/models/SearchResults.ts",
									"line": 16,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 468,
							"name": "total_hits",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The total number of results that match the query"
									}
								]
							},
							"sources": [
								{
									"fileName": "src/models/SearchResults.ts",
									"line": 24,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								465,
								467,
								466,
								468
							]
						}
					],
					"sources": [
						{
							"fileName": "src/models/SearchResults.ts",
							"line": 8,
							"character": 28
						}
					]
				}
			}
		},
		{
			"id": 469,
			"name": "ServerRenderedProject",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "src/models/ServerRenderedProject.ts",
					"line": 8,
					"character": 12
				},
				{
					"fileName": "src/models/ServerRenderedProject.ts",
					"line": 32,
					"character": 17
				}
			],
			"type": {
				"type": "intersection",
				"types": [
					{
						"type": "reference",
						"target": 128,
						"name": "BaseProject",
						"package": "axrinth"
					},
					{
						"type": "reflection",
						"declaration": {
							"id": 470,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 474,
									"name": "color",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The RGB color of the project, automatically generated from the project icon"
											}
										]
									},
									"sources": [
										{
											"fileName": "src/models/ServerRenderedProject.ts",
											"line": 24,
											"character": 0
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "number"
											},
											{
												"type": "literal",
												"value": null
											}
										]
									}
								},
								{
									"id": 472,
									"name": "downloads",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The total number of downloads of the project"
											}
										]
									},
									"sources": [
										{
											"fileName": "src/models/ServerRenderedProject.ts",
											"line": 16,
											"character": 0
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 473,
									"name": "icon_url",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The URL of the project's icon"
											}
										]
									},
									"sources": [
										{
											"fileName": "src/models/ServerRenderedProject.ts",
											"line": 20,
											"character": 0
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "literal",
												"value": null
											}
										]
									}
								},
								{
									"id": 476,
									"name": "monetization_status",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "src/models/ServerRenderedProject.ts",
											"line": 29,
											"character": 0
										}
									],
									"type": {
										"type": "reference",
										"target": 483,
										"name": "ServerRenderedProject.monetization_status",
										"package": "axrinth"
									}
								},
								{
									"id": 471,
									"name": "project_type",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The project type of the project"
											}
										]
									},
									"sources": [
										{
											"fileName": "src/models/ServerRenderedProject.ts",
											"line": 12,
											"character": 0
										}
									],
									"type": {
										"type": "reference",
										"target": 478,
										"name": "ServerRenderedProject.project_type",
										"package": "axrinth"
									}
								},
								{
									"id": 475,
									"name": "thread_id",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The ID of the moderation thread associated with this project"
											}
										]
									},
									"sources": [
										{
											"fileName": "src/models/ServerRenderedProject.ts",
											"line": 28,
											"character": 0
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										474,
										472,
										473,
										476,
										471,
										475
									]
								}
							],
							"sources": [
								{
									"fileName": "src/models/ServerRenderedProject.ts",
									"line": 8,
									"character": 51
								}
							]
						}
					}
				]
			}
		},
		{
			"id": 487,
			"name": "Statistics",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "src/models/Statistics.ts",
					"line": 6,
					"character": 12
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 488,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 492,
							"name": "authors",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Number of authors (users with projects) on Modrinth"
									}
								]
							},
							"sources": [
								{
									"fileName": "src/models/Statistics.ts",
									"line": 22,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 491,
							"name": "files",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Number of version files on Modrinth"
									}
								]
							},
							"sources": [
								{
									"fileName": "src/models/Statistics.ts",
									"line": 18,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 489,
							"name": "projects",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Number of projects on Modrinth"
									}
								]
							},
							"sources": [
								{
									"fileName": "src/models/Statistics.ts",
									"line": 10,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 490,
							"name": "versions",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Number of projects on Modrinth"
									}
								]
							},
							"sources": [
								{
									"fileName": "src/models/Statistics.ts",
									"line": 14,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								492,
								491,
								489,
								490
							]
						}
					],
					"sources": [
						{
							"fileName": "src/models/Statistics.ts",
							"line": 6,
							"character": 25
						}
					]
				}
			}
		},
		{
			"id": 493,
			"name": "TeamIdentifier",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The ID of the team"
					}
				]
			},
			"sources": [
				{
					"fileName": "src/models/TeamIdentifier.ts",
					"line": 9,
					"character": 12
				}
			],
			"type": {
				"type": "intrinsic",
				"name": "string"
			}
		},
		{
			"id": 494,
			"name": "TeamMember",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "src/models/TeamMember.ts",
					"line": 8,
					"character": 12
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 495,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 500,
							"name": "accepted",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Whether or not the user has accepted to be on the team (requires authorization to view)"
									}
								]
							},
							"sources": [
								{
									"fileName": "src/models/TeamMember.ts",
									"line": 38,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 502,
							"name": "ordering",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The order of the team member."
									}
								]
							},
							"sources": [
								{
									"fileName": "src/models/TeamMember.ts",
									"line": 46,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 501,
							"name": "payouts_split",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The split of payouts going to this user. The proportion of payouts they get is their split divided by the sum of the splits of all members."
									}
								]
							},
							"sources": [
								{
									"fileName": "src/models/TeamMember.ts",
									"line": 42,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 499,
							"name": "permissions",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The user's permissions in bitfield format (requires authorization to view)\r\n\r\nIn order from first to tenth bit, the bits are:\r\n- UPLOAD_VERSION\r\n- DELETE_VERSION\r\n- EDIT_DETAILS\r\n- EDIT_BODY\r\n- MANAGE_INVITES\r\n- REMOVE_MEMBER\r\n- EDIT_MEMBER\r\n- DELETE_PROJECT\r\n- VIEW_ANALYTICS\r\n- VIEW_PAYOUTS"
									}
								]
							},
							"sources": [
								{
									"fileName": "src/models/TeamMember.ts",
									"line": 34,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 498,
							"name": "role",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The user's role on the team"
									}
								]
							},
							"sources": [
								{
									"fileName": "src/models/TeamMember.ts",
									"line": 17,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 496,
							"name": "team_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The ID of the team this team member is a member of"
									}
								]
							},
							"sources": [
								{
									"fileName": "src/models/TeamMember.ts",
									"line": 12,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 497,
							"name": "user",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "src/models/TeamMember.ts",
									"line": 13,
									"character": 4
								}
							],
							"type": {
								"type": "reference",
								"target": 559,
								"name": "User",
								"package": "axrinth"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								500,
								502,
								501,
								499,
								498,
								496,
								497
							]
						}
					],
					"sources": [
						{
							"fileName": "src/models/TeamMember.ts",
							"line": 8,
							"character": 25
						}
					]
				}
			}
		},
		{
			"id": 503,
			"name": "Thread",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "src/models/Thread.ts",
					"line": 9,
					"character": 12
				},
				{
					"fileName": "src/models/Thread.ts",
					"line": 27,
					"character": 17
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 504,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 505,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The ID of the thread"
									}
								]
							},
							"sources": [
								{
									"fileName": "src/models/Thread.ts",
									"line": 13,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 510,
							"name": "members",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "src/models/Thread.ts",
									"line": 24,
									"character": 4
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": 559,
									"name": "User",
									"package": "axrinth"
								}
							}
						},
						{
							"id": 509,
							"name": "messages",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "src/models/Thread.ts",
									"line": 23,
									"character": 4
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": 517,
									"name": "ThreadMessage",
									"package": "axrinth"
								}
							}
						},
						{
							"id": 507,
							"name": "project_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The ID of the associated project if a project thread"
									}
								]
							},
							"sources": [
								{
									"fileName": "src/models/Thread.ts",
									"line": 18,
									"character": 4
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "literal",
										"value": null
									}
								]
							}
						},
						{
							"id": 508,
							"name": "report_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The ID of the associated report if a report thread"
									}
								]
							},
							"sources": [
								{
									"fileName": "src/models/Thread.ts",
									"line": 22,
									"character": 4
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "literal",
										"value": null
									}
								]
							}
						},
						{
							"id": 506,
							"name": "type",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "src/models/Thread.ts",
									"line": 14,
									"character": 4
								}
							],
							"type": {
								"type": "reference",
								"target": 512,
								"name": "Thread.type",
								"package": "axrinth"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								505,
								510,
								509,
								507,
								508,
								506
							]
						}
					],
					"sources": [
						{
							"fileName": "src/models/Thread.ts",
							"line": 9,
							"character": 21
						}
					]
				}
			}
		},
		{
			"id": 516,
			"name": "ThreadIdentifier",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The ID of the thread"
					}
				]
			},
			"sources": [
				{
					"fileName": "src/models/ThreadIdentifier.ts",
					"line": 9,
					"character": 12
				}
			],
			"type": {
				"type": "intrinsic",
				"name": "string"
			}
		},
		{
			"id": 517,
			"name": "ThreadMessage",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "src/models/ThreadMessage.ts",
					"line": 8,
					"character": 12
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 518,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 520,
							"name": "author_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The ID of the author"
									}
								]
							},
							"sources": [
								{
									"fileName": "src/models/ThreadMessage.ts",
									"line": 16,
									"character": 4
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "literal",
										"value": null
									}
								]
							}
						},
						{
							"id": 521,
							"name": "body",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "src/models/ThreadMessage.ts",
									"line": 17,
									"character": 4
								}
							],
							"type": {
								"type": "reference",
								"target": 523,
								"name": "ThreadMessageBody",
								"package": "axrinth"
							}
						},
						{
							"id": 522,
							"name": "created",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The time at which the message was created"
									}
								]
							},
							"sources": [
								{
									"fileName": "src/models/ThreadMessage.ts",
									"line": 21,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 519,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The ID of the message itself"
									}
								]
							},
							"sources": [
								{
									"fileName": "src/models/ThreadMessage.ts",
									"line": 12,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								520,
								521,
								522,
								519
							]
						}
					],
					"sources": [
						{
							"fileName": "src/models/ThreadMessage.ts",
							"line": 8,
							"character": 28
						}
					]
				}
			}
		},
		{
			"id": 523,
			"name": "ThreadMessageBody",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The contents of the message. **Fields will vary depending on message type.**"
					}
				]
			},
			"sources": [
				{
					"fileName": "src/models/ThreadMessageBody.ts",
					"line": 9,
					"character": 12
				},
				{
					"fileName": "src/models/ThreadMessageBody.ts",
					"line": 36,
					"character": 17
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 524,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 526,
							"name": "body",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The actual message text. **Only present for "
									},
									{
										"kind": "code",
										"text": "`text`"
									},
									{
										"kind": "text",
										"text": " message type**"
									}
								]
							},
							"sources": [
								{
									"fileName": "src/models/ThreadMessageBody.ts",
									"line": 17,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 530,
							"name": "new_status",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The new status of the project. **Only present for "
									},
									{
										"kind": "code",
										"text": "`status_change`"
									},
									{
										"kind": "text",
										"text": " message type**"
									}
								]
							},
							"sources": [
								{
									"fileName": "src/models/ThreadMessageBody.ts",
									"line": 33,
									"character": 4
								}
							],
							"type": {
								"type": "reference",
								"target": 548,
								"name": "ThreadMessageBody.new_status",
								"package": "axrinth"
							}
						},
						{
							"id": 529,
							"name": "old_status",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The old status of the project. **Only present for "
									},
									{
										"kind": "code",
										"text": "`status_change`"
									},
									{
										"kind": "text",
										"text": " message type**"
									}
								]
							},
							"sources": [
								{
									"fileName": "src/models/ThreadMessageBody.ts",
									"line": 29,
									"character": 4
								}
							],
							"type": {
								"type": "reference",
								"target": 537,
								"name": "ThreadMessageBody.old_status",
								"package": "axrinth"
							}
						},
						{
							"id": 527,
							"name": "private",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Whether the message is only visible to moderators. **Only present for "
									},
									{
										"kind": "code",
										"text": "`text`"
									},
									{
										"kind": "text",
										"text": " message type**"
									}
								]
							},
							"sources": [
								{
									"fileName": "src/models/ThreadMessageBody.ts",
									"line": 21,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 528,
							"name": "replying_to",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The ID of the message being replied to by this message. **Only present for "
									},
									{
										"kind": "code",
										"text": "`text`"
									},
									{
										"kind": "text",
										"text": " message type**"
									}
								]
							},
							"sources": [
								{
									"fileName": "src/models/ThreadMessageBody.ts",
									"line": 25,
									"character": 4
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "literal",
										"value": null
									}
								]
							}
						},
						{
							"id": 525,
							"name": "type",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The type of message"
									}
								]
							},
							"sources": [
								{
									"fileName": "src/models/ThreadMessageBody.ts",
									"line": 13,
									"character": 4
								}
							],
							"type": {
								"type": "reference",
								"target": 532,
								"name": "ThreadMessageBody.type",
								"package": "axrinth"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								526,
								530,
								529,
								527,
								528,
								525
							]
						}
					],
					"sources": [
						{
							"fileName": "src/models/ThreadMessageBody.ts",
							"line": 9,
							"character": 32
						}
					]
				}
			}
		},
		{
			"id": 559,
			"name": "User",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "src/models/User.ts",
					"line": 8,
					"character": 12
				},
				{
					"fileName": "src/models/User.ts",
					"line": 62,
					"character": 17
				}
			],
			"type": {
				"type": "intersection",
				"types": [
					{
						"type": "reference",
						"target": 248,
						"name": "EditableUser",
						"package": "axrinth"
					},
					{
						"type": "reflection",
						"declaration": {
							"id": 560,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 566,
									"name": "auth_providers",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A list of authentication providers you have signed up for (only displayed if requesting your own account)"
											}
										]
									},
									"sources": [
										{
											"fileName": "src/models/User.ts",
											"line": 42,
											"character": 0
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											},
											{
												"type": "literal",
												"value": null
											}
										]
									}
								},
								{
									"id": 562,
									"name": "avatar_url",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The user's avatar url"
											}
										]
									},
									"sources": [
										{
											"fileName": "src/models/User.ts",
											"line": 16,
											"character": 0
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 565,
									"name": "badges",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Any badges applicable to this user. These are currently unused and undisplayed, and as such are subject to change\r\n\r\nIn order from first to seventh bit, the current bits are:\r\n- (unused)\r\n- EARLY_MODPACK_ADOPTER\r\n- EARLY_RESPACK_ADOPTER\r\n- EARLY_PLUGIN_ADOPTER\r\n- ALPHA_TESTER\r\n- CONTRIBUTOR\r\n- TRANSLATOR"
											}
										]
									},
									"sources": [
										{
											"fileName": "src/models/User.ts",
											"line": 38,
											"character": 0
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 563,
									"name": "created",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The time at which the user was created"
											}
										]
									},
									"sources": [
										{
											"fileName": "src/models/User.ts",
											"line": 20,
											"character": 0
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 567,
									"name": "email_verified",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Whether your email is verified (only displayed if requesting your own account)"
											}
										]
									},
									"sources": [
										{
											"fileName": "src/models/User.ts",
											"line": 46,
											"character": 0
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "boolean"
											},
											{
												"type": "literal",
												"value": null
											}
										]
									}
								},
								{
									"id": 570,
									"name": "github_id",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Deprecated - this is no longer public for security reasons and is always null"
											}
										],
										"blockTags": [
											{
												"tag": "@deprecated",
												"content": []
											}
										]
									},
									"sources": [
										{
											"fileName": "src/models/User.ts",
											"line": 59,
											"character": 0
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "number"
											},
											{
												"type": "literal",
												"value": null
											}
										]
									}
								},
								{
									"id": 568,
									"name": "has_password",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Whether you have a password associated with your account (only displayed if requesting your own account)"
											}
										]
									},
									"sources": [
										{
											"fileName": "src/models/User.ts",
											"line": 50,
											"character": 0
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "boolean"
											},
											{
												"type": "literal",
												"value": null
											}
										]
									}
								},
								{
									"id": 569,
									"name": "has_totp",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Whether you have TOTP two-factor authentication connected to your account (only displayed if requesting your own account)"
											}
										]
									},
									"sources": [
										{
											"fileName": "src/models/User.ts",
											"line": 54,
											"character": 0
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "boolean"
											},
											{
												"type": "literal",
												"value": null
											}
										]
									}
								},
								{
									"id": 561,
									"name": "id",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The user's ID"
											}
										]
									},
									"sources": [
										{
											"fileName": "src/models/User.ts",
											"line": 12,
											"character": 0
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 564,
									"name": "role",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The user's role"
											}
										]
									},
									"sources": [
										{
											"fileName": "src/models/User.ts",
											"line": 24,
											"character": 0
										}
									],
									"type": {
										"type": "reference",
										"target": 572,
										"name": "User.role",
										"package": "axrinth"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										566,
										562,
										565,
										563,
										567,
										570,
										568,
										569,
										561,
										564
									]
								}
							],
							"sources": [
								{
									"fileName": "src/models/User.ts",
									"line": 8,
									"character": 35
								}
							]
						}
					}
				]
			}
		},
		{
			"id": 576,
			"name": "UserIdentifier",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The ID or username of the user"
					}
				]
			},
			"sources": [
				{
					"fileName": "src/models/UserIdentifier.ts",
					"line": 9,
					"character": 12
				}
			],
			"type": {
				"type": "intrinsic",
				"name": "string"
			}
		},
		{
			"id": 577,
			"name": "UserPayoutData",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Various data relating to the user's payouts status (you can only see your own)"
					}
				]
			},
			"sources": [
				{
					"fileName": "src/models/UserPayoutData.ts",
					"line": 9,
					"character": 12
				},
				{
					"fileName": "src/models/UserPayoutData.ts",
					"line": 28,
					"character": 17
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 578,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 579,
							"name": "balance",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The payout balance available for the user to withdraw (note, you cannot modify this in a PATCH request)"
									}
								]
							},
							"sources": [
								{
									"fileName": "src/models/UserPayoutData.ts",
									"line": 13,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 582,
							"name": "payout_address",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The user's payout address"
									}
								]
							},
							"sources": [
								{
									"fileName": "src/models/UserPayoutData.ts",
									"line": 25,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 580,
							"name": "payout_wallet",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The wallet that the user has selected"
									}
								]
							},
							"sources": [
								{
									"fileName": "src/models/UserPayoutData.ts",
									"line": 17,
									"character": 4
								}
							],
							"type": {
								"type": "reference",
								"target": 584,
								"name": "UserPayoutData.payout_wallet",
								"package": "axrinth"
							}
						},
						{
							"id": 581,
							"name": "payout_wallet_type",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The type of the user's wallet"
									}
								]
							},
							"sources": [
								{
									"fileName": "src/models/UserPayoutData.ts",
									"line": 21,
									"character": 4
								}
							],
							"type": {
								"type": "reference",
								"target": 587,
								"name": "UserPayoutData.payout_wallet_type",
								"package": "axrinth"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								579,
								582,
								580,
								581
							]
						}
					],
					"sources": [
						{
							"fileName": "src/models/UserPayoutData.ts",
							"line": 9,
							"character": 29
						}
					]
				}
			}
		},
		{
			"id": 591,
			"name": "UserPayoutHistory",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "src/models/UserPayoutHistory.ts",
					"line": 8,
					"character": 12
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 592,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 593,
							"name": "all_time",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The all-time balance accrued by this user in USD"
									}
								]
							},
							"sources": [
								{
									"fileName": "src/models/UserPayoutHistory.ts",
									"line": 12,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 594,
							"name": "last_month",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The amount in USD made by the user in the previous 30 days"
									}
								]
							},
							"sources": [
								{
									"fileName": "src/models/UserPayoutHistory.ts",
									"line": 16,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 595,
							"name": "payouts",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "A history of all of the user's past transactions"
									}
								]
							},
							"sources": [
								{
									"fileName": "src/models/UserPayoutHistory.ts",
									"line": 20,
									"character": 4
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": 596,
									"name": "UserPayoutHistoryEntry",
									"package": "axrinth"
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								593,
								594,
								595
							]
						}
					],
					"sources": [
						{
							"fileName": "src/models/UserPayoutHistory.ts",
							"line": 8,
							"character": 32
						}
					]
				}
			}
		},
		{
			"id": 596,
			"name": "UserPayoutHistoryEntry",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "src/models/UserPayoutHistoryEntry.ts",
					"line": 6,
					"character": 12
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 597,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 599,
							"name": "amount",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The amount of this transaction in USD"
									}
								]
							},
							"sources": [
								{
									"fileName": "src/models/UserPayoutHistoryEntry.ts",
									"line": 14,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 598,
							"name": "created",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The date of this transaction"
									}
								]
							},
							"sources": [
								{
									"fileName": "src/models/UserPayoutHistoryEntry.ts",
									"line": 10,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 600,
							"name": "status",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The status of this transaction"
									}
								]
							},
							"sources": [
								{
									"fileName": "src/models/UserPayoutHistoryEntry.ts",
									"line": 18,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								599,
								598,
								600
							]
						}
					],
					"sources": [
						{
							"fileName": "src/models/UserPayoutHistoryEntry.ts",
							"line": 6,
							"character": 37
						}
					]
				}
			}
		},
		{
			"id": 601,
			"name": "Version",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "src/models/Version.ts",
					"line": 9,
					"character": 12
				}
			],
			"type": {
				"type": "intersection",
				"types": [
					{
						"type": "reference",
						"target": 145,
						"name": "BaseVersion",
						"package": "axrinth"
					},
					{
						"type": "reflection",
						"declaration": {
							"id": 602,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 605,
									"name": "author_id",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The ID of the author who published this version"
											}
										]
									},
									"sources": [
										{
											"fileName": "src/models/Version.ts",
											"line": 21,
											"character": 0
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 608,
									"name": "changelog_url",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A link to the changelog for this version. Always null, only kept for legacy compatibility."
											}
										],
										"blockTags": [
											{
												"tag": "@deprecated",
												"content": []
											}
										]
									},
									"sources": [
										{
											"fileName": "src/models/Version.ts",
											"line": 31,
											"character": 0
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "literal",
												"value": null
											}
										]
									}
								},
								{
									"id": 606,
									"name": "date_published",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"sources": [
										{
											"fileName": "src/models/Version.ts",
											"line": 22,
											"character": 0
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 607,
									"name": "downloads",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The number of times this version has been downloaded"
											}
										]
									},
									"sources": [
										{
											"fileName": "src/models/Version.ts",
											"line": 26,
											"character": 0
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 609,
									"name": "files",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A list of files available for download for this version"
											}
										]
									},
									"sources": [
										{
											"fileName": "src/models/Version.ts",
											"line": 35,
											"character": 0
										}
									],
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 622,
											"name": "VersionFile",
											"package": "axrinth"
										}
									}
								},
								{
									"id": 603,
									"name": "id",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The ID of the version, encoded as a base62 string"
											}
										]
									},
									"sources": [
										{
											"fileName": "src/models/Version.ts",
											"line": 13,
											"character": 0
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 604,
									"name": "project_id",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The ID of the project this version is for"
											}
										]
									},
									"sources": [
										{
											"fileName": "src/models/Version.ts",
											"line": 17,
											"character": 0
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										605,
										608,
										606,
										607,
										609,
										603,
										604
									]
								}
							],
							"sources": [
								{
									"fileName": "src/models/Version.ts",
									"line": 9,
									"character": 37
								}
							]
						}
					}
				]
			}
		},
		{
			"id": 610,
			"name": "VersionDependency",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "src/models/VersionDependency.ts",
					"line": 6,
					"character": 12
				},
				{
					"fileName": "src/models/VersionDependency.ts",
					"line": 25,
					"character": 17
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 611,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 615,
							"name": "dependency_type",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The type of dependency that this version has"
									}
								]
							},
							"sources": [
								{
									"fileName": "src/models/VersionDependency.ts",
									"line": 22,
									"character": 4
								}
							],
							"type": {
								"type": "reference",
								"target": 617,
								"name": "VersionDependency.dependency_type",
								"package": "axrinth"
							}
						},
						{
							"id": 614,
							"name": "file_name",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The file name of the dependency, mostly used for showing external dependencies on modpacks"
									}
								]
							},
							"sources": [
								{
									"fileName": "src/models/VersionDependency.ts",
									"line": 18,
									"character": 4
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "literal",
										"value": null
									}
								]
							}
						},
						{
							"id": 613,
							"name": "project_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The ID of the project that this version depends on"
									}
								]
							},
							"sources": [
								{
									"fileName": "src/models/VersionDependency.ts",
									"line": 14,
									"character": 4
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "literal",
										"value": null
									}
								]
							}
						},
						{
							"id": 612,
							"name": "version_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The ID of the version that this version depends on"
									}
								]
							},
							"sources": [
								{
									"fileName": "src/models/VersionDependency.ts",
									"line": 10,
									"character": 4
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "literal",
										"value": null
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								615,
								614,
								613,
								612
							]
						}
					],
					"sources": [
						{
							"fileName": "src/models/VersionDependency.ts",
							"line": 6,
							"character": 32
						}
					]
				}
			}
		},
		{
			"id": 622,
			"name": "VersionFile",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "src/models/VersionFile.ts",
					"line": 8,
					"character": 12
				},
				{
					"fileName": "src/models/VersionFile.ts",
					"line": 32,
					"character": 17
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 623,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 629,
							"name": "file_type",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The type of the additional file, used mainly for adding resource packs to datapacks"
									}
								]
							},
							"sources": [
								{
									"fileName": "src/models/VersionFile.ts",
									"line": 29,
									"character": 4
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"target": 631,
										"name": "VersionFile.file_type",
										"package": "axrinth"
									},
									{
										"type": "literal",
										"value": null
									}
								]
							}
						},
						{
							"id": 626,
							"name": "filename",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The name of the file"
									}
								]
							},
							"sources": [
								{
									"fileName": "src/models/VersionFile.ts",
									"line": 17,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 624,
							"name": "hashes",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "src/models/VersionFile.ts",
									"line": 9,
									"character": 4
								}
							],
							"type": {
								"type": "reference",
								"target": 634,
								"name": "VersionFileHashes",
								"package": "axrinth"
							}
						},
						{
							"id": 627,
							"name": "primary",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Whether this file is the primary one for its version. Only a maximum of one file per version will have this set to true. If there are not any primary files, it can be inferred that the first file is the primary one."
									}
								]
							},
							"sources": [
								{
									"fileName": "src/models/VersionFile.ts",
									"line": 21,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 628,
							"name": "size",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The size of the file in bytes"
									}
								]
							},
							"sources": [
								{
									"fileName": "src/models/VersionFile.ts",
									"line": 25,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 625,
							"name": "url",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "A direct link to the file"
									}
								]
							},
							"sources": [
								{
									"fileName": "src/models/VersionFile.ts",
									"line": 13,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								629,
								626,
								624,
								627,
								628,
								625
							]
						}
					],
					"sources": [
						{
							"fileName": "src/models/VersionFile.ts",
							"line": 8,
							"character": 26
						}
					]
				}
			}
		},
		{
			"id": 634,
			"name": "VersionFileHashes",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "A map of hashes of the file. The key is the hashing algorithm and the value is the string version of the hash."
					}
				]
			},
			"sources": [
				{
					"fileName": "src/models/VersionFileHashes.ts",
					"line": 9,
					"character": 12
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 635,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 637,
							"name": "sha1",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "src/models/VersionFileHashes.ts",
									"line": 11,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 636,
							"name": "sha512",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "src/models/VersionFileHashes.ts",
									"line": 10,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								637,
								636
							]
						}
					],
					"sources": [
						{
							"fileName": "src/models/VersionFileHashes.ts",
							"line": 9,
							"character": 32
						}
					]
				}
			}
		},
		{
			"id": 638,
			"name": "VersionIdentifier",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The ID of the version"
					}
				]
			},
			"sources": [
				{
					"fileName": "src/models/VersionIdentifier.ts",
					"line": 9,
					"character": 12
				}
			],
			"type": {
				"type": "intrinsic",
				"name": "string"
			}
		},
		{
			"id": 106,
			"name": "OpenAPI",
			"variant": "declaration",
			"kind": 32,
			"flags": {
				"isConst": true
			},
			"sources": [
				{
					"fileName": "src/core/OpenAPI.ts",
					"line": 22,
					"character": 13
				}
			],
			"type": {
				"type": "reference",
				"target": 107,
				"name": "OpenAPIConfig",
				"package": "axrinth"
			},
			"defaultValue": "..."
		}
	],
	"groups": [
		{
			"title": "Namespaces",
			"children": [
				136,
				157,
				186,
				203,
				217,
				240,
				282,
				300,
				345,
				374,
				456,
				477,
				511,
				531,
				571,
				583,
				616,
				630
			]
		},
		{
			"title": "Enumerations",
			"children": [
				121
			]
		},
		{
			"title": "Classes",
			"children": [
				1,
				87,
				25,
				639,
				647,
				671,
				749,
				771,
				803,
				838,
				870,
				894
			]
		},
		{
			"title": "Type Aliases",
			"children": [
				124,
				128,
				145,
				174,
				180,
				190,
				197,
				208,
				213,
				228,
				231,
				235,
				244,
				248,
				255,
				259,
				260,
				264,
				268,
				276,
				288,
				292,
				296,
				304,
				305,
				309,
				313,
				317,
				322,
				326,
				330,
				332,
				333,
				334,
				363,
				380,
				384,
				107,
				385,
				400,
				416,
				420,
				425,
				426,
				431,
				444,
				451,
				452,
				463,
				469,
				487,
				493,
				494,
				503,
				516,
				517,
				523,
				559,
				576,
				577,
				591,
				596,
				601,
				610,
				622,
				634,
				638
			]
		},
		{
			"title": "Variables",
			"children": [
				106
			]
		}
	],
	"packageName": "axrinth",
	"symbolIdMap": {
		"0": {
			"sourceFileName": "src/index.ts",
			"qualifiedName": ""
		},
		"1": {
			"sourceFileName": "src/core/ApiError.ts",
			"qualifiedName": "ApiError"
		},
		"2": {
			"sourceFileName": "node_modules/@types/node/globals.d.ts",
			"qualifiedName": "__global.ErrorConstructor.captureStackTrace"
		},
		"3": {
			"sourceFileName": "node_modules/@types/node/globals.d.ts",
			"qualifiedName": "__global.ErrorConstructor.captureStackTrace"
		},
		"4": {
			"sourceFileName": "node_modules/@types/node/globals.d.ts",
			"qualifiedName": "targetObject"
		},
		"5": {
			"sourceFileName": "node_modules/@types/node/globals.d.ts",
			"qualifiedName": "constructorOpt"
		},
		"6": {
			"sourceFileName": "node_modules/@types/node/globals.d.ts",
			"qualifiedName": "__global.ErrorConstructor.prepareStackTrace"
		},
		"7": {
			"sourceFileName": "node_modules/@types/node/globals.d.ts",
			"qualifiedName": "__type"
		},
		"8": {
			"sourceFileName": "node_modules/@types/node/globals.d.ts",
			"qualifiedName": "__type"
		},
		"9": {
			"sourceFileName": "node_modules/@types/node/globals.d.ts",
			"qualifiedName": "err"
		},
		"10": {
			"sourceFileName": "node_modules/@types/node/globals.d.ts",
			"qualifiedName": "stackTraces"
		},
		"11": {
			"sourceFileName": "node_modules/@types/node/globals.d.ts",
			"qualifiedName": "__global.ErrorConstructor.stackTraceLimit"
		},
		"12": {
			"sourceFileName": "src/core/ApiError.ts",
			"qualifiedName": "ApiError.__constructor"
		},
		"13": {
			"sourceFileName": "src/core/ApiError.ts",
			"qualifiedName": "ApiError"
		},
		"14": {
			"sourceFileName": "src/core/ApiError.ts",
			"qualifiedName": "request"
		},
		"15": {
			"sourceFileName": "src/core/ApiError.ts",
			"qualifiedName": "response"
		},
		"16": {
			"sourceFileName": "src/core/ApiError.ts",
			"qualifiedName": "message"
		},
		"17": {
			"sourceFileName": "src/core/ApiError.ts",
			"qualifiedName": "ApiError.url"
		},
		"18": {
			"sourceFileName": "src/core/ApiError.ts",
			"qualifiedName": "ApiError.status"
		},
		"19": {
			"sourceFileName": "src/core/ApiError.ts",
			"qualifiedName": "ApiError.statusText"
		},
		"20": {
			"sourceFileName": "src/core/ApiError.ts",
			"qualifiedName": "ApiError.body"
		},
		"21": {
			"sourceFileName": "src/core/ApiError.ts",
			"qualifiedName": "ApiError.request"
		},
		"22": {
			"sourceFileName": "node_modules/typescript/lib/lib.es5.d.ts",
			"qualifiedName": "Error.name"
		},
		"23": {
			"sourceFileName": "node_modules/typescript/lib/lib.es5.d.ts",
			"qualifiedName": "Error.message"
		},
		"24": {
			"sourceFileName": "node_modules/typescript/lib/lib.es5.d.ts",
			"qualifiedName": "Error.stack"
		},
		"25": {
			"sourceFileName": "src/core/CancelablePromise.ts",
			"qualifiedName": "CancelablePromise"
		},
		"26": {
			"sourceFileName": "src/core/CancelablePromise.ts",
			"qualifiedName": "CancelablePromise.__constructor"
		},
		"27": {
			"sourceFileName": "src/core/CancelablePromise.ts",
			"qualifiedName": "CancelablePromise"
		},
		"28": {
			"sourceFileName": "src/core/CancelablePromise.ts",
			"qualifiedName": "CancelablePromise.T"
		},
		"29": {
			"sourceFileName": "src/core/CancelablePromise.ts",
			"qualifiedName": "executor"
		},
		"30": {
			"sourceFileName": "src/core/CancelablePromise.ts",
			"qualifiedName": "__type"
		},
		"31": {
			"sourceFileName": "src/core/CancelablePromise.ts",
			"qualifiedName": "__type"
		},
		"32": {
			"sourceFileName": "src/core/CancelablePromise.ts",
			"qualifiedName": "resolve"
		},
		"33": {
			"sourceFileName": "src/core/CancelablePromise.ts",
			"qualifiedName": "__type"
		},
		"34": {
			"sourceFileName": "src/core/CancelablePromise.ts",
			"qualifiedName": "__type"
		},
		"35": {
			"sourceFileName": "src/core/CancelablePromise.ts",
			"qualifiedName": "value"
		},
		"36": {
			"sourceFileName": "src/core/CancelablePromise.ts",
			"qualifiedName": "reject"
		},
		"37": {
			"sourceFileName": "src/core/CancelablePromise.ts",
			"qualifiedName": "__type"
		},
		"38": {
			"sourceFileName": "src/core/CancelablePromise.ts",
			"qualifiedName": "__type"
		},
		"39": {
			"sourceFileName": "src/core/CancelablePromise.ts",
			"qualifiedName": "reason"
		},
		"40": {
			"sourceFileName": "src/core/CancelablePromise.ts",
			"qualifiedName": "onCancel"
		},
		"41": {
			"sourceFileName": "src/core/CancelablePromise.ts",
			"qualifiedName": "CancelablePromise.#isResolved"
		},
		"42": {
			"sourceFileName": "src/core/CancelablePromise.ts",
			"qualifiedName": "CancelablePromise.#isRejected"
		},
		"43": {
			"sourceFileName": "src/core/CancelablePromise.ts",
			"qualifiedName": "CancelablePromise.#isCancelled"
		},
		"44": {
			"sourceFileName": "src/core/CancelablePromise.ts",
			"qualifiedName": "CancelablePromise.#cancelHandlers"
		},
		"45": {
			"sourceFileName": "src/core/CancelablePromise.ts",
			"qualifiedName": "__type"
		},
		"46": {
			"sourceFileName": "src/core/CancelablePromise.ts",
			"qualifiedName": "__type"
		},
		"47": {
			"sourceFileName": "src/core/CancelablePromise.ts",
			"qualifiedName": "CancelablePromise.#promise"
		},
		"48": {
			"sourceFileName": "src/core/CancelablePromise.ts",
			"qualifiedName": "CancelablePromise.#resolve"
		},
		"49": {
			"sourceFileName": "src/core/CancelablePromise.ts",
			"qualifiedName": "__type"
		},
		"50": {
			"sourceFileName": "src/core/CancelablePromise.ts",
			"qualifiedName": "__type"
		},
		"51": {
			"sourceFileName": "src/core/CancelablePromise.ts",
			"qualifiedName": "value"
		},
		"52": {
			"sourceFileName": "src/core/CancelablePromise.ts",
			"qualifiedName": "CancelablePromise.#reject"
		},
		"53": {
			"sourceFileName": "src/core/CancelablePromise.ts",
			"qualifiedName": "__type"
		},
		"54": {
			"sourceFileName": "src/core/CancelablePromise.ts",
			"qualifiedName": "__type"
		},
		"55": {
			"sourceFileName": "src/core/CancelablePromise.ts",
			"qualifiedName": "reason"
		},
		"56": {
			"sourceFileName": "src/core/CancelablePromise.ts",
			"qualifiedName": "CancelablePromise.then"
		},
		"57": {
			"sourceFileName": "src/core/CancelablePromise.ts",
			"qualifiedName": "CancelablePromise.then"
		},
		"58": {
			"sourceFileName": "src/core/CancelablePromise.ts",
			"qualifiedName": "TResult1"
		},
		"59": {
			"sourceFileName": "src/core/CancelablePromise.ts",
			"qualifiedName": "TResult2"
		},
		"60": {
			"sourceFileName": "src/core/CancelablePromise.ts",
			"qualifiedName": "onFulfilled"
		},
		"61": {
			"sourceFileName": "src/core/CancelablePromise.ts",
			"qualifiedName": "__type"
		},
		"62": {
			"sourceFileName": "src/core/CancelablePromise.ts",
			"qualifiedName": "__type"
		},
		"63": {
			"sourceFileName": "src/core/CancelablePromise.ts",
			"qualifiedName": "value"
		},
		"64": {
			"sourceFileName": "src/core/CancelablePromise.ts",
			"qualifiedName": "onRejected"
		},
		"65": {
			"sourceFileName": "src/core/CancelablePromise.ts",
			"qualifiedName": "__type"
		},
		"66": {
			"sourceFileName": "src/core/CancelablePromise.ts",
			"qualifiedName": "__type"
		},
		"67": {
			"sourceFileName": "src/core/CancelablePromise.ts",
			"qualifiedName": "reason"
		},
		"68": {
			"sourceFileName": "src/core/CancelablePromise.ts",
			"qualifiedName": "CancelablePromise.catch"
		},
		"69": {
			"sourceFileName": "src/core/CancelablePromise.ts",
			"qualifiedName": "CancelablePromise.catch"
		},
		"70": {
			"sourceFileName": "src/core/CancelablePromise.ts",
			"qualifiedName": "TResult"
		},
		"71": {
			"sourceFileName": "src/core/CancelablePromise.ts",
			"qualifiedName": "onRejected"
		},
		"72": {
			"sourceFileName": "src/core/CancelablePromise.ts",
			"qualifiedName": "__type"
		},
		"73": {
			"sourceFileName": "src/core/CancelablePromise.ts",
			"qualifiedName": "__type"
		},
		"74": {
			"sourceFileName": "src/core/CancelablePromise.ts",
			"qualifiedName": "reason"
		},
		"75": {
			"sourceFileName": "src/core/CancelablePromise.ts",
			"qualifiedName": "CancelablePromise.finally"
		},
		"76": {
			"sourceFileName": "src/core/CancelablePromise.ts",
			"qualifiedName": "CancelablePromise.finally"
		},
		"77": {
			"sourceFileName": "src/core/CancelablePromise.ts",
			"qualifiedName": "onFinally"
		},
		"78": {
			"sourceFileName": "src/core/CancelablePromise.ts",
			"qualifiedName": "__type"
		},
		"79": {
			"sourceFileName": "src/core/CancelablePromise.ts",
			"qualifiedName": "__type"
		},
		"80": {
			"sourceFileName": "src/core/CancelablePromise.ts",
			"qualifiedName": "CancelablePromise.cancel"
		},
		"81": {
			"sourceFileName": "src/core/CancelablePromise.ts",
			"qualifiedName": "CancelablePromise.cancel"
		},
		"82": {
			"sourceFileName": "src/core/CancelablePromise.ts",
			"qualifiedName": "CancelablePromise.isCancelled"
		},
		"83": {
			"sourceFileName": "src/core/CancelablePromise.ts",
			"qualifiedName": "CancelablePromise.isCancelled"
		},
		"84": {
			"sourceFileName": "src/core/CancelablePromise.ts",
			"qualifiedName": "CancelablePromise.[toStringTag]"
		},
		"85": {
			"sourceFileName": "src/core/CancelablePromise.ts",
			"qualifiedName": "CancelablePromise.[toStringTag]"
		},
		"86": {
			"sourceFileName": "src/core/CancelablePromise.ts",
			"qualifiedName": "CancelablePromise.T"
		},
		"87": {
			"sourceFileName": "src/core/CancelablePromise.ts",
			"qualifiedName": "CancelError"
		},
		"88": {
			"sourceFileName": "node_modules/@types/node/globals.d.ts",
			"qualifiedName": "__global.ErrorConstructor.captureStackTrace"
		},
		"89": {
			"sourceFileName": "node_modules/@types/node/globals.d.ts",
			"qualifiedName": "__global.ErrorConstructor.captureStackTrace"
		},
		"90": {
			"sourceFileName": "node_modules/@types/node/globals.d.ts",
			"qualifiedName": "targetObject"
		},
		"91": {
			"sourceFileName": "node_modules/@types/node/globals.d.ts",
			"qualifiedName": "constructorOpt"
		},
		"92": {
			"sourceFileName": "node_modules/@types/node/globals.d.ts",
			"qualifiedName": "__global.ErrorConstructor.prepareStackTrace"
		},
		"93": {
			"sourceFileName": "node_modules/@types/node/globals.d.ts",
			"qualifiedName": "__type"
		},
		"94": {
			"sourceFileName": "node_modules/@types/node/globals.d.ts",
			"qualifiedName": "__type"
		},
		"95": {
			"sourceFileName": "node_modules/@types/node/globals.d.ts",
			"qualifiedName": "err"
		},
		"96": {
			"sourceFileName": "node_modules/@types/node/globals.d.ts",
			"qualifiedName": "stackTraces"
		},
		"97": {
			"sourceFileName": "node_modules/@types/node/globals.d.ts",
			"qualifiedName": "__global.ErrorConstructor.stackTraceLimit"
		},
		"98": {
			"sourceFileName": "src/core/CancelablePromise.ts",
			"qualifiedName": "CancelError.__constructor"
		},
		"99": {
			"sourceFileName": "src/core/CancelablePromise.ts",
			"qualifiedName": "CancelError"
		},
		"100": {
			"sourceFileName": "src/core/CancelablePromise.ts",
			"qualifiedName": "message"
		},
		"101": {
			"sourceFileName": "src/core/CancelablePromise.ts",
			"qualifiedName": "CancelError.isCancelled"
		},
		"102": {
			"sourceFileName": "src/core/CancelablePromise.ts",
			"qualifiedName": "CancelError.isCancelled"
		},
		"103": {
			"sourceFileName": "node_modules/typescript/lib/lib.es5.d.ts",
			"qualifiedName": "Error.name"
		},
		"104": {
			"sourceFileName": "node_modules/typescript/lib/lib.es5.d.ts",
			"qualifiedName": "Error.message"
		},
		"105": {
			"sourceFileName": "node_modules/typescript/lib/lib.es5.d.ts",
			"qualifiedName": "Error.stack"
		},
		"106": {
			"sourceFileName": "src/core/OpenAPI.ts",
			"qualifiedName": "OpenAPI"
		},
		"107": {
			"sourceFileName": "src/core/OpenAPI.ts",
			"qualifiedName": "OpenAPIConfig"
		},
		"108": {
			"sourceFileName": "src/core/OpenAPI.ts",
			"qualifiedName": "__type"
		},
		"109": {
			"sourceFileName": "src/core/OpenAPI.ts",
			"qualifiedName": "__type.BASE"
		},
		"110": {
			"sourceFileName": "src/core/OpenAPI.ts",
			"qualifiedName": "__type.VERSION"
		},
		"111": {
			"sourceFileName": "src/core/OpenAPI.ts",
			"qualifiedName": "__type.WITH_CREDENTIALS"
		},
		"112": {
			"sourceFileName": "src/core/OpenAPI.ts",
			"qualifiedName": "__type.CREDENTIALS"
		},
		"113": {
			"sourceFileName": "src/core/OpenAPI.ts",
			"qualifiedName": "__type.TOKEN"
		},
		"114": {
			"sourceFileName": "src/core/OpenAPI.ts",
			"qualifiedName": "__type.USERNAME"
		},
		"115": {
			"sourceFileName": "src/core/OpenAPI.ts",
			"qualifiedName": "__type.PASSWORD"
		},
		"116": {
			"sourceFileName": "src/core/OpenAPI.ts",
			"qualifiedName": "__type.HEADERS"
		},
		"117": {
			"sourceFileName": "src/core/OpenAPI.ts",
			"qualifiedName": "__type.ENCODE_PATH"
		},
		"118": {
			"sourceFileName": "src/core/OpenAPI.ts",
			"qualifiedName": "__type"
		},
		"119": {
			"sourceFileName": "src/core/OpenAPI.ts",
			"qualifiedName": "__type"
		},
		"120": {
			"sourceFileName": "src/core/OpenAPI.ts",
			"qualifiedName": "path"
		},
		"121": {
			"sourceFileName": "src/models/AlgorithmIdentifier.ts",
			"qualifiedName": "AlgorithmIdentifier"
		},
		"122": {
			"sourceFileName": "src/models/AlgorithmIdentifier.ts",
			"qualifiedName": "AlgorithmIdentifier.SHA1"
		},
		"123": {
			"sourceFileName": "src/models/AlgorithmIdentifier.ts",
			"qualifiedName": "AlgorithmIdentifier.SHA512"
		},
		"124": {
			"sourceFileName": "src/models/AuthError.ts",
			"qualifiedName": "AuthError"
		},
		"125": {
			"sourceFileName": "src/models/AuthError.ts",
			"qualifiedName": "__type"
		},
		"126": {
			"sourceFileName": "src/models/AuthError.ts",
			"qualifiedName": "__type.error"
		},
		"127": {
			"sourceFileName": "src/models/AuthError.ts",
			"qualifiedName": "__type.description"
		},
		"128": {
			"sourceFileName": "src/models/BaseProject.ts",
			"qualifiedName": "BaseProject"
		},
		"129": {
			"sourceFileName": "src/models/BaseProject.ts",
			"qualifiedName": "__type"
		},
		"130": {
			"sourceFileName": "src/models/BaseProject.ts",
			"qualifiedName": "__type.slug"
		},
		"131": {
			"sourceFileName": "src/models/BaseProject.ts",
			"qualifiedName": "__type.title"
		},
		"132": {
			"sourceFileName": "src/models/BaseProject.ts",
			"qualifiedName": "__type.description"
		},
		"133": {
			"sourceFileName": "src/models/BaseProject.ts",
			"qualifiedName": "__type.categories"
		},
		"134": {
			"sourceFileName": "src/models/BaseProject.ts",
			"qualifiedName": "__type.client_side"
		},
		"135": {
			"sourceFileName": "src/models/BaseProject.ts",
			"qualifiedName": "__type.server_side"
		},
		"136": {
			"sourceFileName": "src/models/BaseProject.ts",
			"qualifiedName": "BaseProject"
		},
		"137": {
			"sourceFileName": "src/models/BaseProject.ts",
			"qualifiedName": "BaseProject.client_side"
		},
		"138": {
			"sourceFileName": "src/models/BaseProject.ts",
			"qualifiedName": "BaseProject.client_side.REQUIRED"
		},
		"139": {
			"sourceFileName": "src/models/BaseProject.ts",
			"qualifiedName": "BaseProject.client_side.OPTIONAL"
		},
		"140": {
			"sourceFileName": "src/models/BaseProject.ts",
			"qualifiedName": "BaseProject.client_side.UNSUPPORTED"
		},
		"141": {
			"sourceFileName": "src/models/BaseProject.ts",
			"qualifiedName": "BaseProject.server_side"
		},
		"142": {
			"sourceFileName": "src/models/BaseProject.ts",
			"qualifiedName": "BaseProject.server_side.REQUIRED"
		},
		"143": {
			"sourceFileName": "src/models/BaseProject.ts",
			"qualifiedName": "BaseProject.server_side.OPTIONAL"
		},
		"144": {
			"sourceFileName": "src/models/BaseProject.ts",
			"qualifiedName": "BaseProject.server_side.UNSUPPORTED"
		},
		"145": {
			"sourceFileName": "src/models/BaseVersion.ts",
			"qualifiedName": "BaseVersion"
		},
		"146": {
			"sourceFileName": "src/models/BaseVersion.ts",
			"qualifiedName": "__type"
		},
		"147": {
			"sourceFileName": "src/models/BaseVersion.ts",
			"qualifiedName": "__type.name"
		},
		"148": {
			"sourceFileName": "src/models/BaseVersion.ts",
			"qualifiedName": "__type.version_number"
		},
		"149": {
			"sourceFileName": "src/models/BaseVersion.ts",
			"qualifiedName": "__type.changelog"
		},
		"150": {
			"sourceFileName": "src/models/BaseVersion.ts",
			"qualifiedName": "__type.dependencies"
		},
		"151": {
			"sourceFileName": "src/models/BaseVersion.ts",
			"qualifiedName": "__type.game_versions"
		},
		"152": {
			"sourceFileName": "src/models/BaseVersion.ts",
			"qualifiedName": "__type.version_type"
		},
		"153": {
			"sourceFileName": "src/models/BaseVersion.ts",
			"qualifiedName": "__type.loaders"
		},
		"154": {
			"sourceFileName": "src/models/BaseVersion.ts",
			"qualifiedName": "__type.featured"
		},
		"155": {
			"sourceFileName": "src/models/BaseVersion.ts",
			"qualifiedName": "__type.status"
		},
		"156": {
			"sourceFileName": "src/models/BaseVersion.ts",
			"qualifiedName": "__type.requested_status"
		},
		"157": {
			"sourceFileName": "src/models/BaseVersion.ts",
			"qualifiedName": "BaseVersion"
		},
		"158": {
			"sourceFileName": "src/models/BaseVersion.ts",
			"qualifiedName": "BaseVersion.version_type"
		},
		"159": {
			"sourceFileName": "src/models/BaseVersion.ts",
			"qualifiedName": "BaseVersion.version_type.RELEASE"
		},
		"160": {
			"sourceFileName": "src/models/BaseVersion.ts",
			"qualifiedName": "BaseVersion.version_type.BETA"
		},
		"161": {
			"sourceFileName": "src/models/BaseVersion.ts",
			"qualifiedName": "BaseVersion.version_type.ALPHA"
		},
		"162": {
			"sourceFileName": "src/models/BaseVersion.ts",
			"qualifiedName": "BaseVersion.status"
		},
		"163": {
			"sourceFileName": "src/models/BaseVersion.ts",
			"qualifiedName": "BaseVersion.status.LISTED"
		},
		"164": {
			"sourceFileName": "src/models/BaseVersion.ts",
			"qualifiedName": "BaseVersion.status.ARCHIVED"
		},
		"165": {
			"sourceFileName": "src/models/BaseVersion.ts",
			"qualifiedName": "BaseVersion.status.DRAFT"
		},
		"166": {
			"sourceFileName": "src/models/BaseVersion.ts",
			"qualifiedName": "BaseVersion.status.UNLISTED"
		},
		"167": {
			"sourceFileName": "src/models/BaseVersion.ts",
			"qualifiedName": "BaseVersion.status.SCHEDULED"
		},
		"168": {
			"sourceFileName": "src/models/BaseVersion.ts",
			"qualifiedName": "BaseVersion.status.UNKNOWN"
		},
		"169": {
			"sourceFileName": "src/models/BaseVersion.ts",
			"qualifiedName": "BaseVersion.requested_status"
		},
		"170": {
			"sourceFileName": "src/models/BaseVersion.ts",
			"qualifiedName": "BaseVersion.requested_status.LISTED"
		},
		"171": {
			"sourceFileName": "src/models/BaseVersion.ts",
			"qualifiedName": "BaseVersion.requested_status.ARCHIVED"
		},
		"172": {
			"sourceFileName": "src/models/BaseVersion.ts",
			"qualifiedName": "BaseVersion.requested_status.DRAFT"
		},
		"173": {
			"sourceFileName": "src/models/BaseVersion.ts",
			"qualifiedName": "BaseVersion.requested_status.UNLISTED"
		},
		"174": {
			"sourceFileName": "src/models/CategoryTag.ts",
			"qualifiedName": "CategoryTag"
		},
		"175": {
			"sourceFileName": "src/models/CategoryTag.ts",
			"qualifiedName": "__type"
		},
		"176": {
			"sourceFileName": "src/models/CategoryTag.ts",
			"qualifiedName": "__type.icon"
		},
		"177": {
			"sourceFileName": "src/models/CategoryTag.ts",
			"qualifiedName": "__type.name"
		},
		"178": {
			"sourceFileName": "src/models/CategoryTag.ts",
			"qualifiedName": "__type.project_type"
		},
		"179": {
			"sourceFileName": "src/models/CategoryTag.ts",
			"qualifiedName": "__type.header"
		},
		"180": {
			"sourceFileName": "src/models/CreatableProject.ts",
			"qualifiedName": "CreatableProject"
		},
		"181": {
			"sourceFileName": "src/models/CreatableProject.ts",
			"qualifiedName": "__type"
		},
		"182": {
			"sourceFileName": "src/models/CreatableProject.ts",
			"qualifiedName": "__type.project_type"
		},
		"183": {
			"sourceFileName": "src/models/CreatableProject.ts",
			"qualifiedName": "__type.initial_versions"
		},
		"184": {
			"sourceFileName": "src/models/CreatableProject.ts",
			"qualifiedName": "__type.is_draft"
		},
		"185": {
			"sourceFileName": "src/models/CreatableProject.ts",
			"qualifiedName": "__type.gallery_items"
		},
		"186": {
			"sourceFileName": "src/models/CreatableProject.ts",
			"qualifiedName": "CreatableProject"
		},
		"187": {
			"sourceFileName": "src/models/CreatableProject.ts",
			"qualifiedName": "CreatableProject.project_type"
		},
		"188": {
			"sourceFileName": "src/models/CreatableProject.ts",
			"qualifiedName": "CreatableProject.project_type.MOD"
		},
		"189": {
			"sourceFileName": "src/models/CreatableProject.ts",
			"qualifiedName": "CreatableProject.project_type.MODPACK"
		},
		"190": {
			"sourceFileName": "src/models/CreatableProjectGalleryItem.ts",
			"qualifiedName": "CreatableProjectGalleryItem"
		},
		"191": {
			"sourceFileName": "src/models/CreatableProjectGalleryItem.ts",
			"qualifiedName": "__type"
		},
		"192": {
			"sourceFileName": "src/models/CreatableProjectGalleryItem.ts",
			"qualifiedName": "__type.item"
		},
		"193": {
			"sourceFileName": "src/models/CreatableProjectGalleryItem.ts",
			"qualifiedName": "__type.featured"
		},
		"194": {
			"sourceFileName": "src/models/CreatableProjectGalleryItem.ts",
			"qualifiedName": "__type.title"
		},
		"195": {
			"sourceFileName": "src/models/CreatableProjectGalleryItem.ts",
			"qualifiedName": "__type.description"
		},
		"196": {
			"sourceFileName": "src/models/CreatableProjectGalleryItem.ts",
			"qualifiedName": "__type.ordering"
		},
		"197": {
			"sourceFileName": "src/models/CreatableReport.ts",
			"qualifiedName": "CreatableReport"
		},
		"198": {
			"sourceFileName": "src/models/CreatableReport.ts",
			"qualifiedName": "__type"
		},
		"199": {
			"sourceFileName": "src/models/CreatableReport.ts",
			"qualifiedName": "__type.report_type"
		},
		"200": {
			"sourceFileName": "src/models/CreatableReport.ts",
			"qualifiedName": "__type.item_id"
		},
		"201": {
			"sourceFileName": "src/models/CreatableReport.ts",
			"qualifiedName": "__type.item_type"
		},
		"202": {
			"sourceFileName": "src/models/CreatableReport.ts",
			"qualifiedName": "__type.body"
		},
		"203": {
			"sourceFileName": "src/models/CreatableReport.ts",
			"qualifiedName": "CreatableReport"
		},
		"204": {
			"sourceFileName": "src/models/CreatableReport.ts",
			"qualifiedName": "CreatableReport.item_type"
		},
		"205": {
			"sourceFileName": "src/models/CreatableReport.ts",
			"qualifiedName": "CreatableReport.item_type.PROJECT"
		},
		"206": {
			"sourceFileName": "src/models/CreatableReport.ts",
			"qualifiedName": "CreatableReport.item_type.USER"
		},
		"207": {
			"sourceFileName": "src/models/CreatableReport.ts",
			"qualifiedName": "CreatableReport.item_type.VERSION"
		},
		"208": {
			"sourceFileName": "src/models/CreatableVersion.ts",
			"qualifiedName": "CreatableVersion"
		},
		"209": {
			"sourceFileName": "src/models/CreatableVersion.ts",
			"qualifiedName": "__type"
		},
		"210": {
			"sourceFileName": "src/models/CreatableVersion.ts",
			"qualifiedName": "__type.project_id"
		},
		"211": {
			"sourceFileName": "src/models/CreatableVersion.ts",
			"qualifiedName": "__type.file_parts"
		},
		"212": {
			"sourceFileName": "src/models/CreatableVersion.ts",
			"qualifiedName": "__type.primary_file"
		},
		"213": {
			"sourceFileName": "src/models/CreateProjectBody.ts",
			"qualifiedName": "CreateProjectBody"
		},
		"214": {
			"sourceFileName": "src/models/CreateProjectBody.ts",
			"qualifiedName": "__type"
		},
		"215": {
			"sourceFileName": "src/models/CreateProjectBody.ts",
			"qualifiedName": "__type.data"
		},
		"216": {
			"sourceFileName": "src/models/CreateProjectBody.ts",
			"qualifiedName": "__type.icon"
		},
		"217": {
			"sourceFileName": "src/models/CreateProjectBody.ts",
			"qualifiedName": "CreateProjectBody"
		},
		"218": {
			"sourceFileName": "src/models/CreateProjectBody.ts",
			"qualifiedName": "CreateProjectBody.icon"
		},
		"219": {
			"sourceFileName": "src/models/CreateProjectBody.ts",
			"qualifiedName": "CreateProjectBody.icon._PNG"
		},
		"220": {
			"sourceFileName": "src/models/CreateProjectBody.ts",
			"qualifiedName": "CreateProjectBody.icon._JPG"
		},
		"221": {
			"sourceFileName": "src/models/CreateProjectBody.ts",
			"qualifiedName": "CreateProjectBody.icon._JPEG"
		},
		"222": {
			"sourceFileName": "src/models/CreateProjectBody.ts",
			"qualifiedName": "CreateProjectBody.icon._BMP"
		},
		"223": {
			"sourceFileName": "src/models/CreateProjectBody.ts",
			"qualifiedName": "CreateProjectBody.icon._GIF"
		},
		"224": {
			"sourceFileName": "src/models/CreateProjectBody.ts",
			"qualifiedName": "CreateProjectBody.icon._WEBP"
		},
		"225": {
			"sourceFileName": "src/models/CreateProjectBody.ts",
			"qualifiedName": "CreateProjectBody.icon._SVG"
		},
		"226": {
			"sourceFileName": "src/models/CreateProjectBody.ts",
			"qualifiedName": "CreateProjectBody.icon._SVGZ"
		},
		"227": {
			"sourceFileName": "src/models/CreateProjectBody.ts",
			"qualifiedName": "CreateProjectBody.icon._RGB"
		},
		"228": {
			"sourceFileName": "src/models/CreateVersionBody.ts",
			"qualifiedName": "CreateVersionBody"
		},
		"229": {
			"sourceFileName": "src/models/CreateVersionBody.ts",
			"qualifiedName": "__type"
		},
		"230": {
			"sourceFileName": "src/models/CreateVersionBody.ts",
			"qualifiedName": "__type.data"
		},
		"231": {
			"sourceFileName": "src/models/DonationPlatformTag.ts",
			"qualifiedName": "DonationPlatformTag"
		},
		"232": {
			"sourceFileName": "src/models/DonationPlatformTag.ts",
			"qualifiedName": "__type"
		},
		"233": {
			"sourceFileName": "src/models/DonationPlatformTag.ts",
			"qualifiedName": "__type.short"
		},
		"234": {
			"sourceFileName": "src/models/DonationPlatformTag.ts",
			"qualifiedName": "__type.name"
		},
		"235": {
			"sourceFileName": "src/models/EditableFileType.ts",
			"qualifiedName": "EditableFileType"
		},
		"236": {
			"sourceFileName": "src/models/EditableFileType.ts",
			"qualifiedName": "__type"
		},
		"237": {
			"sourceFileName": "src/models/EditableFileType.ts",
			"qualifiedName": "__type.algorithm"
		},
		"238": {
			"sourceFileName": "src/models/EditableFileType.ts",
			"qualifiedName": "__type.hash"
		},
		"239": {
			"sourceFileName": "src/models/EditableFileType.ts",
			"qualifiedName": "__type.file_type"
		},
		"240": {
			"sourceFileName": "src/models/EditableFileType.ts",
			"qualifiedName": "EditableFileType"
		},
		"241": {
			"sourceFileName": "src/models/EditableFileType.ts",
			"qualifiedName": "EditableFileType.file_type"
		},
		"242": {
			"sourceFileName": "src/models/EditableFileType.ts",
			"qualifiedName": "EditableFileType.file_type.REQUIRED_RESOURCE_PACK"
		},
		"243": {
			"sourceFileName": "src/models/EditableFileType.ts",
			"qualifiedName": "EditableFileType.file_type.OPTIONAL_RESOURCE_PACK"
		},
		"244": {
			"sourceFileName": "src/models/EditableProject.ts",
			"qualifiedName": "EditableProject"
		},
		"245": {
			"sourceFileName": "src/models/EditableProject.ts",
			"qualifiedName": "__type"
		},
		"246": {
			"sourceFileName": "src/models/EditableProject.ts",
			"qualifiedName": "__type.moderation_message"
		},
		"247": {
			"sourceFileName": "src/models/EditableProject.ts",
			"qualifiedName": "__type.moderation_message_body"
		},
		"248": {
			"sourceFileName": "src/models/EditableUser.ts",
			"qualifiedName": "EditableUser"
		},
		"249": {
			"sourceFileName": "src/models/EditableUser.ts",
			"qualifiedName": "__type"
		},
		"250": {
			"sourceFileName": "src/models/EditableUser.ts",
			"qualifiedName": "__type.username"
		},
		"251": {
			"sourceFileName": "src/models/EditableUser.ts",
			"qualifiedName": "__type.name"
		},
		"252": {
			"sourceFileName": "src/models/EditableUser.ts",
			"qualifiedName": "__type.email"
		},
		"253": {
			"sourceFileName": "src/models/EditableUser.ts",
			"qualifiedName": "__type.bio"
		},
		"254": {
			"sourceFileName": "src/models/EditableUser.ts",
			"qualifiedName": "__type.payout_data"
		},
		"255": {
			"sourceFileName": "src/models/EditableVersion.ts",
			"qualifiedName": "EditableVersion"
		},
		"256": {
			"sourceFileName": "src/models/EditableVersion.ts",
			"qualifiedName": "__type"
		},
		"257": {
			"sourceFileName": "src/models/EditableVersion.ts",
			"qualifiedName": "__type.primary_file"
		},
		"258": {
			"sourceFileName": "src/models/EditableVersion.ts",
			"qualifiedName": "__type.file_types"
		},
		"259": {
			"sourceFileName": "src/models/FileHashIdentifier.ts",
			"qualifiedName": "FileHashIdentifier"
		},
		"260": {
			"sourceFileName": "src/models/ForgeUpdateCheckerPromos.ts",
			"qualifiedName": "ForgeUpdateCheckerPromos"
		},
		"261": {
			"sourceFileName": "src/models/ForgeUpdateCheckerPromos.ts",
			"qualifiedName": "__type"
		},
		"262": {
			"sourceFileName": "src/models/ForgeUpdateCheckerPromos.ts",
			"qualifiedName": "__type.{version}-recommended"
		},
		"263": {
			"sourceFileName": "src/models/ForgeUpdateCheckerPromos.ts",
			"qualifiedName": "__type.{version}-latest"
		},
		"264": {
			"sourceFileName": "src/models/ForgeUpdates.ts",
			"qualifiedName": "ForgeUpdates"
		},
		"265": {
			"sourceFileName": "src/models/ForgeUpdates.ts",
			"qualifiedName": "__type"
		},
		"266": {
			"sourceFileName": "src/models/ForgeUpdates.ts",
			"qualifiedName": "__type.homepage"
		},
		"267": {
			"sourceFileName": "src/models/ForgeUpdates.ts",
			"qualifiedName": "__type.promos"
		},
		"268": {
			"sourceFileName": "src/models/GalleryImage.ts",
			"qualifiedName": "GalleryImage"
		},
		"269": {
			"sourceFileName": "src/models/GalleryImage.ts",
			"qualifiedName": "__type"
		},
		"270": {
			"sourceFileName": "src/models/GalleryImage.ts",
			"qualifiedName": "__type.url"
		},
		"271": {
			"sourceFileName": "src/models/GalleryImage.ts",
			"qualifiedName": "__type.featured"
		},
		"272": {
			"sourceFileName": "src/models/GalleryImage.ts",
			"qualifiedName": "__type.title"
		},
		"273": {
			"sourceFileName": "src/models/GalleryImage.ts",
			"qualifiedName": "__type.description"
		},
		"274": {
			"sourceFileName": "src/models/GalleryImage.ts",
			"qualifiedName": "__type.created"
		},
		"275": {
			"sourceFileName": "src/models/GalleryImage.ts",
			"qualifiedName": "__type.ordering"
		},
		"276": {
			"sourceFileName": "src/models/GameVersionTag.ts",
			"qualifiedName": "GameVersionTag"
		},
		"277": {
			"sourceFileName": "src/models/GameVersionTag.ts",
			"qualifiedName": "__type"
		},
		"278": {
			"sourceFileName": "src/models/GameVersionTag.ts",
			"qualifiedName": "__type.version"
		},
		"279": {
			"sourceFileName": "src/models/GameVersionTag.ts",
			"qualifiedName": "__type.version_type"
		},
		"280": {
			"sourceFileName": "src/models/GameVersionTag.ts",
			"qualifiedName": "__type.date"
		},
		"281": {
			"sourceFileName": "src/models/GameVersionTag.ts",
			"qualifiedName": "__type.major"
		},
		"282": {
			"sourceFileName": "src/models/GameVersionTag.ts",
			"qualifiedName": "GameVersionTag"
		},
		"283": {
			"sourceFileName": "src/models/GameVersionTag.ts",
			"qualifiedName": "GameVersionTag.version_type"
		},
		"284": {
			"sourceFileName": "src/models/GameVersionTag.ts",
			"qualifiedName": "GameVersionTag.version_type.RELEASE"
		},
		"285": {
			"sourceFileName": "src/models/GameVersionTag.ts",
			"qualifiedName": "GameVersionTag.version_type.SNAPSHOT"
		},
		"286": {
			"sourceFileName": "src/models/GameVersionTag.ts",
			"qualifiedName": "GameVersionTag.version_type.ALPHA"
		},
		"287": {
			"sourceFileName": "src/models/GameVersionTag.ts",
			"qualifiedName": "GameVersionTag.version_type.BETA"
		},
		"288": {
			"sourceFileName": "src/models/GetLatestVersionFromHashBody.ts",
			"qualifiedName": "GetLatestVersionFromHashBody"
		},
		"289": {
			"sourceFileName": "src/models/GetLatestVersionFromHashBody.ts",
			"qualifiedName": "__type"
		},
		"290": {
			"sourceFileName": "src/models/GetLatestVersionFromHashBody.ts",
			"qualifiedName": "__type.loaders"
		},
		"291": {
			"sourceFileName": "src/models/GetLatestVersionFromHashBody.ts",
			"qualifiedName": "__type.game_versions"
		},
		"292": {
			"sourceFileName": "src/models/GetLatestVersionsFromHashesBody.ts",
			"qualifiedName": "GetLatestVersionsFromHashesBody"
		},
		"293": {
			"sourceFileName": "src/models/GetLatestVersionsFromHashesBody.ts",
			"qualifiedName": "__type"
		},
		"294": {
			"sourceFileName": "src/models/GetLatestVersionsFromHashesBody.ts",
			"qualifiedName": "__type.loaders"
		},
		"295": {
			"sourceFileName": "src/models/GetLatestVersionsFromHashesBody.ts",
			"qualifiedName": "__type.game_versions"
		},
		"296": {
			"sourceFileName": "src/models/HashList.ts",
			"qualifiedName": "HashList"
		},
		"297": {
			"sourceFileName": "src/models/HashList.ts",
			"qualifiedName": "__type"
		},
		"298": {
			"sourceFileName": "src/models/HashList.ts",
			"qualifiedName": "__type.hashes"
		},
		"299": {
			"sourceFileName": "src/models/HashList.ts",
			"qualifiedName": "__type.algorithm"
		},
		"300": {
			"sourceFileName": "src/models/HashList.ts",
			"qualifiedName": "HashList"
		},
		"301": {
			"sourceFileName": "src/models/HashList.ts",
			"qualifiedName": "HashList.algorithm"
		},
		"302": {
			"sourceFileName": "src/models/HashList.ts",
			"qualifiedName": "HashList.algorithm.SHA1"
		},
		"303": {
			"sourceFileName": "src/models/HashList.ts",
			"qualifiedName": "HashList.algorithm.SHA512"
		},
		"304": {
			"sourceFileName": "src/models/HashVersionMap.ts",
			"qualifiedName": "HashVersionMap"
		},
		"305": {
			"sourceFileName": "src/models/InvalidInputError.ts",
			"qualifiedName": "InvalidInputError"
		},
		"306": {
			"sourceFileName": "src/models/InvalidInputError.ts",
			"qualifiedName": "__type"
		},
		"307": {
			"sourceFileName": "src/models/InvalidInputError.ts",
			"qualifiedName": "__type.error"
		},
		"308": {
			"sourceFileName": "src/models/InvalidInputError.ts",
			"qualifiedName": "__type.description"
		},
		"309": {
			"sourceFileName": "src/models/License.ts",
			"qualifiedName": "License"
		},
		"310": {
			"sourceFileName": "src/models/License.ts",
			"qualifiedName": "__type"
		},
		"311": {
			"sourceFileName": "src/models/License.ts",
			"qualifiedName": "__type.title"
		},
		"312": {
			"sourceFileName": "src/models/License.ts",
			"qualifiedName": "__type.body"
		},
		"313": {
			"sourceFileName": "src/models/LicenseTag.ts",
			"qualifiedName": "LicenseTag"
		},
		"314": {
			"sourceFileName": "src/models/LicenseTag.ts",
			"qualifiedName": "__type"
		},
		"315": {
			"sourceFileName": "src/models/LicenseTag.ts",
			"qualifiedName": "__type.short"
		},
		"316": {
			"sourceFileName": "src/models/LicenseTag.ts",
			"qualifiedName": "__type.name"
		},
		"317": {
			"sourceFileName": "src/models/LoaderTag.ts",
			"qualifiedName": "LoaderTag"
		},
		"318": {
			"sourceFileName": "src/models/LoaderTag.ts",
			"qualifiedName": "__type"
		},
		"319": {
			"sourceFileName": "src/models/LoaderTag.ts",
			"qualifiedName": "__type.icon"
		},
		"320": {
			"sourceFileName": "src/models/LoaderTag.ts",
			"qualifiedName": "__type.name"
		},
		"321": {
			"sourceFileName": "src/models/LoaderTag.ts",
			"qualifiedName": "__type.supported_project_types"
		},
		"322": {
			"sourceFileName": "src/models/ModeratorMessage.ts",
			"qualifiedName": "ModeratorMessage"
		},
		"323": {
			"sourceFileName": "src/models/ModeratorMessage.ts",
			"qualifiedName": "__type"
		},
		"324": {
			"sourceFileName": "src/models/ModeratorMessage.ts",
			"qualifiedName": "__type.message"
		},
		"325": {
			"sourceFileName": "src/models/ModeratorMessage.ts",
			"qualifiedName": "__type.body"
		},
		"326": {
			"sourceFileName": "src/models/ModifiableProject.ts",
			"qualifiedName": "ModifiableProject"
		},
		"327": {
			"sourceFileName": "src/models/ModifiableProject.ts",
			"qualifiedName": "__type"
		},
		"328": {
			"sourceFileName": "src/models/ModifiableProject.ts",
			"qualifiedName": "__type.license_id"
		},
		"329": {
			"sourceFileName": "src/models/ModifiableProject.ts",
			"qualifiedName": "__type.license_url"
		},
		"330": {
			"sourceFileName": "src/models/ModifyTeamMemberBody.ts",
			"qualifiedName": "ModifyTeamMemberBody"
		},
		"331": {
			"sourceFileName": "src/models/ModifyTeamMemberBody.ts",
			"qualifiedName": "__type"
		},
		"332": {
			"sourceFileName": "src/models/MultipleHashQueryIdentifier.ts",
			"qualifiedName": "MultipleHashQueryIdentifier"
		},
		"333": {
			"sourceFileName": "src/models/MultipleProjectIdentifier.ts",
			"qualifiedName": "MultipleProjectIdentifier"
		},
		"334": {
			"sourceFileName": "src/models/NonSearchProject.ts",
			"qualifiedName": "NonSearchProject"
		},
		"335": {
			"sourceFileName": "src/models/NonSearchProject.ts",
			"qualifiedName": "__type"
		},
		"336": {
			"sourceFileName": "src/models/NonSearchProject.ts",
			"qualifiedName": "__type.body"
		},
		"337": {
			"sourceFileName": "src/models/NonSearchProject.ts",
			"qualifiedName": "__type.status"
		},
		"338": {
			"sourceFileName": "src/models/NonSearchProject.ts",
			"qualifiedName": "__type.requested_status"
		},
		"339": {
			"sourceFileName": "src/models/NonSearchProject.ts",
			"qualifiedName": "__type.additional_categories"
		},
		"340": {
			"sourceFileName": "src/models/NonSearchProject.ts",
			"qualifiedName": "__type.issues_url"
		},
		"341": {
			"sourceFileName": "src/models/NonSearchProject.ts",
			"qualifiedName": "__type.source_url"
		},
		"342": {
			"sourceFileName": "src/models/NonSearchProject.ts",
			"qualifiedName": "__type.wiki_url"
		},
		"343": {
			"sourceFileName": "src/models/NonSearchProject.ts",
			"qualifiedName": "__type.discord_url"
		},
		"344": {
			"sourceFileName": "src/models/NonSearchProject.ts",
			"qualifiedName": "__type.donation_urls"
		},
		"345": {
			"sourceFileName": "src/models/NonSearchProject.ts",
			"qualifiedName": "NonSearchProject"
		},
		"346": {
			"sourceFileName": "src/models/NonSearchProject.ts",
			"qualifiedName": "NonSearchProject.status"
		},
		"347": {
			"sourceFileName": "src/models/NonSearchProject.ts",
			"qualifiedName": "NonSearchProject.status.APPROVED"
		},
		"348": {
			"sourceFileName": "src/models/NonSearchProject.ts",
			"qualifiedName": "NonSearchProject.status.ARCHIVED"
		},
		"349": {
			"sourceFileName": "src/models/NonSearchProject.ts",
			"qualifiedName": "NonSearchProject.status.REJECTED"
		},
		"350": {
			"sourceFileName": "src/models/NonSearchProject.ts",
			"qualifiedName": "NonSearchProject.status.DRAFT"
		},
		"351": {
			"sourceFileName": "src/models/NonSearchProject.ts",
			"qualifiedName": "NonSearchProject.status.UNLISTED"
		},
		"352": {
			"sourceFileName": "src/models/NonSearchProject.ts",
			"qualifiedName": "NonSearchProject.status.PROCESSING"
		},
		"353": {
			"sourceFileName": "src/models/NonSearchProject.ts",
			"qualifiedName": "NonSearchProject.status.WITHHELD"
		},
		"354": {
			"sourceFileName": "src/models/NonSearchProject.ts",
			"qualifiedName": "NonSearchProject.status.SCHEDULED"
		},
		"355": {
			"sourceFileName": "src/models/NonSearchProject.ts",
			"qualifiedName": "NonSearchProject.status.PRIVATE"
		},
		"356": {
			"sourceFileName": "src/models/NonSearchProject.ts",
			"qualifiedName": "NonSearchProject.status.UNKNOWN"
		},
		"357": {
			"sourceFileName": "src/models/NonSearchProject.ts",
			"qualifiedName": "NonSearchProject.requested_status"
		},
		"358": {
			"sourceFileName": "src/models/NonSearchProject.ts",
			"qualifiedName": "NonSearchProject.requested_status.APPROVED"
		},
		"359": {
			"sourceFileName": "src/models/NonSearchProject.ts",
			"qualifiedName": "NonSearchProject.requested_status.ARCHIVED"
		},
		"360": {
			"sourceFileName": "src/models/NonSearchProject.ts",
			"qualifiedName": "NonSearchProject.requested_status.UNLISTED"
		},
		"361": {
			"sourceFileName": "src/models/NonSearchProject.ts",
			"qualifiedName": "NonSearchProject.requested_status.PRIVATE"
		},
		"362": {
			"sourceFileName": "src/models/NonSearchProject.ts",
			"qualifiedName": "NonSearchProject.requested_status.DRAFT"
		},
		"363": {
			"sourceFileName": "src/models/Notification.ts",
			"qualifiedName": "Notification"
		},
		"364": {
			"sourceFileName": "src/models/Notification.ts",
			"qualifiedName": "__type"
		},
		"365": {
			"sourceFileName": "src/models/Notification.ts",
			"qualifiedName": "__type.id"
		},
		"366": {
			"sourceFileName": "src/models/Notification.ts",
			"qualifiedName": "__type.user_id"
		},
		"367": {
			"sourceFileName": "src/models/Notification.ts",
			"qualifiedName": "__type.type"
		},
		"368": {
			"sourceFileName": "src/models/Notification.ts",
			"qualifiedName": "__type.title"
		},
		"369": {
			"sourceFileName": "src/models/Notification.ts",
			"qualifiedName": "__type.text"
		},
		"370": {
			"sourceFileName": "src/models/Notification.ts",
			"qualifiedName": "__type.link"
		},
		"371": {
			"sourceFileName": "src/models/Notification.ts",
			"qualifiedName": "__type.read"
		},
		"372": {
			"sourceFileName": "src/models/Notification.ts",
			"qualifiedName": "__type.created"
		},
		"373": {
			"sourceFileName": "src/models/Notification.ts",
			"qualifiedName": "__type.actions"
		},
		"374": {
			"sourceFileName": "src/models/Notification.ts",
			"qualifiedName": "Notification"
		},
		"375": {
			"sourceFileName": "src/models/Notification.ts",
			"qualifiedName": "Notification.type"
		},
		"376": {
			"sourceFileName": "src/models/Notification.ts",
			"qualifiedName": "Notification.type.PROJECT_UPDATE"
		},
		"377": {
			"sourceFileName": "src/models/Notification.ts",
			"qualifiedName": "Notification.type.TEAM_INVITE"
		},
		"378": {
			"sourceFileName": "src/models/Notification.ts",
			"qualifiedName": "Notification.type.STATUS_CHANGE"
		},
		"379": {
			"sourceFileName": "src/models/Notification.ts",
			"qualifiedName": "Notification.type.MODERATOR_MESSAGE"
		},
		"380": {
			"sourceFileName": "src/models/NotificationAction.ts",
			"qualifiedName": "NotificationAction"
		},
		"381": {
			"sourceFileName": "src/models/NotificationAction.ts",
			"qualifiedName": "__type"
		},
		"382": {
			"sourceFileName": "src/models/NotificationAction.ts",
			"qualifiedName": "__type.title"
		},
		"383": {
			"sourceFileName": "src/models/NotificationAction.ts",
			"qualifiedName": "__type.action_route"
		},
		"384": {
			"sourceFileName": "src/models/NotificationIdentifier.ts",
			"qualifiedName": "NotificationIdentifier"
		},
		"385": {
			"sourceFileName": "src/models/PatchProjectsBody.ts",
			"qualifiedName": "PatchProjectsBody"
		},
		"386": {
			"sourceFileName": "src/models/PatchProjectsBody.ts",
			"qualifiedName": "__type"
		},
		"387": {
			"sourceFileName": "src/models/PatchProjectsBody.ts",
			"qualifiedName": "__type.categories"
		},
		"388": {
			"sourceFileName": "src/models/PatchProjectsBody.ts",
			"qualifiedName": "__type.add_categories"
		},
		"389": {
			"sourceFileName": "src/models/PatchProjectsBody.ts",
			"qualifiedName": "__type.remove_categories"
		},
		"390": {
			"sourceFileName": "src/models/PatchProjectsBody.ts",
			"qualifiedName": "__type.additional_categories"
		},
		"391": {
			"sourceFileName": "src/models/PatchProjectsBody.ts",
			"qualifiedName": "__type.add_additional_categories"
		},
		"392": {
			"sourceFileName": "src/models/PatchProjectsBody.ts",
			"qualifiedName": "__type.remove_additional_categories"
		},
		"393": {
			"sourceFileName": "src/models/PatchProjectsBody.ts",
			"qualifiedName": "__type.donation_urls"
		},
		"394": {
			"sourceFileName": "src/models/PatchProjectsBody.ts",
			"qualifiedName": "__type.add_donation_urls"
		},
		"395": {
			"sourceFileName": "src/models/PatchProjectsBody.ts",
			"qualifiedName": "__type.remove_donation_urls"
		},
		"396": {
			"sourceFileName": "src/models/PatchProjectsBody.ts",
			"qualifiedName": "__type.issues_url"
		},
		"397": {
			"sourceFileName": "src/models/PatchProjectsBody.ts",
			"qualifiedName": "__type.source_url"
		},
		"398": {
			"sourceFileName": "src/models/PatchProjectsBody.ts",
			"qualifiedName": "__type.wiki_url"
		},
		"399": {
			"sourceFileName": "src/models/PatchProjectsBody.ts",
			"qualifiedName": "__type.discord_url"
		},
		"400": {
			"sourceFileName": "src/models/Project.ts",
			"qualifiedName": "Project"
		},
		"401": {
			"sourceFileName": "src/models/Project.ts",
			"qualifiedName": "__type"
		},
		"402": {
			"sourceFileName": "src/models/Project.ts",
			"qualifiedName": "__type.id"
		},
		"403": {
			"sourceFileName": "src/models/Project.ts",
			"qualifiedName": "__type.team"
		},
		"404": {
			"sourceFileName": "src/models/Project.ts",
			"qualifiedName": "__type.body_url"
		},
		"405": {
			"sourceFileName": "src/models/Project.ts",
			"qualifiedName": "__type.moderator_message"
		},
		"406": {
			"sourceFileName": "src/models/Project.ts",
			"qualifiedName": "__type.published"
		},
		"407": {
			"sourceFileName": "src/models/Project.ts",
			"qualifiedName": "__type.updated"
		},
		"408": {
			"sourceFileName": "src/models/Project.ts",
			"qualifiedName": "__type.approved"
		},
		"409": {
			"sourceFileName": "src/models/Project.ts",
			"qualifiedName": "__type.queued"
		},
		"410": {
			"sourceFileName": "src/models/Project.ts",
			"qualifiedName": "__type.followers"
		},
		"411": {
			"sourceFileName": "src/models/Project.ts",
			"qualifiedName": "__type.license"
		},
		"412": {
			"sourceFileName": "src/models/Project.ts",
			"qualifiedName": "__type.versions"
		},
		"413": {
			"sourceFileName": "src/models/Project.ts",
			"qualifiedName": "__type.game_versions"
		},
		"414": {
			"sourceFileName": "src/models/Project.ts",
			"qualifiedName": "__type.loaders"
		},
		"415": {
			"sourceFileName": "src/models/Project.ts",
			"qualifiedName": "__type.gallery"
		},
		"416": {
			"sourceFileName": "src/models/ProjectDependencyList.ts",
			"qualifiedName": "ProjectDependencyList"
		},
		"417": {
			"sourceFileName": "src/models/ProjectDependencyList.ts",
			"qualifiedName": "__type"
		},
		"418": {
			"sourceFileName": "src/models/ProjectDependencyList.ts",
			"qualifiedName": "__type.projects"
		},
		"419": {
			"sourceFileName": "src/models/ProjectDependencyList.ts",
			"qualifiedName": "__type.versions"
		},
		"420": {
			"sourceFileName": "src/models/ProjectDonationURL.ts",
			"qualifiedName": "ProjectDonationURL"
		},
		"421": {
			"sourceFileName": "src/models/ProjectDonationURL.ts",
			"qualifiedName": "__type"
		},
		"422": {
			"sourceFileName": "src/models/ProjectDonationURL.ts",
			"qualifiedName": "__type.id"
		},
		"423": {
			"sourceFileName": "src/models/ProjectDonationURL.ts",
			"qualifiedName": "__type.platform"
		},
		"424": {
			"sourceFileName": "src/models/ProjectDonationURL.ts",
			"qualifiedName": "__type.url"
		},
		"425": {
			"sourceFileName": "src/models/ProjectIdentifier.ts",
			"qualifiedName": "ProjectIdentifier"
		},
		"426": {
			"sourceFileName": "src/models/ProjectLicense.ts",
			"qualifiedName": "ProjectLicense"
		},
		"427": {
			"sourceFileName": "src/models/ProjectLicense.ts",
			"qualifiedName": "__type"
		},
		"428": {
			"sourceFileName": "src/models/ProjectLicense.ts",
			"qualifiedName": "__type.id"
		},
		"429": {
			"sourceFileName": "src/models/ProjectLicense.ts",
			"qualifiedName": "__type.name"
		},
		"430": {
			"sourceFileName": "src/models/ProjectLicense.ts",
			"qualifiedName": "__type.url"
		},
		"431": {
			"sourceFileName": "src/models/ProjectResult.ts",
			"qualifiedName": "ProjectResult"
		},
		"432": {
			"sourceFileName": "src/models/ProjectResult.ts",
			"qualifiedName": "__type"
		},
		"433": {
			"sourceFileName": "src/models/ProjectResult.ts",
			"qualifiedName": "__type.project_id"
		},
		"434": {
			"sourceFileName": "src/models/ProjectResult.ts",
			"qualifiedName": "__type.author"
		},
		"435": {
			"sourceFileName": "src/models/ProjectResult.ts",
			"qualifiedName": "__type.display_categories"
		},
		"436": {
			"sourceFileName": "src/models/ProjectResult.ts",
			"qualifiedName": "__type.versions"
		},
		"437": {
			"sourceFileName": "src/models/ProjectResult.ts",
			"qualifiedName": "__type.follows"
		},
		"438": {
			"sourceFileName": "src/models/ProjectResult.ts",
			"qualifiedName": "__type.date_created"
		},
		"439": {
			"sourceFileName": "src/models/ProjectResult.ts",
			"qualifiedName": "__type.date_modified"
		},
		"440": {
			"sourceFileName": "src/models/ProjectResult.ts",
			"qualifiedName": "__type.latest_version"
		},
		"441": {
			"sourceFileName": "src/models/ProjectResult.ts",
			"qualifiedName": "__type.license"
		},
		"442": {
			"sourceFileName": "src/models/ProjectResult.ts",
			"qualifiedName": "__type.gallery"
		},
		"443": {
			"sourceFileName": "src/models/ProjectResult.ts",
			"qualifiedName": "__type.featured_gallery"
		},
		"444": {
			"sourceFileName": "src/models/Report.ts",
			"qualifiedName": "Report"
		},
		"445": {
			"sourceFileName": "src/models/Report.ts",
			"qualifiedName": "__type"
		},
		"446": {
			"sourceFileName": "src/models/Report.ts",
			"qualifiedName": "__type.id"
		},
		"447": {
			"sourceFileName": "src/models/Report.ts",
			"qualifiedName": "__type.reporter"
		},
		"448": {
			"sourceFileName": "src/models/Report.ts",
			"qualifiedName": "__type.created"
		},
		"449": {
			"sourceFileName": "src/models/Report.ts",
			"qualifiedName": "__type.closed"
		},
		"450": {
			"sourceFileName": "src/models/Report.ts",
			"qualifiedName": "__type.thread_id"
		},
		"451": {
			"sourceFileName": "src/models/ReportIdentifier.ts",
			"qualifiedName": "ReportIdentifier"
		},
		"452": {
			"sourceFileName": "src/models/Schedule.ts",
			"qualifiedName": "Schedule"
		},
		"453": {
			"sourceFileName": "src/models/Schedule.ts",
			"qualifiedName": "__type"
		},
		"454": {
			"sourceFileName": "src/models/Schedule.ts",
			"qualifiedName": "__type.time"
		},
		"455": {
			"sourceFileName": "src/models/Schedule.ts",
			"qualifiedName": "__type.requested_status"
		},
		"456": {
			"sourceFileName": "src/models/Schedule.ts",
			"qualifiedName": "Schedule"
		},
		"457": {
			"sourceFileName": "src/models/Schedule.ts",
			"qualifiedName": "Schedule.requested_status"
		},
		"458": {
			"sourceFileName": "src/models/Schedule.ts",
			"qualifiedName": "Schedule.requested_status.APPROVED"
		},
		"459": {
			"sourceFileName": "src/models/Schedule.ts",
			"qualifiedName": "Schedule.requested_status.ARCHIVED"
		},
		"460": {
			"sourceFileName": "src/models/Schedule.ts",
			"qualifiedName": "Schedule.requested_status.UNLISTED"
		},
		"461": {
			"sourceFileName": "src/models/Schedule.ts",
			"qualifiedName": "Schedule.requested_status.PRIVATE"
		},
		"462": {
			"sourceFileName": "src/models/Schedule.ts",
			"qualifiedName": "Schedule.requested_status.DRAFT"
		},
		"463": {
			"sourceFileName": "src/models/SearchResults.ts",
			"qualifiedName": "SearchResults"
		},
		"464": {
			"sourceFileName": "src/models/SearchResults.ts",
			"qualifiedName": "__type"
		},
		"465": {
			"sourceFileName": "src/models/SearchResults.ts",
			"qualifiedName": "__type.hits"
		},
		"466": {
			"sourceFileName": "src/models/SearchResults.ts",
			"qualifiedName": "__type.offset"
		},
		"467": {
			"sourceFileName": "src/models/SearchResults.ts",
			"qualifiedName": "__type.limit"
		},
		"468": {
			"sourceFileName": "src/models/SearchResults.ts",
			"qualifiedName": "__type.total_hits"
		},
		"469": {
			"sourceFileName": "src/models/ServerRenderedProject.ts",
			"qualifiedName": "ServerRenderedProject"
		},
		"470": {
			"sourceFileName": "src/models/ServerRenderedProject.ts",
			"qualifiedName": "__type"
		},
		"471": {
			"sourceFileName": "src/models/ServerRenderedProject.ts",
			"qualifiedName": "__type.project_type"
		},
		"472": {
			"sourceFileName": "src/models/ServerRenderedProject.ts",
			"qualifiedName": "__type.downloads"
		},
		"473": {
			"sourceFileName": "src/models/ServerRenderedProject.ts",
			"qualifiedName": "__type.icon_url"
		},
		"474": {
			"sourceFileName": "src/models/ServerRenderedProject.ts",
			"qualifiedName": "__type.color"
		},
		"475": {
			"sourceFileName": "src/models/ServerRenderedProject.ts",
			"qualifiedName": "__type.thread_id"
		},
		"476": {
			"sourceFileName": "src/models/ServerRenderedProject.ts",
			"qualifiedName": "__type.monetization_status"
		},
		"477": {
			"sourceFileName": "src/models/ServerRenderedProject.ts",
			"qualifiedName": "ServerRenderedProject"
		},
		"478": {
			"sourceFileName": "src/models/ServerRenderedProject.ts",
			"qualifiedName": "ServerRenderedProject.project_type"
		},
		"479": {
			"sourceFileName": "src/models/ServerRenderedProject.ts",
			"qualifiedName": "ServerRenderedProject.project_type.MOD"
		},
		"480": {
			"sourceFileName": "src/models/ServerRenderedProject.ts",
			"qualifiedName": "ServerRenderedProject.project_type.MODPACK"
		},
		"481": {
			"sourceFileName": "src/models/ServerRenderedProject.ts",
			"qualifiedName": "ServerRenderedProject.project_type.RESOURCEPACK"
		},
		"482": {
			"sourceFileName": "src/models/ServerRenderedProject.ts",
			"qualifiedName": "ServerRenderedProject.project_type.SHADER"
		},
		"483": {
			"sourceFileName": "src/models/ServerRenderedProject.ts",
			"qualifiedName": "ServerRenderedProject.monetization_status"
		},
		"484": {
			"sourceFileName": "src/models/ServerRenderedProject.ts",
			"qualifiedName": "ServerRenderedProject.monetization_status.MONETIZED"
		},
		"485": {
			"sourceFileName": "src/models/ServerRenderedProject.ts",
			"qualifiedName": "ServerRenderedProject.monetization_status.DEMONETIZED"
		},
		"486": {
			"sourceFileName": "src/models/ServerRenderedProject.ts",
			"qualifiedName": "ServerRenderedProject.monetization_status.FORCE_DEMONETIZED"
		},
		"487": {
			"sourceFileName": "src/models/Statistics.ts",
			"qualifiedName": "Statistics"
		},
		"488": {
			"sourceFileName": "src/models/Statistics.ts",
			"qualifiedName": "__type"
		},
		"489": {
			"sourceFileName": "src/models/Statistics.ts",
			"qualifiedName": "__type.projects"
		},
		"490": {
			"sourceFileName": "src/models/Statistics.ts",
			"qualifiedName": "__type.versions"
		},
		"491": {
			"sourceFileName": "src/models/Statistics.ts",
			"qualifiedName": "__type.files"
		},
		"492": {
			"sourceFileName": "src/models/Statistics.ts",
			"qualifiedName": "__type.authors"
		},
		"493": {
			"sourceFileName": "src/models/TeamIdentifier.ts",
			"qualifiedName": "TeamIdentifier"
		},
		"494": {
			"sourceFileName": "src/models/TeamMember.ts",
			"qualifiedName": "TeamMember"
		},
		"495": {
			"sourceFileName": "src/models/TeamMember.ts",
			"qualifiedName": "__type"
		},
		"496": {
			"sourceFileName": "src/models/TeamMember.ts",
			"qualifiedName": "__type.team_id"
		},
		"497": {
			"sourceFileName": "src/models/TeamMember.ts",
			"qualifiedName": "__type.user"
		},
		"498": {
			"sourceFileName": "src/models/TeamMember.ts",
			"qualifiedName": "__type.role"
		},
		"499": {
			"sourceFileName": "src/models/TeamMember.ts",
			"qualifiedName": "__type.permissions"
		},
		"500": {
			"sourceFileName": "src/models/TeamMember.ts",
			"qualifiedName": "__type.accepted"
		},
		"501": {
			"sourceFileName": "src/models/TeamMember.ts",
			"qualifiedName": "__type.payouts_split"
		},
		"502": {
			"sourceFileName": "src/models/TeamMember.ts",
			"qualifiedName": "__type.ordering"
		},
		"503": {
			"sourceFileName": "src/models/Thread.ts",
			"qualifiedName": "Thread"
		},
		"504": {
			"sourceFileName": "src/models/Thread.ts",
			"qualifiedName": "__type"
		},
		"505": {
			"sourceFileName": "src/models/Thread.ts",
			"qualifiedName": "__type.id"
		},
		"506": {
			"sourceFileName": "src/models/Thread.ts",
			"qualifiedName": "__type.type"
		},
		"507": {
			"sourceFileName": "src/models/Thread.ts",
			"qualifiedName": "__type.project_id"
		},
		"508": {
			"sourceFileName": "src/models/Thread.ts",
			"qualifiedName": "__type.report_id"
		},
		"509": {
			"sourceFileName": "src/models/Thread.ts",
			"qualifiedName": "__type.messages"
		},
		"510": {
			"sourceFileName": "src/models/Thread.ts",
			"qualifiedName": "__type.members"
		},
		"511": {
			"sourceFileName": "src/models/Thread.ts",
			"qualifiedName": "Thread"
		},
		"512": {
			"sourceFileName": "src/models/Thread.ts",
			"qualifiedName": "Thread.type"
		},
		"513": {
			"sourceFileName": "src/models/Thread.ts",
			"qualifiedName": "Thread.type.PROJECT"
		},
		"514": {
			"sourceFileName": "src/models/Thread.ts",
			"qualifiedName": "Thread.type.REPORT"
		},
		"515": {
			"sourceFileName": "src/models/Thread.ts",
			"qualifiedName": "Thread.type.DIRECT_MESSAGE"
		},
		"516": {
			"sourceFileName": "src/models/ThreadIdentifier.ts",
			"qualifiedName": "ThreadIdentifier"
		},
		"517": {
			"sourceFileName": "src/models/ThreadMessage.ts",
			"qualifiedName": "ThreadMessage"
		},
		"518": {
			"sourceFileName": "src/models/ThreadMessage.ts",
			"qualifiedName": "__type"
		},
		"519": {
			"sourceFileName": "src/models/ThreadMessage.ts",
			"qualifiedName": "__type.id"
		},
		"520": {
			"sourceFileName": "src/models/ThreadMessage.ts",
			"qualifiedName": "__type.author_id"
		},
		"521": {
			"sourceFileName": "src/models/ThreadMessage.ts",
			"qualifiedName": "__type.body"
		},
		"522": {
			"sourceFileName": "src/models/ThreadMessage.ts",
			"qualifiedName": "__type.created"
		},
		"523": {
			"sourceFileName": "src/models/ThreadMessageBody.ts",
			"qualifiedName": "ThreadMessageBody"
		},
		"524": {
			"sourceFileName": "src/models/ThreadMessageBody.ts",
			"qualifiedName": "__type"
		},
		"525": {
			"sourceFileName": "src/models/ThreadMessageBody.ts",
			"qualifiedName": "__type.type"
		},
		"526": {
			"sourceFileName": "src/models/ThreadMessageBody.ts",
			"qualifiedName": "__type.body"
		},
		"527": {
			"sourceFileName": "src/models/ThreadMessageBody.ts",
			"qualifiedName": "__type.private"
		},
		"528": {
			"sourceFileName": "src/models/ThreadMessageBody.ts",
			"qualifiedName": "__type.replying_to"
		},
		"529": {
			"sourceFileName": "src/models/ThreadMessageBody.ts",
			"qualifiedName": "__type.old_status"
		},
		"530": {
			"sourceFileName": "src/models/ThreadMessageBody.ts",
			"qualifiedName": "__type.new_status"
		},
		"531": {
			"sourceFileName": "src/models/ThreadMessageBody.ts",
			"qualifiedName": "ThreadMessageBody"
		},
		"532": {
			"sourceFileName": "src/models/ThreadMessageBody.ts",
			"qualifiedName": "ThreadMessageBody.type"
		},
		"533": {
			"sourceFileName": "src/models/ThreadMessageBody.ts",
			"qualifiedName": "ThreadMessageBody.type.STATUS_CHANGE"
		},
		"534": {
			"sourceFileName": "src/models/ThreadMessageBody.ts",
			"qualifiedName": "ThreadMessageBody.type.TEXT"
		},
		"535": {
			"sourceFileName": "src/models/ThreadMessageBody.ts",
			"qualifiedName": "ThreadMessageBody.type.THREAD_CLOSURE"
		},
		"536": {
			"sourceFileName": "src/models/ThreadMessageBody.ts",
			"qualifiedName": "ThreadMessageBody.type.DELETED"
		},
		"537": {
			"sourceFileName": "src/models/ThreadMessageBody.ts",
			"qualifiedName": "ThreadMessageBody.old_status"
		},
		"538": {
			"sourceFileName": "src/models/ThreadMessageBody.ts",
			"qualifiedName": "ThreadMessageBody.old_status.APPROVED"
		},
		"539": {
			"sourceFileName": "src/models/ThreadMessageBody.ts",
			"qualifiedName": "ThreadMessageBody.old_status.ARCHIVED"
		},
		"540": {
			"sourceFileName": "src/models/ThreadMessageBody.ts",
			"qualifiedName": "ThreadMessageBody.old_status.REJECTED"
		},
		"541": {
			"sourceFileName": "src/models/ThreadMessageBody.ts",
			"qualifiedName": "ThreadMessageBody.old_status.DRAFT"
		},
		"542": {
			"sourceFileName": "src/models/ThreadMessageBody.ts",
			"qualifiedName": "ThreadMessageBody.old_status.UNLISTED"
		},
		"543": {
			"sourceFileName": "src/models/ThreadMessageBody.ts",
			"qualifiedName": "ThreadMessageBody.old_status.PROCESSING"
		},
		"544": {
			"sourceFileName": "src/models/ThreadMessageBody.ts",
			"qualifiedName": "ThreadMessageBody.old_status.WITHHELD"
		},
		"545": {
			"sourceFileName": "src/models/ThreadMessageBody.ts",
			"qualifiedName": "ThreadMessageBody.old_status.SCHEDULED"
		},
		"546": {
			"sourceFileName": "src/models/ThreadMessageBody.ts",
			"qualifiedName": "ThreadMessageBody.old_status.PRIVATE"
		},
		"547": {
			"sourceFileName": "src/models/ThreadMessageBody.ts",
			"qualifiedName": "ThreadMessageBody.old_status.UNKNOWN"
		},
		"548": {
			"sourceFileName": "src/models/ThreadMessageBody.ts",
			"qualifiedName": "ThreadMessageBody.new_status"
		},
		"549": {
			"sourceFileName": "src/models/ThreadMessageBody.ts",
			"qualifiedName": "ThreadMessageBody.new_status.APPROVED"
		},
		"550": {
			"sourceFileName": "src/models/ThreadMessageBody.ts",
			"qualifiedName": "ThreadMessageBody.new_status.ARCHIVED"
		},
		"551": {
			"sourceFileName": "src/models/ThreadMessageBody.ts",
			"qualifiedName": "ThreadMessageBody.new_status.REJECTED"
		},
		"552": {
			"sourceFileName": "src/models/ThreadMessageBody.ts",
			"qualifiedName": "ThreadMessageBody.new_status.DRAFT"
		},
		"553": {
			"sourceFileName": "src/models/ThreadMessageBody.ts",
			"qualifiedName": "ThreadMessageBody.new_status.UNLISTED"
		},
		"554": {
			"sourceFileName": "src/models/ThreadMessageBody.ts",
			"qualifiedName": "ThreadMessageBody.new_status.PROCESSING"
		},
		"555": {
			"sourceFileName": "src/models/ThreadMessageBody.ts",
			"qualifiedName": "ThreadMessageBody.new_status.WITHHELD"
		},
		"556": {
			"sourceFileName": "src/models/ThreadMessageBody.ts",
			"qualifiedName": "ThreadMessageBody.new_status.SCHEDULED"
		},
		"557": {
			"sourceFileName": "src/models/ThreadMessageBody.ts",
			"qualifiedName": "ThreadMessageBody.new_status.PRIVATE"
		},
		"558": {
			"sourceFileName": "src/models/ThreadMessageBody.ts",
			"qualifiedName": "ThreadMessageBody.new_status.UNKNOWN"
		},
		"559": {
			"sourceFileName": "src/models/User.ts",
			"qualifiedName": "User"
		},
		"560": {
			"sourceFileName": "src/models/User.ts",
			"qualifiedName": "__type"
		},
		"561": {
			"sourceFileName": "src/models/User.ts",
			"qualifiedName": "__type.id"
		},
		"562": {
			"sourceFileName": "src/models/User.ts",
			"qualifiedName": "__type.avatar_url"
		},
		"563": {
			"sourceFileName": "src/models/User.ts",
			"qualifiedName": "__type.created"
		},
		"564": {
			"sourceFileName": "src/models/User.ts",
			"qualifiedName": "__type.role"
		},
		"565": {
			"sourceFileName": "src/models/User.ts",
			"qualifiedName": "__type.badges"
		},
		"566": {
			"sourceFileName": "src/models/User.ts",
			"qualifiedName": "__type.auth_providers"
		},
		"567": {
			"sourceFileName": "src/models/User.ts",
			"qualifiedName": "__type.email_verified"
		},
		"568": {
			"sourceFileName": "src/models/User.ts",
			"qualifiedName": "__type.has_password"
		},
		"569": {
			"sourceFileName": "src/models/User.ts",
			"qualifiedName": "__type.has_totp"
		},
		"570": {
			"sourceFileName": "src/models/User.ts",
			"qualifiedName": "__type.github_id"
		},
		"571": {
			"sourceFileName": "src/models/User.ts",
			"qualifiedName": "User"
		},
		"572": {
			"sourceFileName": "src/models/User.ts",
			"qualifiedName": "User.role"
		},
		"573": {
			"sourceFileName": "src/models/User.ts",
			"qualifiedName": "User.role.ADMIN"
		},
		"574": {
			"sourceFileName": "src/models/User.ts",
			"qualifiedName": "User.role.MODERATOR"
		},
		"575": {
			"sourceFileName": "src/models/User.ts",
			"qualifiedName": "User.role.DEVELOPER"
		},
		"576": {
			"sourceFileName": "src/models/UserIdentifier.ts",
			"qualifiedName": "UserIdentifier"
		},
		"577": {
			"sourceFileName": "src/models/UserPayoutData.ts",
			"qualifiedName": "UserPayoutData"
		},
		"578": {
			"sourceFileName": "src/models/UserPayoutData.ts",
			"qualifiedName": "__type"
		},
		"579": {
			"sourceFileName": "src/models/UserPayoutData.ts",
			"qualifiedName": "__type.balance"
		},
		"580": {
			"sourceFileName": "src/models/UserPayoutData.ts",
			"qualifiedName": "__type.payout_wallet"
		},
		"581": {
			"sourceFileName": "src/models/UserPayoutData.ts",
			"qualifiedName": "__type.payout_wallet_type"
		},
		"582": {
			"sourceFileName": "src/models/UserPayoutData.ts",
			"qualifiedName": "__type.payout_address"
		},
		"583": {
			"sourceFileName": "src/models/UserPayoutData.ts",
			"qualifiedName": "UserPayoutData"
		},
		"584": {
			"sourceFileName": "src/models/UserPayoutData.ts",
			"qualifiedName": "UserPayoutData.payout_wallet"
		},
		"585": {
			"sourceFileName": "src/models/UserPayoutData.ts",
			"qualifiedName": "UserPayoutData.payout_wallet.PAYPAL"
		},
		"586": {
			"sourceFileName": "src/models/UserPayoutData.ts",
			"qualifiedName": "UserPayoutData.payout_wallet.VENMO"
		},
		"587": {
			"sourceFileName": "src/models/UserPayoutData.ts",
			"qualifiedName": "UserPayoutData.payout_wallet_type"
		},
		"588": {
			"sourceFileName": "src/models/UserPayoutData.ts",
			"qualifiedName": "UserPayoutData.payout_wallet_type.EMAIL"
		},
		"589": {
			"sourceFileName": "src/models/UserPayoutData.ts",
			"qualifiedName": "UserPayoutData.payout_wallet_type.PHONE"
		},
		"590": {
			"sourceFileName": "src/models/UserPayoutData.ts",
			"qualifiedName": "UserPayoutData.payout_wallet_type.USER_HANDLE"
		},
		"591": {
			"sourceFileName": "src/models/UserPayoutHistory.ts",
			"qualifiedName": "UserPayoutHistory"
		},
		"592": {
			"sourceFileName": "src/models/UserPayoutHistory.ts",
			"qualifiedName": "__type"
		},
		"593": {
			"sourceFileName": "src/models/UserPayoutHistory.ts",
			"qualifiedName": "__type.all_time"
		},
		"594": {
			"sourceFileName": "src/models/UserPayoutHistory.ts",
			"qualifiedName": "__type.last_month"
		},
		"595": {
			"sourceFileName": "src/models/UserPayoutHistory.ts",
			"qualifiedName": "__type.payouts"
		},
		"596": {
			"sourceFileName": "src/models/UserPayoutHistoryEntry.ts",
			"qualifiedName": "UserPayoutHistoryEntry"
		},
		"597": {
			"sourceFileName": "src/models/UserPayoutHistoryEntry.ts",
			"qualifiedName": "__type"
		},
		"598": {
			"sourceFileName": "src/models/UserPayoutHistoryEntry.ts",
			"qualifiedName": "__type.created"
		},
		"599": {
			"sourceFileName": "src/models/UserPayoutHistoryEntry.ts",
			"qualifiedName": "__type.amount"
		},
		"600": {
			"sourceFileName": "src/models/UserPayoutHistoryEntry.ts",
			"qualifiedName": "__type.status"
		},
		"601": {
			"sourceFileName": "src/models/Version.ts",
			"qualifiedName": "Version"
		},
		"602": {
			"sourceFileName": "src/models/Version.ts",
			"qualifiedName": "__type"
		},
		"603": {
			"sourceFileName": "src/models/Version.ts",
			"qualifiedName": "__type.id"
		},
		"604": {
			"sourceFileName": "src/models/Version.ts",
			"qualifiedName": "__type.project_id"
		},
		"605": {
			"sourceFileName": "src/models/Version.ts",
			"qualifiedName": "__type.author_id"
		},
		"606": {
			"sourceFileName": "src/models/Version.ts",
			"qualifiedName": "__type.date_published"
		},
		"607": {
			"sourceFileName": "src/models/Version.ts",
			"qualifiedName": "__type.downloads"
		},
		"608": {
			"sourceFileName": "src/models/Version.ts",
			"qualifiedName": "__type.changelog_url"
		},
		"609": {
			"sourceFileName": "src/models/Version.ts",
			"qualifiedName": "__type.files"
		},
		"610": {
			"sourceFileName": "src/models/VersionDependency.ts",
			"qualifiedName": "VersionDependency"
		},
		"611": {
			"sourceFileName": "src/models/VersionDependency.ts",
			"qualifiedName": "__type"
		},
		"612": {
			"sourceFileName": "src/models/VersionDependency.ts",
			"qualifiedName": "__type.version_id"
		},
		"613": {
			"sourceFileName": "src/models/VersionDependency.ts",
			"qualifiedName": "__type.project_id"
		},
		"614": {
			"sourceFileName": "src/models/VersionDependency.ts",
			"qualifiedName": "__type.file_name"
		},
		"615": {
			"sourceFileName": "src/models/VersionDependency.ts",
			"qualifiedName": "__type.dependency_type"
		},
		"616": {
			"sourceFileName": "src/models/VersionDependency.ts",
			"qualifiedName": "VersionDependency"
		},
		"617": {
			"sourceFileName": "src/models/VersionDependency.ts",
			"qualifiedName": "VersionDependency.dependency_type"
		},
		"618": {
			"sourceFileName": "src/models/VersionDependency.ts",
			"qualifiedName": "VersionDependency.dependency_type.REQUIRED"
		},
		"619": {
			"sourceFileName": "src/models/VersionDependency.ts",
			"qualifiedName": "VersionDependency.dependency_type.OPTIONAL"
		},
		"620": {
			"sourceFileName": "src/models/VersionDependency.ts",
			"qualifiedName": "VersionDependency.dependency_type.INCOMPATIBLE"
		},
		"621": {
			"sourceFileName": "src/models/VersionDependency.ts",
			"qualifiedName": "VersionDependency.dependency_type.EMBEDDED"
		},
		"622": {
			"sourceFileName": "src/models/VersionFile.ts",
			"qualifiedName": "VersionFile"
		},
		"623": {
			"sourceFileName": "src/models/VersionFile.ts",
			"qualifiedName": "__type"
		},
		"624": {
			"sourceFileName": "src/models/VersionFile.ts",
			"qualifiedName": "__type.hashes"
		},
		"625": {
			"sourceFileName": "src/models/VersionFile.ts",
			"qualifiedName": "__type.url"
		},
		"626": {
			"sourceFileName": "src/models/VersionFile.ts",
			"qualifiedName": "__type.filename"
		},
		"627": {
			"sourceFileName": "src/models/VersionFile.ts",
			"qualifiedName": "__type.primary"
		},
		"628": {
			"sourceFileName": "src/models/VersionFile.ts",
			"qualifiedName": "__type.size"
		},
		"629": {
			"sourceFileName": "src/models/VersionFile.ts",
			"qualifiedName": "__type.file_type"
		},
		"630": {
			"sourceFileName": "src/models/VersionFile.ts",
			"qualifiedName": "VersionFile"
		},
		"631": {
			"sourceFileName": "src/models/VersionFile.ts",
			"qualifiedName": "VersionFile.file_type"
		},
		"632": {
			"sourceFileName": "src/models/VersionFile.ts",
			"qualifiedName": "VersionFile.file_type.REQUIRED_RESOURCE_PACK"
		},
		"633": {
			"sourceFileName": "src/models/VersionFile.ts",
			"qualifiedName": "VersionFile.file_type.OPTIONAL_RESOURCE_PACK"
		},
		"634": {
			"sourceFileName": "src/models/VersionFileHashes.ts",
			"qualifiedName": "VersionFileHashes"
		},
		"635": {
			"sourceFileName": "src/models/VersionFileHashes.ts",
			"qualifiedName": "__type"
		},
		"636": {
			"sourceFileName": "src/models/VersionFileHashes.ts",
			"qualifiedName": "__type.sha512"
		},
		"637": {
			"sourceFileName": "src/models/VersionFileHashes.ts",
			"qualifiedName": "__type.sha1"
		},
		"638": {
			"sourceFileName": "src/models/VersionIdentifier.ts",
			"qualifiedName": "VersionIdentifier"
		},
		"639": {
			"sourceFileName": "src/services/MiscService.ts",
			"qualifiedName": "MiscService"
		},
		"640": {
			"sourceFileName": "src/services/MiscService.ts",
			"qualifiedName": "MiscService.forgeUpdates"
		},
		"641": {
			"sourceFileName": "src/services/MiscService.ts",
			"qualifiedName": "MiscService.forgeUpdates"
		},
		"642": {
			"sourceFileName": "src/services/MiscService.ts",
			"qualifiedName": "idSlug"
		},
		"643": {
			"sourceFileName": "src/services/MiscService.ts",
			"qualifiedName": "MiscService.statistics"
		},
		"644": {
			"sourceFileName": "src/services/MiscService.ts",
			"qualifiedName": "MiscService.statistics"
		},
		"647": {
			"sourceFileName": "src/services/NotificationsService.ts",
			"qualifiedName": "NotificationsService"
		},
		"648": {
			"sourceFileName": "src/services/NotificationsService.ts",
			"qualifiedName": "NotificationsService.getUserNotifications"
		},
		"649": {
			"sourceFileName": "src/services/NotificationsService.ts",
			"qualifiedName": "NotificationsService.getUserNotifications"
		},
		"650": {
			"sourceFileName": "src/services/NotificationsService.ts",
			"qualifiedName": "idUsername"
		},
		"651": {
			"sourceFileName": "src/services/NotificationsService.ts",
			"qualifiedName": "NotificationsService.getNotification"
		},
		"652": {
			"sourceFileName": "src/services/NotificationsService.ts",
			"qualifiedName": "NotificationsService.getNotification"
		},
		"653": {
			"sourceFileName": "src/services/NotificationsService.ts",
			"qualifiedName": "id"
		},
		"654": {
			"sourceFileName": "src/services/NotificationsService.ts",
			"qualifiedName": "NotificationsService.readNotification"
		},
		"655": {
			"sourceFileName": "src/services/NotificationsService.ts",
			"qualifiedName": "NotificationsService.readNotification"
		},
		"656": {
			"sourceFileName": "src/services/NotificationsService.ts",
			"qualifiedName": "id"
		},
		"657": {
			"sourceFileName": "src/services/NotificationsService.ts",
			"qualifiedName": "NotificationsService.deleteNotification"
		},
		"658": {
			"sourceFileName": "src/services/NotificationsService.ts",
			"qualifiedName": "NotificationsService.deleteNotification"
		},
		"659": {
			"sourceFileName": "src/services/NotificationsService.ts",
			"qualifiedName": "id"
		},
		"660": {
			"sourceFileName": "src/services/NotificationsService.ts",
			"qualifiedName": "NotificationsService.getNotifications"
		},
		"661": {
			"sourceFileName": "src/services/NotificationsService.ts",
			"qualifiedName": "NotificationsService.getNotifications"
		},
		"662": {
			"sourceFileName": "src/services/NotificationsService.ts",
			"qualifiedName": "ids"
		},
		"663": {
			"sourceFileName": "src/services/NotificationsService.ts",
			"qualifiedName": "NotificationsService.readNotifications"
		},
		"664": {
			"sourceFileName": "src/services/NotificationsService.ts",
			"qualifiedName": "NotificationsService.readNotifications"
		},
		"665": {
			"sourceFileName": "src/services/NotificationsService.ts",
			"qualifiedName": "ids"
		},
		"666": {
			"sourceFileName": "src/services/NotificationsService.ts",
			"qualifiedName": "NotificationsService.deleteNotifications"
		},
		"667": {
			"sourceFileName": "src/services/NotificationsService.ts",
			"qualifiedName": "NotificationsService.deleteNotifications"
		},
		"668": {
			"sourceFileName": "src/services/NotificationsService.ts",
			"qualifiedName": "ids"
		},
		"671": {
			"sourceFileName": "src/services/ProjectsService.ts",
			"qualifiedName": "ProjectsService"
		},
		"672": {
			"sourceFileName": "src/services/ProjectsService.ts",
			"qualifiedName": "ProjectsService.searchProjects"
		},
		"673": {
			"sourceFileName": "src/services/ProjectsService.ts",
			"qualifiedName": "ProjectsService.searchProjects"
		},
		"674": {
			"sourceFileName": "src/services/ProjectsService.ts",
			"qualifiedName": "query"
		},
		"675": {
			"sourceFileName": "src/services/ProjectsService.ts",
			"qualifiedName": "facets"
		},
		"676": {
			"sourceFileName": "src/services/ProjectsService.ts",
			"qualifiedName": "index"
		},
		"677": {
			"sourceFileName": "src/services/ProjectsService.ts",
			"qualifiedName": "offset"
		},
		"678": {
			"sourceFileName": "src/services/ProjectsService.ts",
			"qualifiedName": "limit"
		},
		"679": {
			"sourceFileName": "src/services/ProjectsService.ts",
			"qualifiedName": "ProjectsService.getProject"
		},
		"680": {
			"sourceFileName": "src/services/ProjectsService.ts",
			"qualifiedName": "ProjectsService.getProject"
		},
		"681": {
			"sourceFileName": "src/services/ProjectsService.ts",
			"qualifiedName": "idSlug"
		},
		"682": {
			"sourceFileName": "src/services/ProjectsService.ts",
			"qualifiedName": "ProjectsService.modifyProject"
		},
		"683": {
			"sourceFileName": "src/services/ProjectsService.ts",
			"qualifiedName": "ProjectsService.modifyProject"
		},
		"684": {
			"sourceFileName": "src/services/ProjectsService.ts",
			"qualifiedName": "idSlug"
		},
		"685": {
			"sourceFileName": "src/services/ProjectsService.ts",
			"qualifiedName": "requestBody"
		},
		"686": {
			"sourceFileName": "src/services/ProjectsService.ts",
			"qualifiedName": "ProjectsService.deleteProject"
		},
		"687": {
			"sourceFileName": "src/services/ProjectsService.ts",
			"qualifiedName": "ProjectsService.deleteProject"
		},
		"688": {
			"sourceFileName": "src/services/ProjectsService.ts",
			"qualifiedName": "idSlug"
		},
		"689": {
			"sourceFileName": "src/services/ProjectsService.ts",
			"qualifiedName": "ProjectsService.getProjects"
		},
		"690": {
			"sourceFileName": "src/services/ProjectsService.ts",
			"qualifiedName": "ProjectsService.getProjects"
		},
		"691": {
			"sourceFileName": "src/services/ProjectsService.ts",
			"qualifiedName": "ids"
		},
		"692": {
			"sourceFileName": "src/services/ProjectsService.ts",
			"qualifiedName": "ProjectsService.patchProjects"
		},
		"693": {
			"sourceFileName": "src/services/ProjectsService.ts",
			"qualifiedName": "ProjectsService.patchProjects"
		},
		"694": {
			"sourceFileName": "src/services/ProjectsService.ts",
			"qualifiedName": "ids"
		},
		"695": {
			"sourceFileName": "src/services/ProjectsService.ts",
			"qualifiedName": "requestBody"
		},
		"696": {
			"sourceFileName": "src/services/ProjectsService.ts",
			"qualifiedName": "ProjectsService.randomProjects"
		},
		"697": {
			"sourceFileName": "src/services/ProjectsService.ts",
			"qualifiedName": "ProjectsService.randomProjects"
		},
		"698": {
			"sourceFileName": "src/services/ProjectsService.ts",
			"qualifiedName": "count"
		},
		"699": {
			"sourceFileName": "src/services/ProjectsService.ts",
			"qualifiedName": "ProjectsService.createProject"
		},
		"700": {
			"sourceFileName": "src/services/ProjectsService.ts",
			"qualifiedName": "ProjectsService.createProject"
		},
		"701": {
			"sourceFileName": "src/services/ProjectsService.ts",
			"qualifiedName": "formData"
		},
		"702": {
			"sourceFileName": "src/services/ProjectsService.ts",
			"qualifiedName": "ProjectsService.changeProjectIcon"
		},
		"703": {
			"sourceFileName": "src/services/ProjectsService.ts",
			"qualifiedName": "ProjectsService.changeProjectIcon"
		},
		"704": {
			"sourceFileName": "src/services/ProjectsService.ts",
			"qualifiedName": "idSlug"
		},
		"705": {
			"sourceFileName": "src/services/ProjectsService.ts",
			"qualifiedName": "ext"
		},
		"706": {
			"sourceFileName": "src/services/ProjectsService.ts",
			"qualifiedName": "requestBody"
		},
		"707": {
			"sourceFileName": "src/services/ProjectsService.ts",
			"qualifiedName": "ProjectsService.deleteProjectIcon"
		},
		"708": {
			"sourceFileName": "src/services/ProjectsService.ts",
			"qualifiedName": "ProjectsService.deleteProjectIcon"
		},
		"709": {
			"sourceFileName": "src/services/ProjectsService.ts",
			"qualifiedName": "idSlug"
		},
		"710": {
			"sourceFileName": "src/services/ProjectsService.ts",
			"qualifiedName": "ProjectsService.checkProjectValidity"
		},
		"711": {
			"sourceFileName": "src/services/ProjectsService.ts",
			"qualifiedName": "ProjectsService.checkProjectValidity"
		},
		"712": {
			"sourceFileName": "src/services/ProjectsService.ts",
			"qualifiedName": "idSlug"
		},
		"713": {
			"sourceFileName": "src/services/ProjectsService.ts",
			"qualifiedName": "ProjectsService.addGalleryImage"
		},
		"714": {
			"sourceFileName": "src/services/ProjectsService.ts",
			"qualifiedName": "ProjectsService.addGalleryImage"
		},
		"715": {
			"sourceFileName": "src/services/ProjectsService.ts",
			"qualifiedName": "idSlug"
		},
		"716": {
			"sourceFileName": "src/services/ProjectsService.ts",
			"qualifiedName": "ext"
		},
		"717": {
			"sourceFileName": "src/services/ProjectsService.ts",
			"qualifiedName": "featured"
		},
		"718": {
			"sourceFileName": "src/services/ProjectsService.ts",
			"qualifiedName": "title"
		},
		"719": {
			"sourceFileName": "src/services/ProjectsService.ts",
			"qualifiedName": "description"
		},
		"720": {
			"sourceFileName": "src/services/ProjectsService.ts",
			"qualifiedName": "ordering"
		},
		"721": {
			"sourceFileName": "src/services/ProjectsService.ts",
			"qualifiedName": "requestBody"
		},
		"722": {
			"sourceFileName": "src/services/ProjectsService.ts",
			"qualifiedName": "ProjectsService.modifyGalleryImage"
		},
		"723": {
			"sourceFileName": "src/services/ProjectsService.ts",
			"qualifiedName": "ProjectsService.modifyGalleryImage"
		},
		"724": {
			"sourceFileName": "src/services/ProjectsService.ts",
			"qualifiedName": "idSlug"
		},
		"725": {
			"sourceFileName": "src/services/ProjectsService.ts",
			"qualifiedName": "url"
		},
		"726": {
			"sourceFileName": "src/services/ProjectsService.ts",
			"qualifiedName": "featured"
		},
		"727": {
			"sourceFileName": "src/services/ProjectsService.ts",
			"qualifiedName": "title"
		},
		"728": {
			"sourceFileName": "src/services/ProjectsService.ts",
			"qualifiedName": "description"
		},
		"729": {
			"sourceFileName": "src/services/ProjectsService.ts",
			"qualifiedName": "ordering"
		},
		"730": {
			"sourceFileName": "src/services/ProjectsService.ts",
			"qualifiedName": "ProjectsService.deleteGalleryImage"
		},
		"731": {
			"sourceFileName": "src/services/ProjectsService.ts",
			"qualifiedName": "ProjectsService.deleteGalleryImage"
		},
		"732": {
			"sourceFileName": "src/services/ProjectsService.ts",
			"qualifiedName": "idSlug"
		},
		"733": {
			"sourceFileName": "src/services/ProjectsService.ts",
			"qualifiedName": "url"
		},
		"734": {
			"sourceFileName": "src/services/ProjectsService.ts",
			"qualifiedName": "ProjectsService.getDependencies"
		},
		"735": {
			"sourceFileName": "src/services/ProjectsService.ts",
			"qualifiedName": "ProjectsService.getDependencies"
		},
		"736": {
			"sourceFileName": "src/services/ProjectsService.ts",
			"qualifiedName": "idSlug"
		},
		"737": {
			"sourceFileName": "src/services/ProjectsService.ts",
			"qualifiedName": "ProjectsService.followProject"
		},
		"738": {
			"sourceFileName": "src/services/ProjectsService.ts",
			"qualifiedName": "ProjectsService.followProject"
		},
		"739": {
			"sourceFileName": "src/services/ProjectsService.ts",
			"qualifiedName": "idSlug"
		},
		"740": {
			"sourceFileName": "src/services/ProjectsService.ts",
			"qualifiedName": "ProjectsService.unfollowProject"
		},
		"741": {
			"sourceFileName": "src/services/ProjectsService.ts",
			"qualifiedName": "ProjectsService.unfollowProject"
		},
		"742": {
			"sourceFileName": "src/services/ProjectsService.ts",
			"qualifiedName": "idSlug"
		},
		"743": {
			"sourceFileName": "src/services/ProjectsService.ts",
			"qualifiedName": "ProjectsService.scheduleProject"
		},
		"744": {
			"sourceFileName": "src/services/ProjectsService.ts",
			"qualifiedName": "ProjectsService.scheduleProject"
		},
		"745": {
			"sourceFileName": "src/services/ProjectsService.ts",
			"qualifiedName": "idSlug"
		},
		"746": {
			"sourceFileName": "src/services/ProjectsService.ts",
			"qualifiedName": "requestBody"
		},
		"749": {
			"sourceFileName": "src/services/TagsService.ts",
			"qualifiedName": "TagsService"
		},
		"750": {
			"sourceFileName": "src/services/TagsService.ts",
			"qualifiedName": "TagsService.categoryList"
		},
		"751": {
			"sourceFileName": "src/services/TagsService.ts",
			"qualifiedName": "TagsService.categoryList"
		},
		"752": {
			"sourceFileName": "src/services/TagsService.ts",
			"qualifiedName": "TagsService.loaderList"
		},
		"753": {
			"sourceFileName": "src/services/TagsService.ts",
			"qualifiedName": "TagsService.loaderList"
		},
		"754": {
			"sourceFileName": "src/services/TagsService.ts",
			"qualifiedName": "TagsService.versionList"
		},
		"755": {
			"sourceFileName": "src/services/TagsService.ts",
			"qualifiedName": "TagsService.versionList"
		},
		"756": {
			"sourceFileName": "src/services/TagsService.ts",
			"qualifiedName": "TagsService.licenseList"
		},
		"757": {
			"sourceFileName": "src/services/TagsService.ts",
			"qualifiedName": "TagsService.licenseList"
		},
		"758": {
			"sourceFileName": "src/services/TagsService.ts",
			"qualifiedName": "TagsService.licenseText"
		},
		"759": {
			"sourceFileName": "src/services/TagsService.ts",
			"qualifiedName": "TagsService.licenseText"
		},
		"760": {
			"sourceFileName": "src/services/TagsService.ts",
			"qualifiedName": "id"
		},
		"761": {
			"sourceFileName": "src/services/TagsService.ts",
			"qualifiedName": "TagsService.donationPlatformList"
		},
		"762": {
			"sourceFileName": "src/services/TagsService.ts",
			"qualifiedName": "TagsService.donationPlatformList"
		},
		"763": {
			"sourceFileName": "src/services/TagsService.ts",
			"qualifiedName": "TagsService.reportTypeList"
		},
		"764": {
			"sourceFileName": "src/services/TagsService.ts",
			"qualifiedName": "TagsService.reportTypeList"
		},
		"765": {
			"sourceFileName": "src/services/TagsService.ts",
			"qualifiedName": "TagsService.projectTypeList"
		},
		"766": {
			"sourceFileName": "src/services/TagsService.ts",
			"qualifiedName": "TagsService.projectTypeList"
		},
		"767": {
			"sourceFileName": "src/services/TagsService.ts",
			"qualifiedName": "TagsService.sideTypeList"
		},
		"768": {
			"sourceFileName": "src/services/TagsService.ts",
			"qualifiedName": "TagsService.sideTypeList"
		},
		"771": {
			"sourceFileName": "src/services/TeamsService.ts",
			"qualifiedName": "TeamsService"
		},
		"772": {
			"sourceFileName": "src/services/TeamsService.ts",
			"qualifiedName": "TeamsService.getProjectTeamMembers"
		},
		"773": {
			"sourceFileName": "src/services/TeamsService.ts",
			"qualifiedName": "TeamsService.getProjectTeamMembers"
		},
		"774": {
			"sourceFileName": "src/services/TeamsService.ts",
			"qualifiedName": "idSlug"
		},
		"775": {
			"sourceFileName": "src/services/TeamsService.ts",
			"qualifiedName": "TeamsService.getTeamMembers"
		},
		"776": {
			"sourceFileName": "src/services/TeamsService.ts",
			"qualifiedName": "TeamsService.getTeamMembers"
		},
		"777": {
			"sourceFileName": "src/services/TeamsService.ts",
			"qualifiedName": "id"
		},
		"778": {
			"sourceFileName": "src/services/TeamsService.ts",
			"qualifiedName": "TeamsService.addTeamMember"
		},
		"779": {
			"sourceFileName": "src/services/TeamsService.ts",
			"qualifiedName": "TeamsService.addTeamMember"
		},
		"780": {
			"sourceFileName": "src/services/TeamsService.ts",
			"qualifiedName": "id"
		},
		"781": {
			"sourceFileName": "src/services/TeamsService.ts",
			"qualifiedName": "requestBody"
		},
		"782": {
			"sourceFileName": "src/services/TeamsService.ts",
			"qualifiedName": "TeamsService.getTeams"
		},
		"783": {
			"sourceFileName": "src/services/TeamsService.ts",
			"qualifiedName": "TeamsService.getTeams"
		},
		"784": {
			"sourceFileName": "src/services/TeamsService.ts",
			"qualifiedName": "ids"
		},
		"785": {
			"sourceFileName": "src/services/TeamsService.ts",
			"qualifiedName": "TeamsService.joinTeam"
		},
		"786": {
			"sourceFileName": "src/services/TeamsService.ts",
			"qualifiedName": "TeamsService.joinTeam"
		},
		"787": {
			"sourceFileName": "src/services/TeamsService.ts",
			"qualifiedName": "id"
		},
		"788": {
			"sourceFileName": "src/services/TeamsService.ts",
			"qualifiedName": "TeamsService.modifyTeamMember"
		},
		"789": {
			"sourceFileName": "src/services/TeamsService.ts",
			"qualifiedName": "TeamsService.modifyTeamMember"
		},
		"790": {
			"sourceFileName": "src/services/TeamsService.ts",
			"qualifiedName": "id"
		},
		"791": {
			"sourceFileName": "src/services/TeamsService.ts",
			"qualifiedName": "idUsername"
		},
		"792": {
			"sourceFileName": "src/services/TeamsService.ts",
			"qualifiedName": "requestBody"
		},
		"793": {
			"sourceFileName": "src/services/TeamsService.ts",
			"qualifiedName": "TeamsService.deleteTeamMember"
		},
		"794": {
			"sourceFileName": "src/services/TeamsService.ts",
			"qualifiedName": "TeamsService.deleteTeamMember"
		},
		"795": {
			"sourceFileName": "src/services/TeamsService.ts",
			"qualifiedName": "id"
		},
		"796": {
			"sourceFileName": "src/services/TeamsService.ts",
			"qualifiedName": "idUsername"
		},
		"797": {
			"sourceFileName": "src/services/TeamsService.ts",
			"qualifiedName": "TeamsService.transferTeamOwnership"
		},
		"798": {
			"sourceFileName": "src/services/TeamsService.ts",
			"qualifiedName": "TeamsService.transferTeamOwnership"
		},
		"799": {
			"sourceFileName": "src/services/TeamsService.ts",
			"qualifiedName": "id"
		},
		"800": {
			"sourceFileName": "src/services/TeamsService.ts",
			"qualifiedName": "requestBody"
		},
		"803": {
			"sourceFileName": "src/services/ThreadsService.ts",
			"qualifiedName": "ThreadsService"
		},
		"804": {
			"sourceFileName": "src/services/ThreadsService.ts",
			"qualifiedName": "ThreadsService.submitReport"
		},
		"805": {
			"sourceFileName": "src/services/ThreadsService.ts",
			"qualifiedName": "ThreadsService.submitReport"
		},
		"806": {
			"sourceFileName": "src/services/ThreadsService.ts",
			"qualifiedName": "requestBody"
		},
		"807": {
			"sourceFileName": "src/services/ThreadsService.ts",
			"qualifiedName": "ThreadsService.getOpenReports"
		},
		"808": {
			"sourceFileName": "src/services/ThreadsService.ts",
			"qualifiedName": "ThreadsService.getOpenReports"
		},
		"809": {
			"sourceFileName": "src/services/ThreadsService.ts",
			"qualifiedName": "count"
		},
		"810": {
			"sourceFileName": "src/services/ThreadsService.ts",
			"qualifiedName": "ThreadsService.getReport"
		},
		"811": {
			"sourceFileName": "src/services/ThreadsService.ts",
			"qualifiedName": "ThreadsService.getReport"
		},
		"812": {
			"sourceFileName": "src/services/ThreadsService.ts",
			"qualifiedName": "id"
		},
		"813": {
			"sourceFileName": "src/services/ThreadsService.ts",
			"qualifiedName": "ThreadsService.modifyReport"
		},
		"814": {
			"sourceFileName": "src/services/ThreadsService.ts",
			"qualifiedName": "ThreadsService.modifyReport"
		},
		"815": {
			"sourceFileName": "src/services/ThreadsService.ts",
			"qualifiedName": "id"
		},
		"816": {
			"sourceFileName": "src/services/ThreadsService.ts",
			"qualifiedName": "requestBody"
		},
		"817": {
			"sourceFileName": "src/services/ThreadsService.ts",
			"qualifiedName": "__type"
		},
		"818": {
			"sourceFileName": "src/services/ThreadsService.ts",
			"qualifiedName": "__type.body"
		},
		"819": {
			"sourceFileName": "src/services/ThreadsService.ts",
			"qualifiedName": "__type.closed"
		},
		"820": {
			"sourceFileName": "src/services/ThreadsService.ts",
			"qualifiedName": "ThreadsService.getReports"
		},
		"821": {
			"sourceFileName": "src/services/ThreadsService.ts",
			"qualifiedName": "ThreadsService.getReports"
		},
		"822": {
			"sourceFileName": "src/services/ThreadsService.ts",
			"qualifiedName": "ids"
		},
		"823": {
			"sourceFileName": "src/services/ThreadsService.ts",
			"qualifiedName": "ThreadsService.getThread"
		},
		"824": {
			"sourceFileName": "src/services/ThreadsService.ts",
			"qualifiedName": "ThreadsService.getThread"
		},
		"825": {
			"sourceFileName": "src/services/ThreadsService.ts",
			"qualifiedName": "id"
		},
		"826": {
			"sourceFileName": "src/services/ThreadsService.ts",
			"qualifiedName": "ThreadsService.sendThreadMessage"
		},
		"827": {
			"sourceFileName": "src/services/ThreadsService.ts",
			"qualifiedName": "ThreadsService.sendThreadMessage"
		},
		"828": {
			"sourceFileName": "src/services/ThreadsService.ts",
			"qualifiedName": "id"
		},
		"829": {
			"sourceFileName": "src/services/ThreadsService.ts",
			"qualifiedName": "requestBody"
		},
		"830": {
			"sourceFileName": "src/services/ThreadsService.ts",
			"qualifiedName": "ThreadsService.getThreads"
		},
		"831": {
			"sourceFileName": "src/services/ThreadsService.ts",
			"qualifiedName": "ThreadsService.getThreads"
		},
		"832": {
			"sourceFileName": "src/services/ThreadsService.ts",
			"qualifiedName": "ids"
		},
		"833": {
			"sourceFileName": "src/services/ThreadsService.ts",
			"qualifiedName": "ThreadsService.deleteThreadMessage"
		},
		"834": {
			"sourceFileName": "src/services/ThreadsService.ts",
			"qualifiedName": "ThreadsService.deleteThreadMessage"
		},
		"835": {
			"sourceFileName": "src/services/ThreadsService.ts",
			"qualifiedName": "id"
		},
		"838": {
			"sourceFileName": "src/services/UsersService.ts",
			"qualifiedName": "UsersService"
		},
		"839": {
			"sourceFileName": "src/services/UsersService.ts",
			"qualifiedName": "UsersService.getUser"
		},
		"840": {
			"sourceFileName": "src/services/UsersService.ts",
			"qualifiedName": "UsersService.getUser"
		},
		"841": {
			"sourceFileName": "src/services/UsersService.ts",
			"qualifiedName": "idUsername"
		},
		"842": {
			"sourceFileName": "src/services/UsersService.ts",
			"qualifiedName": "UsersService.modifyUser"
		},
		"843": {
			"sourceFileName": "src/services/UsersService.ts",
			"qualifiedName": "UsersService.modifyUser"
		},
		"844": {
			"sourceFileName": "src/services/UsersService.ts",
			"qualifiedName": "idUsername"
		},
		"845": {
			"sourceFileName": "src/services/UsersService.ts",
			"qualifiedName": "requestBody"
		},
		"846": {
			"sourceFileName": "src/services/UsersService.ts",
			"qualifiedName": "UsersService.getUserFromAuth"
		},
		"847": {
			"sourceFileName": "src/services/UsersService.ts",
			"qualifiedName": "UsersService.getUserFromAuth"
		},
		"848": {
			"sourceFileName": "src/services/UsersService.ts",
			"qualifiedName": "UsersService.getUsers"
		},
		"849": {
			"sourceFileName": "src/services/UsersService.ts",
			"qualifiedName": "UsersService.getUsers"
		},
		"850": {
			"sourceFileName": "src/services/UsersService.ts",
			"qualifiedName": "ids"
		},
		"851": {
			"sourceFileName": "src/services/UsersService.ts",
			"qualifiedName": "UsersService.changeUserIcon"
		},
		"852": {
			"sourceFileName": "src/services/UsersService.ts",
			"qualifiedName": "UsersService.changeUserIcon"
		},
		"853": {
			"sourceFileName": "src/services/UsersService.ts",
			"qualifiedName": "idUsername"
		},
		"854": {
			"sourceFileName": "src/services/UsersService.ts",
			"qualifiedName": "requestBody"
		},
		"855": {
			"sourceFileName": "src/services/UsersService.ts",
			"qualifiedName": "UsersService.getUserProjects"
		},
		"856": {
			"sourceFileName": "src/services/UsersService.ts",
			"qualifiedName": "UsersService.getUserProjects"
		},
		"857": {
			"sourceFileName": "src/services/UsersService.ts",
			"qualifiedName": "idUsername"
		},
		"858": {
			"sourceFileName": "src/services/UsersService.ts",
			"qualifiedName": "UsersService.getFollowedProjects"
		},
		"859": {
			"sourceFileName": "src/services/UsersService.ts",
			"qualifiedName": "UsersService.getFollowedProjects"
		},
		"860": {
			"sourceFileName": "src/services/UsersService.ts",
			"qualifiedName": "idUsername"
		},
		"861": {
			"sourceFileName": "src/services/UsersService.ts",
			"qualifiedName": "UsersService.getPayoutHistory"
		},
		"862": {
			"sourceFileName": "src/services/UsersService.ts",
			"qualifiedName": "UsersService.getPayoutHistory"
		},
		"863": {
			"sourceFileName": "src/services/UsersService.ts",
			"qualifiedName": "idUsername"
		},
		"864": {
			"sourceFileName": "src/services/UsersService.ts",
			"qualifiedName": "UsersService.withdrawPayout"
		},
		"865": {
			"sourceFileName": "src/services/UsersService.ts",
			"qualifiedName": "UsersService.withdrawPayout"
		},
		"866": {
			"sourceFileName": "src/services/UsersService.ts",
			"qualifiedName": "idUsername"
		},
		"867": {
			"sourceFileName": "src/services/UsersService.ts",
			"qualifiedName": "amount"
		},
		"870": {
			"sourceFileName": "src/services/VersionFilesService.ts",
			"qualifiedName": "VersionFilesService"
		},
		"871": {
			"sourceFileName": "src/services/VersionFilesService.ts",
			"qualifiedName": "VersionFilesService.versionFromHash"
		},
		"872": {
			"sourceFileName": "src/services/VersionFilesService.ts",
			"qualifiedName": "VersionFilesService.versionFromHash"
		},
		"873": {
			"sourceFileName": "src/services/VersionFilesService.ts",
			"qualifiedName": "hash"
		},
		"874": {
			"sourceFileName": "src/services/VersionFilesService.ts",
			"qualifiedName": "algorithm"
		},
		"875": {
			"sourceFileName": "src/services/VersionFilesService.ts",
			"qualifiedName": "multiple"
		},
		"876": {
			"sourceFileName": "src/services/VersionFilesService.ts",
			"qualifiedName": "VersionFilesService.deleteFileFromHash"
		},
		"877": {
			"sourceFileName": "src/services/VersionFilesService.ts",
			"qualifiedName": "VersionFilesService.deleteFileFromHash"
		},
		"878": {
			"sourceFileName": "src/services/VersionFilesService.ts",
			"qualifiedName": "hash"
		},
		"879": {
			"sourceFileName": "src/services/VersionFilesService.ts",
			"qualifiedName": "algorithm"
		},
		"880": {
			"sourceFileName": "src/services/VersionFilesService.ts",
			"qualifiedName": "versionId"
		},
		"881": {
			"sourceFileName": "src/services/VersionFilesService.ts",
			"qualifiedName": "VersionFilesService.getLatestVersionFromHash"
		},
		"882": {
			"sourceFileName": "src/services/VersionFilesService.ts",
			"qualifiedName": "VersionFilesService.getLatestVersionFromHash"
		},
		"883": {
			"sourceFileName": "src/services/VersionFilesService.ts",
			"qualifiedName": "hash"
		},
		"884": {
			"sourceFileName": "src/services/VersionFilesService.ts",
			"qualifiedName": "algorithm"
		},
		"885": {
			"sourceFileName": "src/services/VersionFilesService.ts",
			"qualifiedName": "requestBody"
		},
		"886": {
			"sourceFileName": "src/services/VersionFilesService.ts",
			"qualifiedName": "VersionFilesService.versionsFromHashes"
		},
		"887": {
			"sourceFileName": "src/services/VersionFilesService.ts",
			"qualifiedName": "VersionFilesService.versionsFromHashes"
		},
		"888": {
			"sourceFileName": "src/services/VersionFilesService.ts",
			"qualifiedName": "requestBody"
		},
		"889": {
			"sourceFileName": "src/services/VersionFilesService.ts",
			"qualifiedName": "VersionFilesService.getLatestVersionsFromHashes"
		},
		"890": {
			"sourceFileName": "src/services/VersionFilesService.ts",
			"qualifiedName": "VersionFilesService.getLatestVersionsFromHashes"
		},
		"891": {
			"sourceFileName": "src/services/VersionFilesService.ts",
			"qualifiedName": "requestBody"
		},
		"894": {
			"sourceFileName": "src/services/VersionsService.ts",
			"qualifiedName": "VersionsService"
		},
		"895": {
			"sourceFileName": "src/services/VersionsService.ts",
			"qualifiedName": "VersionsService.getProjectVersions"
		},
		"896": {
			"sourceFileName": "src/services/VersionsService.ts",
			"qualifiedName": "VersionsService.getProjectVersions"
		},
		"897": {
			"sourceFileName": "src/services/VersionsService.ts",
			"qualifiedName": "idSlug"
		},
		"898": {
			"sourceFileName": "src/services/VersionsService.ts",
			"qualifiedName": "loaders"
		},
		"899": {
			"sourceFileName": "src/services/VersionsService.ts",
			"qualifiedName": "gameVersions"
		},
		"900": {
			"sourceFileName": "src/services/VersionsService.ts",
			"qualifiedName": "featured"
		},
		"901": {
			"sourceFileName": "src/services/VersionsService.ts",
			"qualifiedName": "VersionsService.getVersion"
		},
		"902": {
			"sourceFileName": "src/services/VersionsService.ts",
			"qualifiedName": "VersionsService.getVersion"
		},
		"903": {
			"sourceFileName": "src/services/VersionsService.ts",
			"qualifiedName": "id"
		},
		"904": {
			"sourceFileName": "src/services/VersionsService.ts",
			"qualifiedName": "VersionsService.modifyVersion"
		},
		"905": {
			"sourceFileName": "src/services/VersionsService.ts",
			"qualifiedName": "VersionsService.modifyVersion"
		},
		"906": {
			"sourceFileName": "src/services/VersionsService.ts",
			"qualifiedName": "id"
		},
		"907": {
			"sourceFileName": "src/services/VersionsService.ts",
			"qualifiedName": "requestBody"
		},
		"908": {
			"sourceFileName": "src/services/VersionsService.ts",
			"qualifiedName": "VersionsService.deleteVersion"
		},
		"909": {
			"sourceFileName": "src/services/VersionsService.ts",
			"qualifiedName": "VersionsService.deleteVersion"
		},
		"910": {
			"sourceFileName": "src/services/VersionsService.ts",
			"qualifiedName": "id"
		},
		"911": {
			"sourceFileName": "src/services/VersionsService.ts",
			"qualifiedName": "VersionsService.getVersionFromIdOrNumber"
		},
		"912": {
			"sourceFileName": "src/services/VersionsService.ts",
			"qualifiedName": "VersionsService.getVersionFromIdOrNumber"
		},
		"913": {
			"sourceFileName": "src/services/VersionsService.ts",
			"qualifiedName": "idSlug"
		},
		"914": {
			"sourceFileName": "src/services/VersionsService.ts",
			"qualifiedName": "idNumber"
		},
		"915": {
			"sourceFileName": "src/services/VersionsService.ts",
			"qualifiedName": "VersionsService.createVersion"
		},
		"916": {
			"sourceFileName": "src/services/VersionsService.ts",
			"qualifiedName": "VersionsService.createVersion"
		},
		"917": {
			"sourceFileName": "src/services/VersionsService.ts",
			"qualifiedName": "formData"
		},
		"918": {
			"sourceFileName": "src/services/VersionsService.ts",
			"qualifiedName": "VersionsService.scheduleVersion"
		},
		"919": {
			"sourceFileName": "src/services/VersionsService.ts",
			"qualifiedName": "VersionsService.scheduleVersion"
		},
		"920": {
			"sourceFileName": "src/services/VersionsService.ts",
			"qualifiedName": "id"
		},
		"921": {
			"sourceFileName": "src/services/VersionsService.ts",
			"qualifiedName": "requestBody"
		},
		"922": {
			"sourceFileName": "src/services/VersionsService.ts",
			"qualifiedName": "VersionsService.getVersions"
		},
		"923": {
			"sourceFileName": "src/services/VersionsService.ts",
			"qualifiedName": "VersionsService.getVersions"
		},
		"924": {
			"sourceFileName": "src/services/VersionsService.ts",
			"qualifiedName": "ids"
		},
		"925": {
			"sourceFileName": "src/services/VersionsService.ts",
			"qualifiedName": "VersionsService.addFilesToVersion"
		},
		"926": {
			"sourceFileName": "src/services/VersionsService.ts",
			"qualifiedName": "VersionsService.addFilesToVersion"
		},
		"927": {
			"sourceFileName": "src/services/VersionsService.ts",
			"qualifiedName": "id"
		},
		"928": {
			"sourceFileName": "src/services/VersionsService.ts",
			"qualifiedName": "formData"
		},
		"929": {
			"sourceFileName": "src/services/VersionsService.ts",
			"qualifiedName": "__type"
		},
		"930": {
			"sourceFileName": "src/services/VersionsService.ts",
			"qualifiedName": "__type.data"
		}
	}
}